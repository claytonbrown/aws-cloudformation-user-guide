{
    "accessanalyzer.analyzer.archiverule.Filter": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "accessanalyzer.analyzer.archiverule.Filter",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.archiverule.RuleName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "accessanalyzer.analyzer.archiverule.RuleName",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.Contains": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.Contains",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.Eq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.Eq",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.Exists": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "accessanalyzer.analyzer.filter.Exists",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.Neq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.Neq",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.Property": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "accessanalyzer.analyzer.filter.Property",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificate.validity.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "acmpca.certificate.validity.Type",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificate.validity.Value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "acmpca.certificate.validity.Value",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.crlconfiguration.CustomCname": {
        "Maximum": "253",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "acmpca.certificateauthority.crlconfiguration.CustomCname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.crlconfiguration.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.crlconfiguration.Enabled",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.crlconfiguration.ExpirationInDays": {
        "Maximum": "5000",
        "Minimum": "1",
        "Pattern": "^[1,5000]}$",
        "Required": "No",
        "SampleValue": "1...5000",
        "Type": "Integer",
        "UniqueKey": "acmpca.certificateauthority.crlconfiguration.ExpirationInDays",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.crlconfiguration.S3BucketName": {
        "Maximum": "255",
        "Minimum": "3",
        "Required": "No",
        "UniqueKey": "acmpca.certificateauthority.crlconfiguration.S3BucketName",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.revocationconfiguration.CrlConfiguration": {
        "Required": "No",
        "Type": "CrlConfiguration",
        "UniqueKey": "acmpca.certificateauthority.revocationconfiguration.CrlConfiguration",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.CommonName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.CommonName",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.Country": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.Country",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.DistinguishedNameQualifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.DistinguishedNameQualifier",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.GenerationQualifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.GenerationQualifier",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.GivenName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.GivenName",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.Initials": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.Initials",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.Locality": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.Locality",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.Organization": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.Organization",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.OrganizationalUnit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.OrganizationalUnit",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.Pseudonym": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.Pseudonym",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.SerialNumber": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.SerialNumber",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.State": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.State",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.Surname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.Surname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.Title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.Title",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.configurationid.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.configurationid.Id",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.configurationid.Revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "amazonmq.broker.configurationid.Revision",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.encryptionoptions.KmsKeyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.encryptionoptions.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.encryptionoptions.UseAwsOwnedKey": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.encryptionoptions.UseAwsOwnedKey",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.interbrokercred.Password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.interbrokercred.Password",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.interbrokercred.Username": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.interbrokercred.Username",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapmetadata.InterBrokerCreds": {
        "Required": "No",
        "Type": "List of [InterBrokerCred",
        "UniqueKey": "amazonmq.broker.ldapmetadata.InterBrokerCreds",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapmetadata.ServerMetadata": {
        "Required": "Yes",
        "Type": "ServerMetadata",
        "UniqueKey": "amazonmq.broker.ldapmetadata.ServerMetadata",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.Hosts": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.Hosts",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.RoleBase": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.RoleBase",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.RoleName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.RoleName",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.RoleSearchMatching": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.RoleSearchMatching",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.RoleSearchSubtree": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.RoleSearchSubtree",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.ServiceAccountPassword": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.ServiceAccountPassword",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.ServiceAccountUsername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.ServiceAccountUsername",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.UserBase": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.UserBase",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.UserRoleName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.UserRoleName",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.UserSearchMatching": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.UserSearchMatching",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.UserSearchSubtree": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.UserSearchSubtree",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.loglist.Audit": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.loglist.Audit",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.loglist.General": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.loglist.General",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.maintenancewindow.DayOfWeek": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.DayOfWeek",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.maintenancewindow.TimeOfDay": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.TimeOfDay",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.maintenancewindow.TimeZone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.TimeZone",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.Hosts": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "amazonmq.broker.servermetadata.Hosts",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.RoleBase": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.RoleBase",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.RoleName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.RoleName",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.RoleSearchMatching": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.RoleSearchMatching",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.RoleSearchSubtree": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.servermetadata.RoleSearchSubtree",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.ServiceAccountPassword": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.ServiceAccountPassword",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.ServiceAccountUsername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.ServiceAccountUsername",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.UserBase": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.UserBase",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.UserRoleName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.UserRoleName",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.UserSearchMatching": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.UserSearchMatching",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.UserSearchSubtree": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.servermetadata.UserSearchSubtree",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.tagsentry.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.tagsentry.Key",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.tagsentry.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.tagsentry.Value",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.user.ConsoleAccess": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.user.ConsoleAccess",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.user.Groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "amazonmq.broker.user.Groups",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.user.Password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.user.Password",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.user.Username": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.user.Username",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.configuration.tagsentry.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configuration.tagsentry.Key",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.configuration.tagsentry.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configuration.tagsentry.Value",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.configurationassociation.configurationid.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configurationassociation.configurationid.Id",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.configurationassociation.configurationid.Revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "amazonmq.configurationassociation.configurationid.Revision",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.AutoBranchCreationPatterns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.AutoBranchCreationPatterns",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.BasicAuthConfig": {
        "Required": "No",
        "Type": "BasicAuthConfig",
        "UniqueKey": "amplify.app.autobranchcreationconfig.BasicAuthConfig",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.BuildSpec": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.BuildSpec",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.EnableAutoBranchCreation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.autobranchcreationconfig.EnableAutoBranchCreation",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.EnableAutoBuild": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.autobranchcreationconfig.EnableAutoBuild",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.EnablePullRequestPreview": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "amplify.app.autobranchcreationconfig.EnablePullRequestPreview",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.EnvironmentVariables": {
        "Required": "No",
        "Type": "List of [EnvironmentVariable",
        "UniqueKey": "amplify.app.autobranchcreationconfig.EnvironmentVariables",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.PullRequestEnvironmentName": {
        "Required": "No",
        "SampleValue": "TODO-PullRequestEnvironmentName",
        "UniqueKey": "amplify.app.autobranchcreationconfig.PullRequestEnvironmentName",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.Stage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.Stage",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.basicauthconfig.EnableBasicAuth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.basicauthconfig.EnableBasicAuth",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.basicauthconfig.Password": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.basicauthconfig.Password",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.basicauthconfig.Username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.basicauthconfig.Username",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.customrule.Condition": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.Condition",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.customrule.Source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.Source",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.customrule.Status": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.Status",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.customrule.Target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.Target",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.environmentvariable.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.environmentvariable.Name",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.environmentvariable.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.environmentvariable.Value",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.basicauthconfig.EnableBasicAuth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.branch.basicauthconfig.EnableBasicAuth",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.basicauthconfig.Password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.basicauthconfig.Password",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.basicauthconfig.Username": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.basicauthconfig.Username",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.environmentvariable.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.environmentvariable.Name",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.environmentvariable.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.environmentvariable.Value",
        "UpdateRequires": "Replacement"
    },
    "amplify.domain.subdomainsetting.BranchName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.domain.subdomainsetting.BranchName",
        "UpdateRequires": "Replacement"
    },
    "amplify.domain.subdomainsetting.Prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.domain.subdomainsetting.Prefix",
        "UpdateRequires": "Replacement"
    },
    "apigateway.apikey.stagekey.RestApiId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.apikey.stagekey.RestApiId",
        "UpdateRequires": "Replacement"
    },
    "apigateway.apikey.stagekey.StageName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.apikey.stagekey.StageName",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.accesslogsetting.DestinationArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.accesslogsetting.DestinationArn",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.accesslogsetting.Format": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.accesslogsetting.Format",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.canarysetting.PercentTraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.deployment.canarysetting.PercentTraffic",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.canarysetting.StageVariableOverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.canarysetting.StageVariableOverrides",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.canarysetting.UseStageCache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.canarysetting.UseStageCache",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.deploymentcanarysettings.PercentTraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.PercentTraffic",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.deploymentcanarysettings.StageVariableOverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.StageVariableOverrides",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.deploymentcanarysettings.UseStageCache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.UseStageCache",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.AccessLogSetting": {
        "Required": "No",
        "Type": "AccessLogSetting",
        "UniqueKey": "apigateway.deployment.stagedescription.AccessLogSetting",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.CacheClusterEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.CacheClusterEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.CacheClusterSize": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.CacheClusterSize",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.CacheDataEncrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.CacheDataEncrypted",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.CacheTtlInSeconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.deployment.stagedescription.CacheTtlInSeconds",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.CachingEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.CachingEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.CanarySetting": {
        "Required": "No",
        "Type": "CanarySetting",
        "UniqueKey": "apigateway.deployment.stagedescription.CanarySetting",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.ClientCertificateId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.ClientCertificateId",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.DataTraceEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.DataTraceEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.Description",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.DocumentationVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.DocumentationVersion",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.LoggingLevel": {
        "Required": "No",
        "SampleValue": "TODO-LoggingLevel",
        "UniqueKey": "apigateway.deployment.stagedescription.LoggingLevel",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.MethodSettings": {
        "Required": "No",
        "Type": "List of [MethodSetting",
        "UniqueKey": "apigateway.deployment.stagedescription.MethodSettings",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.MetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.MetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "apigateway.deployment.stagedescription.Tags",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.ThrottlingBurstLimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingBurstLimit",
        "UniqueKey": "apigateway.deployment.stagedescription.ThrottlingBurstLimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.ThrottlingRateLimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingRateLimit",
        "UniqueKey": "apigateway.deployment.stagedescription.ThrottlingRateLimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.TracingEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.TracingEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.Variables": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.stagedescription.Variables",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.CacheDataEncrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.CacheDataEncrypted",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.CacheTtlInSeconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.CacheTtlInSeconds",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.CachingEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.CachingEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.DataTraceEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.DataTraceEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.HttpMethod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.HttpMethod",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.LoggingLevel": {
        "Required": "No",
        "SampleValue": "TODO-LoggingLevel",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.LoggingLevel",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.MetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.MetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.ResourcePath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.ResourcePath",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.ThrottlingBurstLimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingBurstLimit",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.ThrottlingBurstLimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.ThrottlingRateLimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingRateLimit",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.ThrottlingRateLimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.Method": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.Method",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.Name",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.Path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.Path",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.StatusCode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.StatusCode",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.Type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.Type",
        "UpdateRequires": "Replacement"
    },
    "apigateway.domainname.endpointconfiguration.Types": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.domainname.endpointconfiguration.Types",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.endpointconfiguration.Types": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.restapi.endpointconfiguration.Types",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.endpointconfiguration.VpcEndpointIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.restapi.endpointconfiguration.VpcEndpointIds",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.s3location.Bucket": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.Bucket",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.s3location.ETag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.ETag",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.s3location.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.Key",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.s3location.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.Version",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.accesslogsetting.DestinationArn": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigateway.stage.accesslogsetting.DestinationArn",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.accesslogsetting.Format": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigateway.stage.accesslogsetting.Format",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.canarysetting.DeploymentId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.stage.canarysetting.DeploymentId",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.canarysetting.PercentTraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.stage.canarysetting.PercentTraffic",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.canarysetting.StageVariableOverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.stage.canarysetting.StageVariableOverrides",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.canarysetting.UseStageCache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.stage.canarysetting.UseStageCache",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.apistage.ApiId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.usageplan.apistage.ApiId",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.apistage.Stage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.usageplan.apistage.Stage",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.apistage.Throttle": {
        "Required": "No",
        "Type": "Map of [ThrottleSettings",
        "UniqueKey": "apigateway.usageplan.apistage.Throttle",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.quotasettings.Limit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.usageplan.quotasettings.Limit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.quotasettings.Offset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.usageplan.quotasettings.Offset",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.quotasettings.Period": {
        "Required": "No",
        "SampleValue": "TODO-Period",
        "UniqueKey": "apigateway.usageplan.quotasettings.Period",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.throttlesettings.BurstLimit": {
        "Required": "No",
        "SampleValue": "TODO-BurstLimit",
        "UniqueKey": "apigateway.usageplan.throttlesettings.BurstLimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.throttlesettings.RateLimit": {
        "Required": "No",
        "SampleValue": "TODO-RateLimit",
        "UniqueKey": "apigateway.usageplan.throttlesettings.RateLimit",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.bodys3location.Bucket": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.Bucket",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.bodys3location.Etag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.Etag",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.bodys3location.Key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.Key",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.bodys3location.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.Version",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.AllowCredentials": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.api.cors.AllowCredentials",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.AllowHeaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.AllowHeaders",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.AllowMethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.AllowMethods",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.AllowOrigins": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.AllowOrigins",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.ExposeHeaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.ExposeHeaders",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.MaxAge": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.api.cors.MaxAge",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.DestinationArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.DestinationArn",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.Format": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.Format",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.Description",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.IntegrationMethod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.IntegrationMethod",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.PayloadFormatVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.PayloadFormatVersion",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.TimeoutInMillis": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.TimeoutInMillis",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizationScopes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizationScopes",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizationType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizationType",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizerId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizerId",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.OperationName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.OperationName",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.Target": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.Target",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.DataTraceEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.DataTraceEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.DetailedMetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.DetailedMetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.LoggingLevel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.LoggingLevel",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.ThrottlingBurstLimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.ThrottlingBurstLimit",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.ThrottlingRateLimit": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.ThrottlingRateLimit",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.AccessLogSettings": {
        "Required": "No",
        "Type": "AccessLogSettings",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.AccessLogSettings",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.AutoDeploy": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.AutoDeploy",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.DefaultRouteSettings": {
        "Required": "No",
        "Type": "RouteSettings",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.DefaultRouteSettings",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.Description",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.RouteSettings": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.RouteSettings",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.StageVariables": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.StageVariables",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.authorizer.jwtconfiguration.Audience": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.authorizer.jwtconfiguration.Audience",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.authorizer.jwtconfiguration.Issuer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.authorizer.jwtconfiguration.Issuer",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.domainnameconfiguration.CertificateArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.domainnameconfiguration.CertificateName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.CertificateName",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.domainnameconfiguration.EndpointType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.EndpointType",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.integration.tlsconfig.ServerNameToVerify": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.integration.tlsconfig.ServerNameToVerify",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.route.parameterconstraints.Required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.route.parameterconstraints.Required",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.routeresponse.parameterconstraints.Required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.routeresponse.parameterconstraints.Required",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.accesslogsettings.DestinationArn": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.accesslogsettings.DestinationArn",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.accesslogsettings.Format": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.accesslogsettings.Format",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.DataTraceEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.stage.routesettings.DataTraceEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.DetailedMetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.stage.routesettings.DetailedMetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.LoggingLevel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.routesettings.LoggingLevel",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.ThrottlingBurstLimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.stage.routesettings.ThrottlingBurstLimit",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.ThrottlingRateLimit": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigatewayv2.stage.routesettings.ThrottlingRateLimit",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.\"application/json\": \"{\\n \\\"statusCode\\\": 200\\n}\"": {
        "Required": "No",
        "SampleValue": "TODO-\"application/json\": \"{\\n \\\"statusCode\\\": 200\\n}\"",
        "UniqueKey": "apitgateway.method.integration.\"application/json\": \"{\\n \\\"statusCode\\\": 200\\n}\"",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.CacheKeyParameters": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apitgateway.method.integration.CacheKeyParameters",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.CacheNamespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.CacheNamespace",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.ConnectionId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.ConnectionId",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.ConnectionType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.ConnectionType",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.ContentHandling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.ContentHandling",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.Credentials": {
        "Required": "No",
        "SampleValue": "TODO-Credentials",
        "UniqueKey": "apitgateway.method.integration.Credentials",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.IntegrationHttpMethod": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.IntegrationHttpMethod",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.IntegrationResponses": {
        "Required": "No",
        "Type": "List of [IntegrationResponse",
        "UniqueKey": "apitgateway.method.integration.IntegrationResponses",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.PassthroughBehavior": {
        "Required": "No",
        "SampleValue": "TODO-PassthroughBehavior",
        "UniqueKey": "apitgateway.method.integration.PassthroughBehavior",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.RequestParameters": {
        "Required": "No",
        "SampleValue": "TODO-RequestParameters",
        "UniqueKey": "apitgateway.method.integration.RequestParameters",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.RequestTemplates": {
        "UniqueKey": "apitgateway.method.integration.RequestTemplates"
    },
    "apitgateway.method.integration.TimeoutInMillis": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apitgateway.method.integration.TimeoutInMillis",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.Type": {
        "Required": "No",
        "SampleValue": "TODO-Type",
        "UniqueKey": "apitgateway.method.integration.Type",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.Uri": {
        "Required": "Conditional",
        "SampleValue": "TODO-Uri",
        "UniqueKey": "apitgateway.method.integration.Uri",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.ContentHandling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.ContentHandling",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.ResponseParameters": {
        "Required": "No",
        "SampleValue": "TODO-ResponseParameters",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.ResponseParameters",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.ResponseTemplates": {
        "Required": "No",
        "SampleValue": "TODO-ResponseTemplates",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.ResponseTemplates",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.SelectionPattern": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.SelectionPattern",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.StatusCode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.StatusCode",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.methodresponse.ResponseModels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apitgateway.method.methodresponse.ResponseModels",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.methodresponse.ResponseParameters": {
        "Required": "No",
        "SampleValue": "TODO-ResponseParameters",
        "UniqueKey": "apitgateway.method.methodresponse.ResponseParameters",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.methodresponse.StatusCode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "apitgateway.method.methodresponse.StatusCode",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.CacheDataEncrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.CacheDataEncrypted",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.CacheTtlInSeconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apitgateway.stage.methodsetting.CacheTtlInSeconds",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.CachingEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.CachingEnabled",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.DataTraceEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.DataTraceEnabled",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.HttpMethod": {
        "Required": "No",
        "SampleValue": "TODO-HttpMethod",
        "UniqueKey": "apitgateway.stage.methodsetting.HttpMethod",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.LoggingLevel": {
        "Required": "No",
        "SampleValue": "TODO-LoggingLevel",
        "UniqueKey": "apitgateway.stage.methodsetting.LoggingLevel",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.MetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.MetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.ResourcePath": {
        "Required": "No",
        "SampleValue": "TODO-ResourcePath",
        "UniqueKey": "apitgateway.stage.methodsetting.ResourcePath",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.ThrottlingBurstLimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingBurstLimit",
        "UniqueKey": "apitgateway.stage.methodsetting.ThrottlingBurstLimit",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.ThrottlingRateLimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingRateLimit",
        "UniqueKey": "apitgateway.stage.methodsetting.ThrottlingRateLimit",
        "UpdateRequires": "Replacement"
    },
    "appconfig.application.tags.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.application.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.application.tags.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.application.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "appconfig.configurationprofile.tags.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.configurationprofile.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.configurationprofile.tags.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.configurationprofile.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "appconfig.configurationprofile.validators.Content": {
        "Maximum": "32768",
        "Minimum": "0",
        "Pattern": "^.{0,32768}$",
        "Required": "No",
        "SampleValue": "TODO-appconfig.configurationprofile.validators.Content",
        "Type": "String",
        "UniqueKey": "appconfig.configurationprofile.validators.Content",
        "UpdateRequires": "Replacement"
    },
    "appconfig.configurationprofile.validators.Type": {
        "Allowed values": "JSON_SCHEMA | LAMBDA",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.configurationprofile.validators.Type",
        "UpdateRequires": "Replacement"
    },
    "appconfig.deployment.tags.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.deployment.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.deployment.tags.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.deployment.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "appconfig.deploymentstrategy.tags.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.deploymentstrategy.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.deploymentstrategy.tags.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.deploymentstrategy.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "appconfig.environment.monitors.AlarmArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.environment.monitors.AlarmArn",
        "UpdateRequires": "Replacement"
    },
    "appconfig.environment.monitors.AlarmRoleArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.environment.monitors.AlarmRoleArn",
        "UpdateRequires": "Replacement"
    },
    "appconfig.environment.tags.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.environment.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.environment.tags.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.environment.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scalabletargetaction.MaxCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalabletarget.scalabletargetaction.MaxCapacity",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scalabletargetaction.MinCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalabletarget.scalabletargetaction.MinCapacity",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.EndTime": {
        "Required": "No",
        "Type": "Timestamp",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.EndTime",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.ScalableTargetAction": {
        "Required": "No",
        "Type": "ScalableTargetAction",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.ScalableTargetAction",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.Schedule": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.Schedule",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.ScheduledActionName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.ScheduledActionName",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.StartTime": {
        "Required": "No",
        "Type": "Timestamp",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.StartTime",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.DynamicScalingInSuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.DynamicScalingInSuspended",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.DynamicScalingOutSuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.DynamicScalingOutSuspended",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.ScheduledScalingSuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.ScheduledScalingSuspended",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.Dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.MetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.MetricName",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.Namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.Namespace",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.Statistic": {
        "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.Statistic",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.Unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.Unit",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.metricdimension.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.metricdimension.Name",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.metricdimension.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.metricdimension.Value",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.predefinedmetricspecification.PredefinedMetricType": {
        "Allowed values": "ALBRequestCountPerTarget | AppStreamAverageCapacityUtilization | CassandraReadCapacityUtilization | CassandraWriteCapacityUtilization | ComprehendInferenceUtilization | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | LambdaProvisionedConcurrencyUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections | SageMakerVariantInvocationsPerInstance",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.predefinedmetricspecification.PredefinedMetricType",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.predefinedmetricspecification.ResourceLabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-applicationautoscaling.scalingpolicy.predefinedmetricspecification.ResourceLabel",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.predefinedmetricspecification.ResourceLabel",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.AdjustmentType": {
        "Allowed values": "ChangeInCapacity | ExactCapacity | PercentChangeInCapacity",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.AdjustmentType",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.Cooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.Cooldown",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MetricAggregationType": {
        "Allowed values": "Average | Maximum | Minimum",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MetricAggregationType",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MinAdjustmentMagnitude": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MinAdjustmentMagnitude",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.StepAdjustments": {
        "Required": "No",
        "Type": "List of [StepAdjustment",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.StepAdjustments",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.MetricIntervalLowerBound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.MetricIntervalLowerBound",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.MetricIntervalUpperBound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.MetricIntervalUpperBound",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.ScalingAdjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.ScalingAdjustment",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.CustomizedMetricSpecification": {
        "Required": "No",
        "Type": "CustomizedMetricSpecification",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.CustomizedMetricSpecification",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.DisableScaleIn": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.DisableScaleIn",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.PredefinedMetricSpecification": {
        "Required": "No",
        "Type": "PredefinedMetricSpecification",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.PredefinedMetricSpecification",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.ScaleInCooldown": {
        "Required": "No",
        "SampleValue": "TODO-ScaleInCooldown",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.ScaleInCooldown",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.ScaleOutCooldown": {
        "Required": "No",
        "SampleValue": "TODO-ScaleOutCooldown",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.ScaleOutCooldown",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.TargetValue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.TargetValue",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.alarm.AlarmName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.alarm.AlarmName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.alarm.Severity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.alarm.Severity",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.alarmmetric.AlarmMetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.alarmmetric.AlarmMetricName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentconfiguration.ConfigurationDetails": {
        "Required": "No",
        "Type": "ConfigurationDetails",
        "UniqueKey": "applicationinsights.application.componentconfiguration.ConfigurationDetails",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentconfiguration.SubComponentTypeConfigurations": {
        "Required": "No",
        "Type": "List of [SubComponentTypeConfiguration",
        "UniqueKey": "applicationinsights.application.componentconfiguration.SubComponentTypeConfigurations",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.ComponentARN": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.ComponentARN",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.ComponentConfigurationMode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.ComponentConfigurationMode",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.ComponentName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.ComponentName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.CustomComponentConfiguration": {
        "Required": "No",
        "Type": "ComponentConfiguration",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.CustomComponentConfiguration",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.DefaultOverwriteComponentConfiguration": {
        "Required": "No",
        "Type": "ComponentConfiguration",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.DefaultOverwriteComponentConfiguration",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.Tier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.Tier",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.AlarmMetrics": {
        "Required": "No",
        "Type": "List of [AlarmMetric",
        "UniqueKey": "applicationinsights.application.configurationdetails.AlarmMetrics",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.Alarms": {
        "Required": "No",
        "Type": "List of [Alarm",
        "UniqueKey": "applicationinsights.application.configurationdetails.Alarms",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.Logs": {
        "Required": "No",
        "Type": "List of [Log",
        "UniqueKey": "applicationinsights.application.configurationdetails.Logs",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.WindowsEvents": {
        "Required": "No",
        "Type": "List of [WindowsEvent",
        "UniqueKey": "applicationinsights.application.configurationdetails.WindowsEvents",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.customcomponent.ComponentName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\d\\w\\-_\\.+]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.customcomponent.ComponentName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.customcomponent.ResourceList": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "applicationinsights.application.customcomponent.ResourceList",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.Encoding": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.Encoding",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.LogGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.LogGroupName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.LogPath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.LogPath",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.LogType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.LogType",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.PatternSet": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.PatternSet",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpattern.Pattern": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "^.{1,50}$",
        "Required": "Yes",
        "SampleValue": "TODO-applicationinsights.application.logpattern.Pattern",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.logpattern.Pattern",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpattern.PatternName": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9\\.\\-_]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.logpattern.PatternName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpattern.Rank": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "applicationinsights.application.logpattern.Rank",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpatternset.LogPatterns": {
        "Required": "Yes",
        "Type": "List of [LogPattern",
        "UniqueKey": "applicationinsights.application.logpatternset.LogPatterns",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpatternset.PatternSetName": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9\\.\\-_]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.logpatternset.PatternSetName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponentconfigurationdetails.AlarmMetrics": {
        "Required": "No",
        "Type": "List of [AlarmMetric",
        "UniqueKey": "applicationinsights.application.subcomponentconfigurationdetails.AlarmMetrics",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponentconfigurationdetails.Logs": {
        "Required": "No",
        "Type": "List of [Log",
        "UniqueKey": "applicationinsights.application.subcomponentconfigurationdetails.Logs",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponentconfigurationdetails.WindowsEvents": {
        "Required": "No",
        "Type": "List of [WindowsEvent",
        "UniqueKey": "applicationinsights.application.subcomponentconfigurationdetails.WindowsEvents",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponenttypeconfiguration.SubComponentConfigurationDetails": {
        "Required": "Yes",
        "Type": "SubComponentConfigurationDetails",
        "UniqueKey": "applicationinsights.application.subcomponenttypeconfiguration.SubComponentConfigurationDetails",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponenttypeconfiguration.SubComponentType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.subcomponenttypeconfiguration.SubComponentType",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.windowsevent.EventLevels": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "applicationinsights.application.windowsevent.EventLevels",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.windowsevent.EventName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.windowsevent.EventName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.windowsevent.LogGroupName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.windowsevent.LogGroupName",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.windowsevent.PatternSet": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.windowsevent.PatternSet",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutespec.GrpcRoute": {
        "Required": "No",
        "Type": "GrpcGatewayRoute",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutespec.GrpcRoute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutespec.Http2Route": {
        "Required": "No",
        "Type": "HttpGatewayRoute",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutespec.Http2Route",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutespec.HttpRoute": {
        "Required": "No",
        "Type": "HttpGatewayRoute",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutespec.HttpRoute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutetarget.VirtualService": {
        "Required": "Yes",
        "Type": "GatewayRouteVirtualService",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutetarget.VirtualService",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutevirtualservice.VirtualServiceName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutevirtualservice.VirtualServiceName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.grpcgatewayroute.Action": {
        "Required": "Yes",
        "Type": "GrpcGatewayRouteAction",
        "UniqueKey": "appmesh.gatewayroute.grpcgatewayroute.Action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.grpcgatewayroute.Match": {
        "Required": "Yes",
        "Type": "GrpcGatewayRouteMatch",
        "UniqueKey": "appmesh.gatewayroute.grpcgatewayroute.Match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.grpcgatewayrouteaction.Target": {
        "Required": "Yes",
        "Type": "GatewayRouteTarget",
        "UniqueKey": "appmesh.gatewayroute.grpcgatewayrouteaction.Target",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.grpcgatewayroutematch.ServiceName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.gatewayroute.grpcgatewayroutematch.ServiceName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.httpgatewayroute.Action": {
        "Required": "Yes",
        "Type": "HttpGatewayRouteAction",
        "UniqueKey": "appmesh.gatewayroute.httpgatewayroute.Action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.httpgatewayroute.Match": {
        "Required": "Yes",
        "Type": "HttpGatewayRouteMatch",
        "UniqueKey": "appmesh.gatewayroute.httpgatewayroute.Match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.httpgatewayrouteaction.Target": {
        "Required": "Yes",
        "Type": "GatewayRouteTarget",
        "UniqueKey": "appmesh.gatewayroute.httpgatewayrouteaction.Target",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.httpgatewayroutematch.Prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.gatewayroute.httpgatewayroutematch.Prefix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.mesh.egressfilter.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "appmesh.mesh.egressfilter.Type",
        "UpdateRequires": "Replacement"
    },
    "appmesh.mesh.meshspec.EgressFilter": {
        "Required": "No",
        "Type": "EgressFilter",
        "UniqueKey": "appmesh.mesh.meshspec.EgressFilter",
        "UpdateRequires": "Replacement"
    },
    "appmesh.mesh.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.mesh.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.mesh.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.mesh.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.duration.Unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.duration.Unit",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.duration.Value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.duration.Value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.GrpcRetryEvents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.grpcretrypolicy.GrpcRetryEvents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.HttpRetryEvents": {
        "Required": "No",
        "SampleValue": "TODO-HttpRetryEvents",
        "UniqueKey": "appmesh.route.grpcretrypolicy.HttpRetryEvents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.MaxRetries": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.grpcretrypolicy.MaxRetries",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.PerRetryTimeout": {
        "Required": "Yes",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.grpcretrypolicy.PerRetryTimeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.TcpRetryEvents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.grpcretrypolicy.TcpRetryEvents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroute.Action": {
        "Required": "Yes",
        "Type": "GrpcRouteAction",
        "UniqueKey": "appmesh.route.grpcroute.Action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroute.Match": {
        "Required": "Yes",
        "Type": "GrpcRouteMatch",
        "UniqueKey": "appmesh.route.grpcroute.Match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroute.RetryPolicy": {
        "Required": "No",
        "Type": "GrpcRetryPolicy",
        "UniqueKey": "appmesh.route.grpcroute.RetryPolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroute.Timeout": {
        "Required": "No",
        "Type": "GrpcTimeout",
        "UniqueKey": "appmesh.route.grpcroute.Timeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcrouteaction.WeightedTargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.grpcrouteaction.WeightedTargets",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutematch.Metadata": {
        "Required": "No",
        "Type": "List of [GrpcRouteMetadata",
        "UniqueKey": "appmesh.route.grpcroutematch.Metadata",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutematch.MethodName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutematch.MethodName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutematch.ServiceName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutematch.ServiceName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadata.Invert": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.route.grpcroutemetadata.Invert",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadata.Match": {
        "Required": "No",
        "Type": "GrpcRouteMetadataMatchMethod",
        "UniqueKey": "appmesh.route.grpcroutemetadata.Match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadata.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadata.Name",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.Exact": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.Exact",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.Prefix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.Range": {
        "Required": "No",
        "Type": "MatchRange",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.Range",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.Regex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.Regex",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.Suffix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.Suffix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpctimeout.Idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.grpctimeout.Idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpctimeout.PerRequest": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.grpctimeout.PerRequest",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.Exact": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.Exact",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.Prefix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.Range": {
        "Required": "No",
        "Type": "MatchRange",
        "UniqueKey": "appmesh.route.headermatchmethod.Range",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.Regex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.Regex",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.Suffix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.Suffix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httpretrypolicy.HttpRetryEvents": {
        "Required": "No",
        "SampleValue": "TODO-HttpRetryEvents",
        "UniqueKey": "appmesh.route.httpretrypolicy.HttpRetryEvents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httpretrypolicy.MaxRetries": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.httpretrypolicy.MaxRetries",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httpretrypolicy.PerRetryTimeout": {
        "Required": "Yes",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.httpretrypolicy.PerRetryTimeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httpretrypolicy.TcpRetryEvents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.httpretrypolicy.TcpRetryEvents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproute.Action": {
        "Required": "Yes",
        "Type": "HttpRouteAction",
        "UniqueKey": "appmesh.route.httproute.Action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproute.Match": {
        "Required": "Yes",
        "Type": "HttpRouteMatch",
        "UniqueKey": "appmesh.route.httproute.Match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproute.RetryPolicy": {
        "Required": "No",
        "Type": "HttpRetryPolicy",
        "UniqueKey": "appmesh.route.httproute.RetryPolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproute.Timeout": {
        "Required": "No",
        "Type": "HttpTimeout",
        "UniqueKey": "appmesh.route.httproute.Timeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httprouteaction.WeightedTargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.httprouteaction.WeightedTargets",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httprouteheader.Invert": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.route.httprouteheader.Invert",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httprouteheader.Match": {
        "Required": "No",
        "Type": "HeaderMatchMethod",
        "UniqueKey": "appmesh.route.httprouteheader.Match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httprouteheader.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.httprouteheader.Name",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproutematch.Headers": {
        "Required": "No",
        "Type": "List of [HttpRouteHeader",
        "UniqueKey": "appmesh.route.httproutematch.Headers",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproutematch.Method": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.Method",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproutematch.Prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.Prefix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproutematch.Scheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.Scheme",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httptimeout.Idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.httptimeout.Idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httptimeout.PerRequest": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.httptimeout.PerRequest",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.matchrange.End": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.matchrange.End",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.matchrange.Start": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.matchrange.Start",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.GrpcRoute": {
        "Required": "No",
        "Type": "GrpcRoute",
        "UniqueKey": "appmesh.route.routespec.GrpcRoute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.Http2Route": {
        "Required": "No",
        "Type": "HttpRoute",
        "UniqueKey": "appmesh.route.routespec.Http2Route",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.HttpRoute": {
        "Required": "No",
        "Type": "HttpRoute",
        "UniqueKey": "appmesh.route.routespec.HttpRoute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.Priority": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.routespec.Priority",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.TcpRoute": {
        "Required": "No",
        "Type": "TcpRoute",
        "UniqueKey": "appmesh.route.routespec.TcpRoute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tcproute.Action": {
        "Required": "Yes",
        "Type": "TcpRouteAction",
        "UniqueKey": "appmesh.route.tcproute.Action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tcproute.Timeout": {
        "Required": "No",
        "Type": "TcpTimeout",
        "UniqueKey": "appmesh.route.tcproute.Timeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tcprouteaction.WeightedTargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.tcprouteaction.WeightedTargets",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tcptimeout.Idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.tcptimeout.Idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.weightedtarget.VirtualNode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.weightedtarget.VirtualNode",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.weightedtarget.Weight": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.weightedtarget.Weight",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayaccesslog.File": {
        "Required": "No",
        "Type": "VirtualGatewayFileAccessLog",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayaccesslog.File",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaybackenddefaults.ClientPolicy": {
        "Required": "No",
        "Type": "VirtualGatewayClientPolicy",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaybackenddefaults.ClientPolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayclientpolicy.TLS": {
        "Required": "No",
        "Type": "VirtualGatewayClientPolicyTls",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayclientpolicy.TLS",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayclientpolicytls.Enforce": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayclientpolicytls.Enforce",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayclientpolicytls.Ports": {
        "Required": "No",
        "Type": "List of Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayclientpolicytls.Ports",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayclientpolicytls.Validation": {
        "Required": "Yes",
        "Type": "VirtualGatewayTlsValidationContext",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayclientpolicytls.Validation",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayfileaccesslog.Path": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayfileaccesslog.Path",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.HealthyThreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.HealthyThreshold",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.IntervalMillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.IntervalMillis",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.Path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.Path",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.Port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.Port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.Protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.Protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.TimeoutMillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.TimeoutMillis",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.UnhealthyThreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.UnhealthyThreshold",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistener.HealthCheck": {
        "Required": "No",
        "Type": "VirtualGatewayHealthCheckPolicy",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistener.HealthCheck",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistener.PortMapping": {
        "Required": "Yes",
        "Type": "VirtualGatewayPortMapping",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistener.PortMapping",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistener.TLS": {
        "Required": "No",
        "Type": "VirtualGatewayListenerTls",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistener.TLS",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertls.Certificate": {
        "Required": "Yes",
        "Type": "VirtualGatewayListenerTlsCertificate",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertls.Certificate",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertls.Mode": {
        "Required": "Yes",
        "SampleValue": "TODO-Mode",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertls.Mode",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlsacmcertificate.CertificateArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlsacmcertificate.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlscertificate.ACM": {
        "Required": "No",
        "Type": "VirtualGatewayListenerTlsAcmCertificate",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlscertificate.ACM",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlscertificate.File": {
        "Required": "No",
        "Type": "VirtualGatewayListenerTlsFileCertificate",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlscertificate.File",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlsfilecertificate.CertificateChain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlsfilecertificate.CertificateChain",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlsfilecertificate.PrivateKey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlsfilecertificate.PrivateKey",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylogging.AccessLog": {
        "Required": "No",
        "Type": "VirtualGatewayAccessLog",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylogging.AccessLog",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayportmapping.Port": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayportmapping.Port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayportmapping.Protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayportmapping.Protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayspec.BackendDefaults": {
        "Required": "No",
        "Type": "VirtualGatewayBackendDefaults",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayspec.BackendDefaults",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayspec.Listeners": {
        "Required": "Yes",
        "Type": "List of [VirtualGatewayListener",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayspec.Listeners",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayspec.Logging": {
        "Required": "No",
        "Type": "VirtualGatewayLogging",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayspec.Logging",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontext.Trust": {
        "Required": "Yes",
        "Type": "VirtualGatewayTlsValidationContextTrust",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontext.Trust",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontextacmtrust.CertificateAuthorityArns": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontextacmtrust.CertificateAuthorityArns",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontextfiletrust.CertificateChain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontextfiletrust.CertificateChain",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontexttrust.ACM": {
        "Required": "No",
        "Type": "VirtualGatewayTlsValidationContextAcmTrust",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontexttrust.ACM",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontexttrust.File": {
        "Required": "No",
        "Type": "VirtualGatewayTlsValidationContextFileTrust",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontexttrust.File",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.accesslog.File": {
        "Required": "No",
        "Type": "FileAccessLog",
        "UniqueKey": "appmesh.virtualnode.accesslog.File",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapinstanceattribute.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapinstanceattribute.Key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapinstanceattribute.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapinstanceattribute.Value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.Attributes": {
        "Required": "No",
        "Type": "List of [AwsCloudMapInstanceAttribute",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.Attributes",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.NamespaceName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.NamespaceName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.ServiceName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.ServiceName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.backend.VirtualService": {
        "Required": "No",
        "Type": "VirtualServiceBackend",
        "UniqueKey": "appmesh.virtualnode.backend.VirtualService",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.backenddefaults.ClientPolicy": {
        "Required": "No",
        "Type": "ClientPolicy",
        "UniqueKey": "appmesh.virtualnode.backenddefaults.ClientPolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.clientpolicy.TLS": {
        "Required": "No",
        "Type": "ClientPolicyTls",
        "UniqueKey": "appmesh.virtualnode.clientpolicy.TLS",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.clientpolicytls.Enforce": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.virtualnode.clientpolicytls.Enforce",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.clientpolicytls.Ports": {
        "Required": "No",
        "Type": "List of Integer",
        "UniqueKey": "appmesh.virtualnode.clientpolicytls.Ports",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.clientpolicytls.Validation": {
        "Required": "Yes",
        "Type": "TlsValidationContext",
        "UniqueKey": "appmesh.virtualnode.clientpolicytls.Validation",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.dnsservicediscovery.Hostname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.dnsservicediscovery.Hostname",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.duration.Unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.duration.Unit",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.duration.Value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.duration.Value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.fileaccesslog.Path": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.fileaccesslog.Path",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.grpctimeout.Idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.grpctimeout.Idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.grpctimeout.PerRequest": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.grpctimeout.PerRequest",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.HealthyThreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.HealthyThreshold",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.IntervalMillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.IntervalMillis",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.Path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.healthcheck.Path",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.Port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.Port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.Protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.healthcheck.Protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.TimeoutMillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.TimeoutMillis",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.UnhealthyThreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.UnhealthyThreshold",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.httptimeout.Idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.httptimeout.Idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.httptimeout.PerRequest": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.httptimeout.PerRequest",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.HealthCheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "appmesh.virtualnode.listener.HealthCheck",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.PortMapping": {
        "Required": "Yes",
        "Type": "PortMapping",
        "UniqueKey": "appmesh.virtualnode.listener.PortMapping",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.TLS": {
        "Required": "No",
        "Type": "ListenerTls",
        "UniqueKey": "appmesh.virtualnode.listener.TLS",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.Timeout": {
        "Required": "No",
        "Type": "ListenerTimeout",
        "UniqueKey": "appmesh.virtualnode.listener.Timeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertimeout.GRPC": {
        "Required": "No",
        "Type": "GrpcTimeout",
        "UniqueKey": "appmesh.virtualnode.listenertimeout.GRPC",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertimeout.HTTP": {
        "Required": "No",
        "Type": "HttpTimeout",
        "UniqueKey": "appmesh.virtualnode.listenertimeout.HTTP",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertimeout.HTTP2": {
        "Required": "No",
        "Type": "HttpTimeout",
        "UniqueKey": "appmesh.virtualnode.listenertimeout.HTTP2",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertimeout.TCP": {
        "Required": "No",
        "Type": "TcpTimeout",
        "UniqueKey": "appmesh.virtualnode.listenertimeout.TCP",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertls.Certificate": {
        "Required": "Yes",
        "Type": "ListenerTlsCertificate",
        "UniqueKey": "appmesh.virtualnode.listenertls.Certificate",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertls.Mode": {
        "Required": "Yes",
        "SampleValue": "TODO-Mode",
        "UniqueKey": "appmesh.virtualnode.listenertls.Mode",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlsacmcertificate.CertificateArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.listenertlsacmcertificate.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlscertificate.ACM": {
        "Required": "No",
        "Type": "ListenerTlsAcmCertificate",
        "UniqueKey": "appmesh.virtualnode.listenertlscertificate.ACM",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlscertificate.File": {
        "Required": "No",
        "Type": "ListenerTlsFileCertificate",
        "UniqueKey": "appmesh.virtualnode.listenertlscertificate.File",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlsfilecertificate.CertificateChain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.listenertlsfilecertificate.CertificateChain",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlsfilecertificate.PrivateKey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.listenertlsfilecertificate.PrivateKey",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.logging.AccessLog": {
        "Required": "No",
        "Type": "AccessLog",
        "UniqueKey": "appmesh.virtualnode.logging.AccessLog",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.portmapping.Port": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.portmapping.Port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.portmapping.Protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.portmapping.Protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.servicediscovery.AWSCloudMap": {
        "Required": "No",
        "Type": "AwsCloudMapServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.servicediscovery.AWSCloudMap",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.servicediscovery.DNS": {
        "Required": "No",
        "Type": "DnsServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.servicediscovery.DNS",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tcptimeout.Idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.tcptimeout.Idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontext.Trust": {
        "Required": "Yes",
        "Type": "TlsValidationContextTrust",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontext.Trust",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontextacmtrust.CertificateAuthorityArns": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontextacmtrust.CertificateAuthorityArns",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontextfiletrust.CertificateChain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontextfiletrust.CertificateChain",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontexttrust.ACM": {
        "Required": "No",
        "Type": "TlsValidationContextAcmTrust",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontexttrust.ACM",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontexttrust.File": {
        "Required": "No",
        "Type": "TlsValidationContextFileTrust",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontexttrust.File",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.BackendDefaults": {
        "Required": "No",
        "Type": "BackendDefaults",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.BackendDefaults",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.Backends": {
        "Required": "No",
        "Type": "List of [Backend",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.Backends",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.Listeners": {
        "Required": "No",
        "Type": "List of [Listener",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.Listeners",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.Logging": {
        "Required": "No",
        "Type": "Logging",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.Logging",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.ServiceDiscovery": {
        "Required": "No",
        "Type": "ServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.ServiceDiscovery",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualservicebackend.ClientPolicy": {
        "Required": "No",
        "Type": "ClientPolicy",
        "UniqueKey": "appmesh.virtualnode.virtualservicebackend.ClientPolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualservicebackend.VirtualServiceName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.virtualservicebackend.VirtualServiceName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.portmapping.Port": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualrouter.portmapping.Port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.portmapping.Protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.portmapping.Protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.virtualrouterlistener.PortMapping": {
        "Required": "Yes",
        "Type": "PortMapping",
        "UniqueKey": "appmesh.virtualrouter.virtualrouterlistener.PortMapping",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.virtualrouterspec.Listeners": {
        "Required": "Yes",
        "Type": "List of [VirtualRouterListener",
        "UniqueKey": "appmesh.virtualrouter.virtualrouterspec.Listeners",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualnodeserviceprovider.VirtualNodeName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.virtualnodeserviceprovider.VirtualNodeName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualrouterserviceprovider.VirtualRouterName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.virtualrouterserviceprovider.VirtualRouterName",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualserviceprovider.VirtualNode": {
        "Required": "No",
        "Type": "VirtualNodeServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualserviceprovider.VirtualNode",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualserviceprovider.VirtualRouter": {
        "Required": "No",
        "Type": "VirtualRouterServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualserviceprovider.VirtualRouter",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualservicespec.Provider": {
        "Required": "No",
        "Type": "VirtualServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualservicespec.Provider",
        "UpdateRequires": "Replacement"
    },
    "appstream.directoryconfig.serviceaccountcredentials.AccountName": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.directoryconfig.serviceaccountcredentials.AccountName",
        "UpdateRequires": "Replacement"
    },
    "appstream.directoryconfig.serviceaccountcredentials.AccountPassword": {
        "Maximum": "127",
        "Minimum": "1",
        "Pattern": "^.{1,127}$",
        "Required": "Yes",
        "SampleValue": "TODO-appstream.directoryconfig.serviceaccountcredentials.AccountPassword",
        "Type": "String",
        "UniqueKey": "appstream.directoryconfig.serviceaccountcredentials.AccountPassword",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.computecapacity.DesiredInstances": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appstream.fleet.computecapacity.DesiredInstances",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.domainjoininfo.DirectoryName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.fleet.domainjoininfo.DirectoryName",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.domainjoininfo.OrganizationalUnitDistinguishedName": {
        "Maximum": "2000",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.fleet.domainjoininfo.OrganizationalUnitDistinguishedName",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.vpcconfig.SecurityGroupIds": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.fleet.vpcconfig.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.vpcconfig.SubnetIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.fleet.vpcconfig.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.accessendpoint.EndpointType": {
        "Allowed values": "STREAMING",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.accessendpoint.EndpointType",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.accessendpoint.VpceId": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.accessendpoint.VpceId",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.domainjoininfo.DirectoryName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.domainjoininfo.DirectoryName",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.domainjoininfo.OrganizationalUnitDistinguishedName": {
        "Maximum": "2000",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.domainjoininfo.OrganizationalUnitDistinguishedName",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.vpcconfig.SecurityGroupIds": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.imagebuilder.vpcconfig.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.vpcconfig.SubnetIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.imagebuilder.vpcconfig.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.accessendpoint.EndpointType": {
        "Allowed values": "STREAMING",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.accessendpoint.EndpointType",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.accessendpoint.VpceId": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.accessendpoint.VpceId",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.applicationsettings.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appstream.stack.applicationsettings.Enabled",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.applicationsettings.SettingsGroup": {
        "Maximum": "100",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.stack.applicationsettings.SettingsGroup",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.storageconnector.ConnectorType": {
        "Allowed values": "GOOGLE_DRIVE | HOMEFOLDERS | ONE_DRIVE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.storageconnector.ConnectorType",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.storageconnector.Domains": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.stack.storageconnector.Domains",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.storageconnector.ResourceIdentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.stack.storageconnector.ResourceIdentifier",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.usersetting.Action": {
        "Allowed values": "CLIPBOARD_COPY_FROM_LOCAL_DEVICE | CLIPBOARD_COPY_TO_LOCAL_DEVICE | FILE_DOWNLOAD | FILE_UPLOAD | PRINTING_TO_LOCAL_DEVICE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.usersetting.Action",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.usersetting.Permission": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.usersetting.Permission",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.authorizationconfig.AuthorizationType": {
        "AuthorizationType`  <a name=\"cfn-appsync-datasource-authorizationconfig-authorizationtype\"></a>\nThe authorization type required by the HTTP endpoint\\.  \n+  **AWS\\_IAM*": "The authorization type is Sigv4\\.",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.authorizationconfig.AuthorizationType",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.authorizationconfig.AwsIamConfig": {
        "Required": "No",
        "Type": "AwsIamConfig",
        "UniqueKey": "appsync.datasource.authorizationconfig.AwsIamConfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.awsiamconfig.SigningRegion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.awsiamconfig.SigningRegion",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.awsiamconfig.SigningServiceName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.awsiamconfig.SigningServiceName",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.deltasyncconfig.BaseTableTTL": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.BaseTableTTL",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.deltasyncconfig.DeltaSyncTableName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.DeltaSyncTableName",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.deltasyncconfig.DeltaSyncTableTTL": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.DeltaSyncTableTTL",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.AwsRegion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.dynamodbconfig.AwsRegion",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.DeltaSyncConfig": {
        "Required": "No",
        "Type": "DeltaSyncConfig",
        "UniqueKey": "appsync.datasource.dynamodbconfig.DeltaSyncConfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.TableName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.dynamodbconfig.TableName",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.UseCallerCredentials": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.datasource.dynamodbconfig.UseCallerCredentials",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.Versioned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.datasource.dynamodbconfig.Versioned",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.elasticsearchconfig.AwsRegion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.elasticsearchconfig.AwsRegion",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.elasticsearchconfig.Endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.elasticsearchconfig.Endpoint",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.httpconfig.AuthorizationConfig": {
        "Required": "No",
        "Type": "AuthorizationConfig",
        "UniqueKey": "appsync.datasource.httpconfig.AuthorizationConfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.httpconfig.Endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.httpconfig.Endpoint",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.lambdaconfig.LambdaFunctionArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.lambdaconfig.LambdaFunctionArn",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.AwsRegion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.AwsRegion",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.AwsSecretStoreArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.AwsSecretStoreArn",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.DatabaseName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.DbClusterIdentifier": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.DbClusterIdentifier",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.Schema": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.Schema",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.relationaldatabaseconfig.RdsHttpEndpointConfig": {
        "Required": "No",
        "Type": "RdsHttpEndpointConfig",
        "UniqueKey": "appsync.datasource.relationaldatabaseconfig.RdsHttpEndpointConfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.relationaldatabaseconfig.RelationalDatabaseSourceType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.relationaldatabaseconfig.RelationalDatabaseSourceType",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.AuthenticationType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.AuthenticationType",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.OpenIDConnectConfig": {
        "Required": "No",
        "Type": "OpenIDConnectConfig",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.OpenIDConnectConfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.UserPoolConfig": {
        "Required": "No",
        "Type": "CognitoUserPoolConfig",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.UserPoolConfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.AppIdClientRegex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.AppIdClientRegex",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.AwsRegion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.AwsRegion",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.UserPoolId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.UserPoolId",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.logconfig.CloudWatchLogsRoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.logconfig.CloudWatchLogsRoleArn",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.logconfig.ExcludeVerboseContent": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.graphqlapi.logconfig.ExcludeVerboseContent",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.logconfig.FieldLogLevel": {
        "FieldLogLevel`  <a name=\"cfn-appsync-graphqlapi-logconfig-fieldloglevel\"></a>\nThe field logging level\\. Values can be NONE, ERROR, or ALL\\.   \n+  **NONE*": "No field\\-level logs are captured\\.\n+  **ERROR*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.logconfig.FieldLogLevel",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.openidconnectconfig.AuthTTL": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.AuthTTL",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.openidconnectconfig.ClientId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.ClientId",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.openidconnectconfig.IatTTL": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.IatTTL",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.openidconnectconfig.Issuer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.Issuer",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.userpoolconfig.AppIdClientRegex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.AppIdClientRegex",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.userpoolconfig.AwsRegion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.AwsRegion",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.userpoolconfig.DefaultAction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.DefaultAction",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.userpoolconfig.UserPoolId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.UserPoolId",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.cachingconfig.CachingKeys": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appsync.resolver.cachingconfig.CachingKeys",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.cachingconfig.Ttl": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.resolver.cachingconfig.Ttl",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.lambdaconflicthandlerconfig.LambdaConflictHandlerArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.resolver.lambdaconflicthandlerconfig.LambdaConflictHandlerArn",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.pipelineconfig.Functions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appsync.resolver.pipelineconfig.Functions",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.syncconfig.ConflictDetection": {
        "ConflictDetection`  <a name=\"cfn-appsync-resolver-syncconfig-conflictdetection\"></a>\nThe Conflict Detection strategy to use\\.  \n+  **VERSION*": "Detect conflicts based on object versions for this resolver\\.\n+  **NONE*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.resolver.syncconfig.ConflictDetection",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.syncconfig.ConflictHandler": {
        "ConflictHandler`  <a name=\"cfn-appsync-resolver-syncconfig-conflicthandler\"></a>\nThe Conflict Resolution strategy to perform in the event of a conflict\\.  \n+  **OPTIMISTIC\\_CONCURRENCY*": "Resolve conflicts by rejecting mutations when versions do not match the latest version at the server\\.\n+  **AUTOMERGE*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.resolver.syncconfig.ConflictHandler",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.syncconfig.LambdaConflictHandlerConfig": {
        "Required": "No",
        "Type": "LambdaConflictHandlerConfig",
        "UniqueKey": "appsync.resolver.syncconfig.LambdaConflictHandlerConfig",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.AutoScalingGroupName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.AutoScalingGroupName",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.AvailabilityZones": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.AvailabilityZones",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.Cooldown": {
        "Required": "No",
        "SampleValue": "TODO-Cooldown",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.Cooldown",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.DesiredCapacity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.DesiredCapacity",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.HealthCheckGracePeriod": {
        "Required": "Conditional",
        "SampleValue": "TODO-HealthCheckGracePeriod",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.HealthCheckGracePeriod",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.HealthCheckType": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.HealthCheckType",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.InstanceId": {
        "Required": "Conditional",
        "SampleValue": "TODO-InstanceId",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.InstanceId",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LaunchConfigurationName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LaunchConfigurationName",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LaunchTemplate": {
        "Required": "Conditional",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LaunchTemplate",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LifecycleHookSpecificationList": {
        "Required": "No",
        "Type": "List of [LifecycleHookSpecification",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LifecycleHookSpecificationList",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LoadBalancerNames": {
        "Required": "No",
        "SampleValue": "TODO-LoadBalancerNames",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LoadBalancerNames",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MaxInstanceLifetime": {
        "Required": "No",
        "SampleValue": "TODO-MaxInstanceLifetime",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MaxInstanceLifetime",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MaxSize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MaxSize",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MetricsCollection": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MetricsCollection",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MinSize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MinSize",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MixedInstancesPolicy": {
        "Required": "Conditional",
        "SampleValue": "TODO-MixedInstancesPolicy",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MixedInstancesPolicy",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.NewInstancesProtectedFromScaleIn": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.NewInstancesProtectedFromScaleIn",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.NotificationConfigurations": {
        "Required": "No",
        "Type": "List of [NotificationConfiguration",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.NotificationConfigurations",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.PlacementGroup": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.PlacementGroup",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.ServiceLinkedRoleARN": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.ServiceLinkedRoleARN",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.Tags": {
        "Required": "No",
        "Type": "List of [TagProperty",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.Tags",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.TargetGroupARNs": {
        "Required": "No",
        "SampleValue": "TODO-TargetGroupARNs",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.TargetGroupARNs",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.TerminationPolicies": {
        "Required": "No",
        "SampleValue": "TODO-TerminationPolicies",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.TerminationPolicies",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.VPCZoneIdentifier": {
        "Maximum": "2047",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.VPCZoneIdentifier",
        "UpdateRequires": "Replacement"
    },
    "as.group.AutoScalingGroupName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.AutoScalingGroupName",
        "UpdateRequires": "Replacement"
    },
    "as.group.AvailabilityZones": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group.AvailabilityZones",
        "UpdateRequires": "Replacement"
    },
    "as.group.Cooldown": {
        "Required": "No",
        "SampleValue": "TODO-Cooldown",
        "UniqueKey": "as.group.Cooldown",
        "UpdateRequires": "Replacement"
    },
    "as.group.DesiredCapacity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.DesiredCapacity",
        "UpdateRequires": "Replacement"
    },
    "as.group.HealthCheckGracePeriod": {
        "Required": "Conditional",
        "SampleValue": "TODO-HealthCheckGracePeriod",
        "UniqueKey": "as.group.HealthCheckGracePeriod",
        "UpdateRequires": "Replacement"
    },
    "as.group.HealthCheckType": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.group.HealthCheckType",
        "UpdateRequires": "Replacement"
    },
    "as.group.InstanceId": {
        "Required": "Conditional",
        "SampleValue": "TODO-InstanceId",
        "UniqueKey": "as.group.InstanceId",
        "UpdateRequires": "Replacement"
    },
    "as.group.LaunchConfigurationName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "as.group.LaunchConfigurationName",
        "UpdateRequires": "Replacement"
    },
    "as.group.LaunchTemplate": {
        "Required": "Conditional",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "as.group.LaunchTemplate",
        "UpdateRequires": "Replacement"
    },
    "as.group.LifecycleHookSpecificationList": {
        "Required": "No",
        "Type": "List of [LifecycleHookSpecification",
        "UniqueKey": "as.group.LifecycleHookSpecificationList",
        "UpdateRequires": "Replacement"
    },
    "as.group.LoadBalancerNames": {
        "Required": "No",
        "SampleValue": "TODO-LoadBalancerNames",
        "UniqueKey": "as.group.LoadBalancerNames",
        "UpdateRequires": "Replacement"
    },
    "as.group.MaxInstanceLifetime": {
        "Required": "No",
        "SampleValue": "TODO-MaxInstanceLifetime",
        "UniqueKey": "as.group.MaxInstanceLifetime",
        "UpdateRequires": "Replacement"
    },
    "as.group.MaxSize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group.MaxSize",
        "UpdateRequires": "Replacement"
    },
    "as.group.MetricsCollection": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "as.group.MetricsCollection",
        "UpdateRequires": "Replacement"
    },
    "as.group.MinSize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group.MinSize",
        "UpdateRequires": "Replacement"
    },
    "as.group.MixedInstancesPolicy": {
        "Required": "Conditional",
        "SampleValue": "TODO-MixedInstancesPolicy",
        "UniqueKey": "as.group.MixedInstancesPolicy",
        "UpdateRequires": "Replacement"
    },
    "as.group.NewInstancesProtectedFromScaleIn": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.group.NewInstancesProtectedFromScaleIn",
        "UpdateRequires": "Replacement"
    },
    "as.group.NotificationConfigurations": {
        "Required": "No",
        "Type": "List of [NotificationConfiguration",
        "UniqueKey": "as.group.NotificationConfigurations",
        "UpdateRequires": "Replacement"
    },
    "as.group.PlacementGroup": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.PlacementGroup",
        "UpdateRequires": "Replacement"
    },
    "as.group.ServiceLinkedRoleARN": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.ServiceLinkedRoleARN",
        "UpdateRequires": "Replacement"
    },
    "as.group.Tags": {
        "Required": "No",
        "Type": "List of [TagProperty",
        "UniqueKey": "as.group.Tags",
        "UpdateRequires": "Replacement"
    },
    "as.group.TargetGroupARNs": {
        "Required": "No",
        "SampleValue": "TODO-TargetGroupARNs",
        "UniqueKey": "as.group.TargetGroupARNs",
        "UpdateRequires": "Replacement"
    },
    "as.group.TerminationPolicies": {
        "Required": "No",
        "SampleValue": "TODO-TerminationPolicies",
        "UniqueKey": "as.group.TerminationPolicies",
        "UpdateRequires": "Replacement"
    },
    "as.group.VPCZoneIdentifier": {
        "Maximum": "2047",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group.VPCZoneIdentifier",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.AssociatePublicIpAddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.AssociatePublicIpAddress",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.BlockDeviceMappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "as.launchconfig.BlockDeviceMappings",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.ClassicLinkVPCId": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.ClassicLinkVPCId",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.ClassicLinkVPCSecurityGroups": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.launchconfig.ClassicLinkVPCSecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.EbsOptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.EbsOptimized",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.IamInstanceProfile": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.IamInstanceProfile",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.ImageId": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "as.launchconfig.ImageId",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.InstanceId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.launchconfig.InstanceId",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.InstanceMonitoring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.InstanceMonitoring",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.InstanceType": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "as.launchconfig.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.KernelId": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.KernelId",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.KeyName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.KeyName",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.LaunchConfigurationName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.launchconfig.LaunchConfigurationName",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.PlacementTenancy": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.PlacementTenancy",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.RamDiskId": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.RamDiskId",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.SecurityGroups": {
        "Required": "No",
        "SampleValue": "TODO-SecurityGroups",
        "UniqueKey": "as.launchconfig.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.SpotPrice": {
        "Required": "No",
        "SampleValue": "TODO-SpotPrice",
        "UniqueKey": "as.launchconfig.SpotPrice",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.UserData": {
        "Maximum": "21847",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.UserData",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.DeviceName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "as.launchconfig.blockdev.mapping.DeviceName",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.Ebs": {
        "Required": "No",
        "Type": "BlockDevice",
        "UniqueKey": "as.launchconfig.blockdev.mapping.Ebs",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.NoDevice": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.mapping.NoDevice",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.VirtualName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.blockdev.mapping.VirtualName",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.template.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.Encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.template.Encrypted",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.Iops": {
        "Maximum": "20000",
        "Minimum": "100",
        "Required": "Conditional",
        "UniqueKey": "as.launchconfig.blockdev.template.Iops",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.SnapshotId": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "as.launchconfig.blockdev.template.SnapshotId",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.VolumeSize": {
        "Maximum": "16384",
        "Minimum": "1",
        "Pattern": "^[1,16384]}$",
        "Required": "Conditional",
        "SampleValue": "1...16384",
        "Type": "Integer",
        "UniqueKey": "as.launchconfig.blockdev.template.VolumeSize",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.VolumeType": {
        "Maximum": "255",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "as.launchconfig.blockdev.template.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "as.metricscollection.Granularity": {
        "Allowed Values": "1Minute",
        "AllowedValues": [
            "1Minute"
        ],
        "Pattern": "^[1Minute]",
        "Required": "Yes",
        "SampleValue": "1Minute",
        "Type": "String",
        "UniqueKey": "as.metricscollection.Granularity",
        "UpdateRequires": "Replacement"
    },
    "as.metricscollection.Metrics": {
        "Allowed Values": "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.",
        "AllowedValues": [
            "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\."
        ],
        "Pattern": "^[+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.]",
        "Required": "No",
        "SampleValue": "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.",
        "Type": "List of String",
        "UniqueKey": "as.metricscollection.Metrics",
        "UpdateRequires": "Replacement"
    },
    "as.notificationconfigurations.NotificationTypes": {
        "Allowed Values": "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION",
        "AllowedValues": [
            "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION"
        ],
        "Pattern": "^[+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION]",
        "Required": "No",
        "SampleValue": "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION",
        "Type": "List of String",
        "UniqueKey": "as.notificationconfigurations.NotificationTypes",
        "UpdateRequires": "Replacement"
    },
    "as.notificationconfigurations.TopicARN": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.notificationconfigurations.TopicARN",
        "UpdateRequires": "Replacement"
    },
    "as.policy.AdjustmentType": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "UniqueKey": "as.policy.AdjustmentType",
        "UpdateRequires": "Replacement"
    },
    "as.policy.AutoScalingGroupName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.policy.AutoScalingGroupName",
        "UpdateRequires": "Replacement"
    },
    "as.policy.Cooldown": {
        "Required": "No",
        "SampleValue": "TODO-Cooldown",
        "UniqueKey": "as.policy.Cooldown",
        "UpdateRequires": "Replacement"
    },
    "as.policy.EstimatedInstanceWarmup": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "as.policy.EstimatedInstanceWarmup",
        "UpdateRequires": "Replacement"
    },
    "as.policy.MetricAggregationType": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.policy.MetricAggregationType",
        "UpdateRequires": "Replacement"
    },
    "as.policy.MinAdjustmentMagnitude": {
        "Required": "No",
        "SampleValue": "TODO-MinAdjustmentMagnitude",
        "UniqueKey": "as.policy.MinAdjustmentMagnitude",
        "UpdateRequires": "Replacement"
    },
    "as.policy.PolicyType": {
        "Required": "Conditional",
        "SampleValue": "TODO-PolicyType",
        "UniqueKey": "as.policy.PolicyType",
        "UpdateRequires": "Replacement"
    },
    "as.policy.ScalingAdjustment": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "as.policy.ScalingAdjustment",
        "UpdateRequires": "Replacement"
    },
    "as.policy.StepAdjustments": {
        "Required": "Conditional",
        "Type": "List of [StepAdjustment",
        "UniqueKey": "as.policy.StepAdjustments",
        "UpdateRequires": "Replacement"
    },
    "as.policy.TargetTrackingConfiguration": {
        "Required": "Conditional",
        "Type": "TargetTrackingConfiguration",
        "UniqueKey": "as.policy.TargetTrackingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "as.tags.Key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "as.tags.PropagateAtLaunch": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.tags.PropagateAtLaunch",
        "UpdateRequires": "Replacement"
    },
    "as.tags.Value": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.authenticationconfiguration.ClientId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.ClientId",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.authenticationconfiguration.ClientSecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.ClientSecret",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.authenticationconfiguration.RefreshToken": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.RefreshToken",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.overrides.Manifest": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "ask.skill.overrides.Manifest",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.Overrides": {
        "Required": "No",
        "Type": "Overrides",
        "UniqueKey": "ask.skill.skillpackage.Overrides",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.S3Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.S3Bucket",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.S3BucketRole": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.S3BucketRole",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.S3Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.S3Key",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.S3ObjectVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.S3ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "athena.datacatalog.tags.Tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "athena.datacatalog.tags.Tags",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.encryptionconfiguration.EncryptionOption": {
        "Allowed values": "CSE_KMS | SSE_KMS | SSE_S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "athena.workgroup.encryptionconfiguration.EncryptionOption",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.encryptionconfiguration.KmsKey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "athena.workgroup.encryptionconfiguration.KmsKey",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfiguration.EncryptionConfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "athena.workgroup.resultconfiguration.EncryptionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfiguration.OutputLocation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "athena.workgroup.resultconfiguration.OutputLocation",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfigurationupdates.EncryptionConfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "athena.workgroup.resultconfigurationupdates.EncryptionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfigurationupdates.OutputLocation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "athena.workgroup.resultconfigurationupdates.OutputLocation",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfigurationupdates.RemoveEncryptionConfiguration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.resultconfigurationupdates.RemoveEncryptionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfigurationupdates.RemoveOutputLocation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.resultconfigurationupdates.RemoveOutputLocation",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.tags.Tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "athena.workgroup.tags.Tags",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.BytesScannedCutoffPerQuery": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.BytesScannedCutoffPerQuery",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.EnforceWorkGroupConfiguration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.EnforceWorkGroupConfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.PublishCloudWatchMetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.PublishCloudWatchMetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.RequesterPaysEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.RequesterPaysEnabled",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.ResultConfiguration": {
        "Required": "No",
        "Type": "ResultConfiguration",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.ResultConfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.BytesScannedCutoffPerQuery": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.BytesScannedCutoffPerQuery",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.EnforceWorkGroupConfiguration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.EnforceWorkGroupConfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.PublishCloudWatchMetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.PublishCloudWatchMetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.RemoveBytesScannedCutoffPerQuery": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.RemoveBytesScannedCutoffPerQuery",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.RequesterPaysEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.RequesterPaysEnabled",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.ResultConfigurationUpdates": {
        "Required": "No",
        "Type": "ResultConfigurationUpdates",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.ResultConfigurationUpdates",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.OnDemandAllocationStrategy": {
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.OnDemandAllocationStrategy",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.OnDemandBaseCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.OnDemandBaseCapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.OnDemandPercentageAboveBaseCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.OnDemandPercentageAboveBaseCapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.SpotAllocationStrategy": {
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.SpotAllocationStrategy",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.SpotInstancePools": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.SpotInstancePools",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.SpotMaxPrice": {
        "Maximum": "255",
        "Minimum": "0",
        "Pattern": "^.{0,255}$",
        "Required": "No",
        "SampleValue": "TODO-autoscaling.autoscalinggroup.instancesdistribution.SpotMaxPrice",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.SpotMaxPrice",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplate.LaunchTemplateSpecification": {
        "Required": "Yes",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplate.LaunchTemplateSpecification",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplate.Overrides": {
        "Required": "No",
        "Type": "List of [LaunchTemplateOverrides",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplate.Overrides",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplateoverrides.InstanceType": {
        "Required": "No",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplateoverrides.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplateoverrides.WeightedCapacity": {
        "Required": "No",
        "SampleValue": "TODO-WeightedCapacity",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplateoverrides.WeightedCapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.LaunchTemplateId": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.LaunchTemplateId",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.LaunchTemplateName": {
        "Maximum": "128",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\(\\)\\.-/_]+",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.LaunchTemplateName",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.Version": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.Version",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.DefaultResult": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.DefaultResult",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.HeartbeatTimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.HeartbeatTimeout",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.LifecycleHookName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9\\-_\\/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.LifecycleHookName",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.LifecycleTransition": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.LifecycleTransition",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.NotificationMetadata": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.NotificationMetadata",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.NotificationTargetARN": {
        "Maximum": "1600",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.NotificationTargetARN",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.RoleARN": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.mixedinstancespolicy.InstancesDistribution": {
        "Required": "No",
        "Type": "InstancesDistribution",
        "UniqueKey": "autoscaling.autoscalinggroup.mixedinstancespolicy.InstancesDistribution",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.mixedinstancespolicy.LaunchTemplate": {
        "Required": "Yes",
        "Type": "LaunchTemplate",
        "UniqueKey": "autoscaling.autoscalinggroup.mixedinstancespolicy.LaunchTemplate",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.Dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.MetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.MetricName",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.Namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.Namespace",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.Statistic": {
        "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.Statistic",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.Unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.Unit",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.metricdimension.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.metricdimension.Name",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.metricdimension.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.metricdimension.Value",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.predefinedmetricspecification.PredefinedMetricType": {
        "Allowed values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.predefinedmetricspecification.PredefinedMetricType",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.predefinedmetricspecification.ResourceLabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.predefinedmetricspecification.ResourceLabel",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.stepadjustments.MetricIntervalLowerBound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.MetricIntervalLowerBound",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.stepadjustments.MetricIntervalUpperBound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.MetricIntervalUpperBound",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.stepadjustments.ScalingAdjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.ScalingAdjustment",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.CustomizedMetricSpecification": {
        "Required": "Conditional",
        "Type": "CustomizedMetricSpecification",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.CustomizedMetricSpecification",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.DisableScaleIn": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.DisableScaleIn",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.PredefinedMetricSpecification": {
        "Required": "Conditional",
        "Type": "PredefinedMetricSpecification",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.PredefinedMetricSpecification",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.TargetValue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.TargetValue",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.applicationsource.CloudFormationStackARN": {
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.applicationsource.CloudFormationStackARN",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.applicationsource.TagFilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "autoscalingplans.scalingplan.applicationsource.TagFilters",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.Dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.MetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.MetricName",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.Namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.Namespace",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.Statistic": {
        "Allowed Values": "Sum",
        "AllowedValues": [
            "Sum"
        ],
        "Pattern": "^[Sum]",
        "Required": "Yes",
        "SampleValue": "Sum",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.Statistic",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.Unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.Unit",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.Dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.MetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.MetricName",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.Namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.Namespace",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.Statistic": {
        "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.Statistic",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.Unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.Unit",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.metricdimension.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.metricdimension.Name",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.metricdimension.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.metricdimension.Value",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.predefinedloadmetricspecification.PredefinedLoadMetricType": {
        "Allowed values": "ALBTargetGroupRequestCount | ASGTotalCPUUtilization | ASGTotalNetworkIn | ASGTotalNetworkOut",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedloadmetricspecification.PredefinedLoadMetricType",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.predefinedloadmetricspecification.ResourceLabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-autoscalingplans.scalingplan.predefinedloadmetricspecification.ResourceLabel",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedloadmetricspecification.ResourceLabel",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.predefinedscalingmetricspecification.PredefinedScalingMetricType": {
        "Allowed values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedscalingmetricspecification.PredefinedScalingMetricType",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.predefinedscalingmetricspecification.ResourceLabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-autoscalingplans.scalingplan.predefinedscalingmetricspecification.ResourceLabel",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedscalingmetricspecification.ResourceLabel",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.CustomizedLoadMetricSpecification": {
        "Required": "Conditional",
        "SampleValue": "TODO-CustomizedLoadMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.CustomizedLoadMetricSpecification",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.DisableDynamicScaling": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.DisableDynamicScaling",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.MaxCapacity": {
        "Required": "Yes",
        "SampleValue": "TODO-MaxCapacity",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.MaxCapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.MinCapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.MinCapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.PredefinedLoadMetricSpecification": {
        "Required": "Conditional",
        "SampleValue": "TODO-PredefinedLoadMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.PredefinedLoadMetricSpecification",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMaxCapacityBehavior": {
        "Allowed values": "SetForecastCapacityToMaxCapacity | SetMaxCapacityAboveForecastCapacity | SetMaxCapacityToForecastCapacity",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMaxCapacityBehavior",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMaxCapacityBuffer": {
        "Required": "Conditional",
        "SampleValue": "TODO-PredictiveScalingMaxCapacityBuffer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMaxCapacityBuffer",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMode": {
        "Allowed values": "ForecastAndScale | ForecastOnly",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMode",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.ResourceId": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.ResourceId",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.ScalableDimension": {
        "Allowed values": "autoscaling:autoScalingGroup:DesiredCapacity | dynamodb:index:ReadCapacityUnits | dynamodb:index:WriteCapacityUnits | dynamodb:table:ReadCapacityUnits | dynamodb:table:WriteCapacityUnits | ec2:spot-fleet-request:TargetCapacity | ecs:service:DesiredCount | rds:cluster:ReadReplicaCount",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.ScalableDimension",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.ScalingPolicyUpdateBehavior": {
        "Allowed values": "KeepExternalPolicies | ReplaceExternalPolicies",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.ScalingPolicyUpdateBehavior",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.ScheduledActionBufferTime": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.ScheduledActionBufferTime",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.ServiceNamespace": {
        "Allowed values": "autoscaling | dynamodb | ec2 | ecs | rds",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.ServiceNamespace",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.TargetTrackingConfigurations": {
        "Required": "Yes",
        "Type": "List of [TargetTrackingConfiguration",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.TargetTrackingConfigurations",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.tagfilter.Key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.tagfilter.Key",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.tagfilter.Values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "autoscalingplans.scalingplan.tagfilter.Values",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.CustomizedScalingMetricSpecification": {
        "Required": "No",
        "Type": "CustomizedScalingMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.CustomizedScalingMetricSpecification",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.DisableScaleIn": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.DisableScaleIn",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.EstimatedInstanceWarmup": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.EstimatedInstanceWarmup",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.PredefinedScalingMetricSpecification": {
        "Required": "No",
        "Type": "PredefinedScalingMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.PredefinedScalingMetricSpecification",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.ScaleInCooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.ScaleInCooldown",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.ScaleOutCooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.ScaleOutCooldown",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.TargetValue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.TargetValue",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupplanresourcetype.BackupPlanName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupplanresourcetype.BackupPlanName",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupplanresourcetype.BackupPlanRule": {
        "Required": "Yes",
        "Type": "List of [BackupRuleResourceType",
        "UniqueKey": "backup.backupplan.backupplanresourcetype.BackupPlanRule",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.CompletionWindowMinutes": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.CompletionWindowMinutes",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.CopyActions": {
        "Required": "No",
        "Type": "List of [CopyActionResourceType",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.CopyActions",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.Lifecycle": {
        "Required": "No",
        "Type": "LifecycleResourceType",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.Lifecycle",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.RecoveryPointTags": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.RecoveryPointTags",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.RuleName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.RuleName",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.ScheduleExpression": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.ScheduleExpression",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.StartWindowMinutes": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.StartWindowMinutes",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.TargetBackupVault": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.TargetBackupVault",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.copyactionresourcetype.DestinationBackupVaultArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.copyactionresourcetype.DestinationBackupVaultArn",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.copyactionresourcetype.Lifecycle": {
        "Required": "No",
        "Type": "LifecycleResourceType",
        "UniqueKey": "backup.backupplan.copyactionresourcetype.Lifecycle",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.lifecycleresourcetype.DeleteAfterDays": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.lifecycleresourcetype.DeleteAfterDays",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.lifecycleresourcetype.MoveToColdStorageAfterDays": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.lifecycleresourcetype.MoveToColdStorageAfterDays",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.backupselectionresourcetype.IamRoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.IamRoleArn",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.backupselectionresourcetype.ListOfTags": {
        "Required": "No",
        "Type": "List of [ConditionResourceType",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.ListOfTags",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.backupselectionresourcetype.Resources": {
        "Required": "No",
        "SampleValue": "TODO-Resources",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.Resources",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.backupselectionresourcetype.SelectionName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.SelectionName",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.conditionresourcetype.ConditionKey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.ConditionKey",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.conditionresourcetype.ConditionType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.ConditionType",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.conditionresourcetype.ConditionValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.ConditionValue",
        "UpdateRequires": "Replacement"
    },
    "backup.backupvault.notificationobjecttype.BackupVaultEvents": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "backup.backupvault.notificationobjecttype.BackupVaultEvents",
        "UpdateRequires": "Replacement"
    },
    "backup.backupvault.notificationobjecttype.SNSTopicArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupvault.notificationobjecttype.SNSTopicArn",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.AllocationStrategy": {
        "Required": "No",
        "SampleValue": "TODO-AllocationStrategy",
        "UniqueKey": "batch.computeenvironment.computeresources.AllocationStrategy",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.BidPercentage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.BidPercentage",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.DesiredvCpus": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.DesiredvCpus",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.Ec2KeyPair": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.computeresources.Ec2KeyPair",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.ImageId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.computeresources.ImageId",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.InstanceRole": {
        "Required": "Yes",
        "SampleValue": "TODO-InstanceRole",
        "UniqueKey": "batch.computeenvironment.computeresources.InstanceRole",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.InstanceTypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "batch.computeenvironment.computeresources.InstanceTypes",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.LaunchTemplate": {
        "Required": "No",
        "SampleValue": "TODO-LaunchTemplate",
        "UniqueKey": "batch.computeenvironment.computeresources.LaunchTemplate",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.MaxvCpus": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.MaxvCpus",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.MinvCpus": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.MinvCpus",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.PlacementGroup": {
        "Required": "No",
        "SampleValue": "TODO-PlacementGroup",
        "UniqueKey": "batch.computeenvironment.computeresources.PlacementGroup",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.SecurityGroupIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.computeenvironment.computeresources.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.SpotIamFleetRole": {
        "Required": "No",
        "SampleValue": "TODO-SpotIamFleetRole",
        "UniqueKey": "batch.computeenvironment.computeresources.SpotIamFleetRole",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.Subnets": {
        "Required": "Yes",
        "SampleValue": "TODO-Subnets",
        "UniqueKey": "batch.computeenvironment.computeresources.Subnets",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.Tags": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "batch.computeenvironment.computeresources.Tags",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.Type": {
        "Allowed values": "EC2 | SPOT",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.computeresources.Type",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.LaunchTemplateId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.LaunchTemplateId",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.LaunchTemplateName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.LaunchTemplateName",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.Version",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.Command": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.jobdefinition.containerproperties.Command",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.Environment": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.Environment",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.Image": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.Image",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.InstanceType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.JobRoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.JobRoleArn",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.LinuxParameters": {
        "Required": "No",
        "Type": "LinuxParameters",
        "UniqueKey": "batch.jobdefinition.containerproperties.LinuxParameters",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.Memory": {
        "Required": "No",
        "SampleValue": "TODO-Memory",
        "UniqueKey": "batch.jobdefinition.containerproperties.Memory",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.MountPoints": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.MountPoints",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.Privileged": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.containerproperties.Privileged",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.ReadonlyRootFilesystem": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.containerproperties.ReadonlyRootFilesystem",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.ResourceRequirements": {
        "Required": "No",
        "Type": "List of [ResourceRequirement",
        "UniqueKey": "batch.jobdefinition.containerproperties.ResourceRequirements",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.Ulimits": {
        "Required": "No",
        "Type": "List of [Ulimit",
        "UniqueKey": "batch.jobdefinition.containerproperties.Ulimits",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.User": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.User",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.Vcpus": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.containerproperties.Vcpus",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.Volumes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.Volumes",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.linuxparameters.Devices": {
        "Required": "No",
        "Type": "List of [Device",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters.Devices",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.device.ContainerPath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.device.ContainerPath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.device.HostPath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.device.HostPath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.device.Permissions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.jobdefinition.device.Permissions",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.environment.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.environment.Name",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.environment.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.environment.Value",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.mountpoints.ContainerPath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.mountpoints.ContainerPath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.mountpoints.ReadOnly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.mountpoints.ReadOnly",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.mountpoints.SourceVolume": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.mountpoints.SourceVolume",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.nodeproperties.MainNode": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.nodeproperties.MainNode",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.nodeproperties.NodeRangeProperties": {
        "Required": "Yes",
        "Type": "List of [NodeRangeProperty",
        "UniqueKey": "batch.jobdefinition.nodeproperties.NodeRangeProperties",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.nodeproperties.NumNodes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.nodeproperties.NumNodes",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.noderangeproperty.Container": {
        "Required": "No",
        "Type": "ContainerProperties",
        "UniqueKey": "batch.jobdefinition.noderangeproperty.Container",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.noderangeproperty.TargetNodes": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.noderangeproperty.TargetNodes",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.resourcerequirement.Type": {
        "Allowed values": "GPU",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.resourcerequirement.Type",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.resourcerequirement.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.resourcerequirement.Value",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.retrystrategy.Attempts": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.retrystrategy.Attempts",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.timeout.AttemptDurationSeconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.timeout.AttemptDurationSeconds",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.ulimit.HardLimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.ulimit.HardLimit",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.ulimit.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.ulimit.Name",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.ulimit.SoftLimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.ulimit.SoftLimit",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.volumes.Host": {
        "Required": "No",
        "Type": "VolumesHost",
        "UniqueKey": "batch.jobdefinition.volumes.Host",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.volumes.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.volumes.Name",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.volumeshost.SourcePath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.volumeshost.SourcePath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobqueue.computeenvironmentorder.ComputeEnvironment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobqueue.computeenvironmentorder.ComputeEnvironment",
        "UpdateRequires": "Replacement"
    },
    "batch.jobqueue.computeenvironmentorder.Order": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobqueue.computeenvironmentorder.Order",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.ApplicationName": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.ApplicationName",
        "Type": "String",
        "UniqueKey": "beanstalk.ApplicationName",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.Description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.Description",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.ResourceLifecycleConfig": {
        "Required": "No",
        "Type": "ApplicationResourceLifecycleConfig",
        "UniqueKey": "beanstalk.ResourceLifecycleConfig",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.ApplicationName": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-beanstalk.environment.ApplicationName",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.ApplicationName",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.CNAMEPrefix": {
        "Maximum": "63",
        "Minimum": "4",
        "Pattern": "^.{4,63}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.CNAMEPrefix",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.CNAMEPrefix",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.Description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.Description",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.EnvironmentName": {
        "Maximum": "40",
        "Minimum": "4",
        "Pattern": "^.{4,40}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.EnvironmentName",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.EnvironmentName",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.OptionSettings": {
        "Required": "No",
        "Type": "List of [OptionSetting",
        "UniqueKey": "beanstalk.environment.OptionSettings",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.PlatformArn": {
        "Required": "No",
        "SampleValue": "TODO-PlatformArn",
        "UniqueKey": "beanstalk.environment.PlatformArn",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.SolutionStackName": {
        "Required": "No",
        "SampleValue": "TODO-SolutionStackName",
        "UniqueKey": "beanstalk.environment.SolutionStackName",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "beanstalk.environment.Tags",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.TemplateName": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.TemplateName",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.TemplateName",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.Tier": {
        "Required": "No",
        "Type": "Tier",
        "UniqueKey": "beanstalk.environment.Tier",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.VersionLabel": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.VersionLabel",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.VersionLabel",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.Name": {
        "Required": "No",
        "SampleValue": "TODO-Name",
        "UniqueKey": "beanstalk.environment.tier.Name",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.Type": {
        "Required": "No",
        "SampleValue": "TODO-Type",
        "UniqueKey": "beanstalk.environment.tier.Type",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.tier.Version",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.option.settings.Namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.Namespace",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.option.settings.OptionName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.OptionName",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.option.settings.ResourceName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.option.settings.ResourceName",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.ResourceName",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.option.settings.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.Value",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.sourcebundle.S3Bucket": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.sourcebundle.S3Bucket",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.sourcebundle.S3Key": {
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.sourcebundle.S3Key",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.version.ApplicationName": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-beanstalk.version.ApplicationName",
        "Type": "String",
        "UniqueKey": "beanstalk.version.ApplicationName",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.version.Description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.version.Description",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.version.SourceBundle": {
        "Required": "Yes",
        "Type": "SourceBundle",
        "UniqueKey": "beanstalk.version.SourceBundle",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.BudgetLimit": {
        "Required": "No",
        "Type": "Spend",
        "UniqueKey": "budgets.budget.budgetdata.BudgetLimit",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.BudgetName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.BudgetName",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.BudgetType": {
        "Allowed values": "COST | RI_COVERAGE | RI_UTILIZATION | SAVINGS_PLANS_COVERAGE | SAVINGS_PLANS_UTILIZATION | USAGE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.BudgetType",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.CostFilters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "budgets.budget.budgetdata.CostFilters",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.CostTypes": {
        "Required": "No",
        "Type": "CostTypes",
        "UniqueKey": "budgets.budget.budgetdata.CostTypes",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.PlannedBudgetLimits": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "budgets.budget.budgetdata.PlannedBudgetLimits",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.TimePeriod": {
        "Required": "No",
        "Type": "TimePeriod",
        "UniqueKey": "budgets.budget.budgetdata.TimePeriod",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.TimeUnit": {
        "Allowed values": "ANNUALLY | DAILY | MONTHLY | QUARTERLY",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.TimeUnit",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeCredit": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeCredit",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeDiscount": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeDiscount",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeOtherSubscription": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeOtherSubscription",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeRecurring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeRecurring",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeRefund": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeRefund",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeSubscription": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeSubscription",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeSupport": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeSupport",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeTax": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeTax",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.IncludeUpfront": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.IncludeUpfront",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.UseAmortized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.UseAmortized",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.UseBlended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.UseBlended",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notification.ComparisonOperator": {
        "Allowed values": "EQUAL_TO | GREATER_THAN | LESS_THAN",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notification.NotificationType": {
        "Allowed values": "ACTUAL | FORECASTED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.NotificationType",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notification.Threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "budgets.budget.notification.Threshold",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notification.ThresholdType": {
        "Allowed values": "ABSOLUTE_VALUE | PERCENTAGE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.ThresholdType",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notificationwithsubscribers.Notification": {
        "Required": "Yes",
        "Type": "Notification",
        "UniqueKey": "budgets.budget.notificationwithsubscribers.Notification",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notificationwithsubscribers.Subscribers": {
        "Maximum": "11",
        "Required": "Yes",
        "Type": "List of [Subscriber",
        "UniqueKey": "budgets.budget.notificationwithsubscribers.Subscribers",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.spend.Amount": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "budgets.budget.spend.Amount",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.spend.Unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.spend.Unit",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.subscriber.Address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.subscriber.Address",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.subscriber.SubscriptionType": {
        "Allowed values": "EMAIL | SNS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.subscriber.SubscriptionType",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.timeperiod.End": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.timeperiod.End",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.timeperiod.Start": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.timeperiod.Start",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.billingmode.Mode": {
        "Required": "Yes",
        "SampleValue": "TODO-Mode",
        "UniqueKey": "cassandra.table.billingmode.Mode",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.billingmode.ProvisionedThroughput": {
        "Required": "No",
        "SampleValue": "TODO-ProvisionedThroughput",
        "UniqueKey": "cassandra.table.billingmode.ProvisionedThroughput",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.clusteringkeycolumn.Column": {
        "Required": "Yes",
        "Type": "Column",
        "UniqueKey": "cassandra.table.clusteringkeycolumn.Column",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.clusteringkeycolumn.OrderBy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cassandra.table.clusteringkeycolumn.OrderBy",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.column.ColumnName": {
        "Required": "Yes",
        "SampleValue": "TODO-ColumnName",
        "UniqueKey": "cassandra.table.column.ColumnName",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.column.ColumnType": {
        "Required": "Yes",
        "SampleValue": "TODO-ColumnType",
        "UniqueKey": "cassandra.table.column.ColumnType",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.provisionedthroughput.ReadCapacityUnits": {
        "Required": "Yes",
        "SampleValue": "TODO-ReadCapacityUnits",
        "UniqueKey": "cassandra.table.provisionedthroughput.ReadCapacityUnits",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.provisionedthroughput.WriteCapacityUnits": {
        "Required": "Yes",
        "SampleValue": "TODO-WriteCapacityUnits",
        "UniqueKey": "cassandra.table.provisionedthroughput.WriteCapacityUnits",
        "UpdateRequires": "Replacement"
    },
    "certificatemanager.certificate.domainvalidationoption.DomainName": {
        "Maximum": "253",
        "Minimum": "1",
        "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "certificatemanager.certificate.domainvalidationoption.DomainName",
        "UpdateRequires": "Replacement"
    },
    "certificatemanager.certificate.domainvalidationoption.HostedZoneId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "certificatemanager.certificate.domainvalidationoption.HostedZoneId",
        "UpdateRequires": "Replacement"
    },
    "certificatemanager.certificate.domainvalidationoption.ValidationDomain": {
        "Maximum": "253",
        "Minimum": "1",
        "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "certificatemanager.certificate.domainvalidationoption.ValidationDomain",
        "UpdateRequires": "Replacement"
    },
    "cloud9.environmentec2.repository.PathComponent": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloud9.environmentec2.repository.PathComponent",
        "UpdateRequires": "Replacement"
    },
    "cloud9.environmentec2.repository.RepositoryUrl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloud9.environmentec2.repository.RepositoryUrl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.Comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.Comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.DefaultTTL": {
        "Required": "No",
        "SampleValue": "TODO-DefaultTTL",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.DefaultTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.MaxTTL": {
        "Required": "No",
        "SampleValue": "TODO-MaxTTL",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.MaxTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.MinTTL": {
        "Required": "Yes",
        "SampleValue": "TODO-MinTTL",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.MinTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.Name",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.ParametersInCacheKeyAndForwardedToOrigin": {
        "Required": "No",
        "Type": "ParametersInCacheKeyAndForwardedToOrigin",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.ParametersInCacheKeyAndForwardedToOrigin",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cookiesconfig.CookieBehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-CookieBehavior",
        "UniqueKey": "cloudfront.cachepolicy.cookiesconfig.CookieBehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cookiesconfig.Cookies": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.cachepolicy.cookiesconfig.Cookies",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.headersconfig.HeaderBehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-HeaderBehavior",
        "UniqueKey": "cloudfront.cachepolicy.headersconfig.HeaderBehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.headersconfig.Headers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.cachepolicy.headersconfig.Headers",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.CookiesConfig": {
        "Required": "Yes",
        "Type": "CookiesConfig",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.CookiesConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.EnableAcceptEncodingGzip": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.EnableAcceptEncodingGzip",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.HeadersConfig": {
        "Required": "Yes",
        "Type": "HeadersConfig",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.HeadersConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.QueryStringsConfig": {
        "Required": "Yes",
        "Type": "QueryStringsConfig",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.QueryStringsConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.querystringsconfig.QueryStringBehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-QueryStringBehavior",
        "UniqueKey": "cloudfront.cachepolicy.querystringsconfig.QueryStringBehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.querystringsconfig.QueryStrings": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.cachepolicy.querystringsconfig.QueryStrings",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.Comment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.Comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.AllowedMethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.AllowedMethods",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.CachePolicyId": {
        "Required": "No",
        "SampleValue": "TODO-CachePolicyId",
        "UniqueKey": "cloudfront.distribution.cachebehavior.CachePolicyId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.CachedMethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.CachedMethods",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.Compress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.cachebehavior.Compress",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.DefaultTTL": {
        "Required": "No",
        "SampleValue": "TODO-DefaultTTL",
        "UniqueKey": "cloudfront.distribution.cachebehavior.DefaultTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.FieldLevelEncryptionId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.FieldLevelEncryptionId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.ForwardedValues": {
        "Required": "No",
        "SampleValue": "TODO-ForwardedValues",
        "UniqueKey": "cloudfront.distribution.cachebehavior.ForwardedValues",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.LambdaFunctionAssociations": {
        "Required": "No",
        "Type": "List of [LambdaFunctionAssociation",
        "UniqueKey": "cloudfront.distribution.cachebehavior.LambdaFunctionAssociations",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.MaxTTL": {
        "Required": "No",
        "SampleValue": "TODO-MaxTTL",
        "UniqueKey": "cloudfront.distribution.cachebehavior.MaxTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.MinTTL": {
        "Required": "No",
        "SampleValue": "TODO-MinTTL",
        "UniqueKey": "cloudfront.distribution.cachebehavior.MinTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.OriginRequestPolicyId": {
        "Required": "No",
        "SampleValue": "TODO-OriginRequestPolicyId",
        "UniqueKey": "cloudfront.distribution.cachebehavior.OriginRequestPolicyId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.PathPattern": {
        "Required": "Yes",
        "SampleValue": "TODO-PathPattern",
        "UniqueKey": "cloudfront.distribution.cachebehavior.PathPattern",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.SmoothStreaming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.cachebehavior.SmoothStreaming",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.TargetOriginId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.TargetOriginId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.TrustedSigners": {
        "Required": "No",
        "SampleValue": "TODO-TrustedSigners",
        "UniqueKey": "cloudfront.distribution.cachebehavior.TrustedSigners",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.ViewerProtocolPolicy": {
        "Required": "Yes",
        "SampleValue": "TODO-ViewerProtocolPolicy",
        "UniqueKey": "cloudfront.distribution.cachebehavior.ViewerProtocolPolicy",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cookies.Forward": {
        "Required": "Yes",
        "SampleValue": "TODO-Forward",
        "UniqueKey": "cloudfront.distribution.cookies.Forward",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cookies.WhitelistedNames": {
        "Required": "Conditional",
        "SampleValue": "TODO-WhitelistedNames",
        "UniqueKey": "cloudfront.distribution.cookies.WhitelistedNames",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customerrorresponse.ErrorCachingMinTTL": {
        "Required": "No",
        "SampleValue": "TODO-ErrorCachingMinTTL",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.ErrorCachingMinTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customerrorresponse.ErrorCode": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.ErrorCode",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customerrorresponse.ResponseCode": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.ResponseCode",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customerrorresponse.ResponsePagePath": {
        "Required": "Conditional",
        "SampleValue": "TODO-ResponsePagePath",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.ResponsePagePath",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.HTTPPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.HTTPPort",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.HTTPSPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.HTTPSPort",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.OriginKeepaliveTimeout": {
        "Required": "No",
        "SampleValue": "TODO-OriginKeepaliveTimeout",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.OriginKeepaliveTimeout",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.OriginProtocolPolicy": {
        "Allowed values": "http-only | https-only | match-viewer",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.OriginProtocolPolicy",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.OriginReadTimeout": {
        "Required": "No",
        "SampleValue": "TODO-OriginReadTimeout",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.OriginReadTimeout",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.OriginSSLProtocols": {
        "Required": "No",
        "SampleValue": "TODO-OriginSSLProtocols",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.OriginSSLProtocols",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.AllowedMethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.AllowedMethods",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.CachePolicyId": {
        "Required": "No",
        "SampleValue": "TODO-CachePolicyId",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.CachePolicyId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.CachedMethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.CachedMethods",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.Compress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.Compress",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.DefaultTTL": {
        "Required": "No",
        "SampleValue": "TODO-DefaultTTL",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.DefaultTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.FieldLevelEncryptionId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.FieldLevelEncryptionId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.ForwardedValues": {
        "Required": "No",
        "SampleValue": "TODO-ForwardedValues",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.ForwardedValues",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.LambdaFunctionAssociations": {
        "Required": "No",
        "Type": "List of [LambdaFunctionAssociation",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.LambdaFunctionAssociations",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.MaxTTL": {
        "Required": "No",
        "SampleValue": "TODO-MaxTTL",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.MaxTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.MinTTL": {
        "Required": "No",
        "SampleValue": "TODO-MinTTL",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.MinTTL",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.OriginRequestPolicyId": {
        "Required": "No",
        "SampleValue": "TODO-OriginRequestPolicyId",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.OriginRequestPolicyId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.SmoothStreaming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.SmoothStreaming",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.TargetOriginId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.TargetOriginId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.TrustedSigners": {
        "Required": "No",
        "SampleValue": "TODO-TrustedSigners",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.TrustedSigners",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.ViewerProtocolPolicy": {
        "Required": "Yes",
        "SampleValue": "TODO-ViewerProtocolPolicy",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.ViewerProtocolPolicy",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.Aliases": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.Aliases",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.CacheBehaviors": {
        "Required": "No",
        "Type": "List of [CacheBehavior",
        "UniqueKey": "cloudfront.distribution.distributionconfig.CacheBehaviors",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.Comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.Comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.CustomErrorResponses": {
        "Required": "No",
        "SampleValue": "TODO-CustomErrorResponses",
        "UniqueKey": "cloudfront.distribution.distributionconfig.CustomErrorResponses",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.DefaultCacheBehavior": {
        "Required": "No",
        "Type": "DefaultCacheBehavior",
        "UniqueKey": "cloudfront.distribution.distributionconfig.DefaultCacheBehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.DefaultRootObject": {
        "Required": "No",
        "SampleValue": "TODO-DefaultRootObject",
        "UniqueKey": "cloudfront.distribution.distributionconfig.DefaultRootObject",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.distributionconfig.Enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.HttpVersion": {
        "Allowed values": "http1.1 | http2",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.HttpVersion",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.IPV6Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.distributionconfig.IPV6Enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.Logging": {
        "Required": "No",
        "SampleValue": "TODO-Logging",
        "UniqueKey": "cloudfront.distribution.distributionconfig.Logging",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.OriginGroups": {
        "Required": "No",
        "Type": "OriginGroups",
        "UniqueKey": "cloudfront.distribution.distributionconfig.OriginGroups",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.Origins": {
        "Required": "No",
        "Type": "List of [Origin",
        "UniqueKey": "cloudfront.distribution.distributionconfig.Origins",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.PriceClass": {
        "Required": "No",
        "SampleValue": "TODO-PriceClass",
        "UniqueKey": "cloudfront.distribution.distributionconfig.PriceClass",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.Restrictions": {
        "Required": "No",
        "Type": "Restrictions",
        "UniqueKey": "cloudfront.distribution.distributionconfig.Restrictions",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.ViewerCertificate": {
        "Required": "No",
        "Type": "ViewerCertificate",
        "UniqueKey": "cloudfront.distribution.distributionconfig.ViewerCertificate",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.WebACLId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.WebACLId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.forwardedvalues.Cookies": {
        "Required": "No",
        "SampleValue": "TODO-Cookies",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.Cookies",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.forwardedvalues.Headers": {
        "Required": "No",
        "SampleValue": "TODO-Headers",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.Headers",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.forwardedvalues.QueryString": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.QueryString",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.forwardedvalues.QueryStringCacheKeys": {
        "Required": "No",
        "SampleValue": "TODO-QueryStringCacheKeys",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.QueryStringCacheKeys",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.georestriction.Locations": {
        "Required": "Conditional",
        "SampleValue": "TODO-Locations",
        "UniqueKey": "cloudfront.distribution.georestriction.Locations",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.georestriction.RestrictionType": {
        "Allowed values": "blacklist | none | whitelist",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.georestriction.RestrictionType",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.lambdafunctionassociation.EventType": {
        "Allowed values": "origin-request | origin-response | viewer-request | viewer-response",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.lambdafunctionassociation.EventType",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.lambdafunctionassociation.IncludeBody": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.lambdafunctionassociation.IncludeBody",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.lambdafunctionassociation.LambdaFunctionARN": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.lambdafunctionassociation.LambdaFunctionARN",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.logging.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.logging.Bucket",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.logging.IncludeCookies": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.logging.IncludeCookies",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.logging.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.logging.Prefix",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.ConnectionAttempts": {
        "Required": "No",
        "SampleValue": "TODO-ConnectionAttempts",
        "UniqueKey": "cloudfront.distribution.origin.ConnectionAttempts",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.ConnectionTimeout": {
        "Required": "No",
        "SampleValue": "TODO-ConnectionTimeout",
        "UniqueKey": "cloudfront.distribution.origin.ConnectionTimeout",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.CustomOriginConfig": {
        "Required": "Conditional",
        "SampleValue": "TODO-CustomOriginConfig",
        "UniqueKey": "cloudfront.distribution.origin.CustomOriginConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.DomainName": {
        "Required": "Yes",
        "SampleValue": "TODO-DomainName",
        "UniqueKey": "cloudfront.distribution.origin.DomainName",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origin.Id",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.OriginCustomHeaders": {
        "Required": "No",
        "SampleValue": "TODO-OriginCustomHeaders",
        "UniqueKey": "cloudfront.distribution.origin.OriginCustomHeaders",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.OriginPath": {
        "Required": "No",
        "SampleValue": "TODO-OriginPath",
        "UniqueKey": "cloudfront.distribution.origin.OriginPath",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.S3OriginConfig": {
        "Required": "Conditional",
        "SampleValue": "TODO-S3OriginConfig",
        "UniqueKey": "cloudfront.distribution.origin.S3OriginConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origincustomheader.HeaderName": {
        "Required": "Yes",
        "SampleValue": "TODO-HeaderName",
        "UniqueKey": "cloudfront.distribution.origincustomheader.HeaderName",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origincustomheader.HeaderValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origincustomheader.HeaderValue",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroup.FailoverCriteria": {
        "Required": "Yes",
        "Type": "OriginGroupFailoverCriteria",
        "UniqueKey": "cloudfront.distribution.origingroup.FailoverCriteria",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroup.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origingroup.Id",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroup.Members": {
        "Required": "Yes",
        "Type": "OriginGroupMembers",
        "UniqueKey": "cloudfront.distribution.origingroup.Members",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroupfailovercriteria.StatusCodes": {
        "Required": "Yes",
        "Type": "StatusCodes",
        "UniqueKey": "cloudfront.distribution.origingroupfailovercriteria.StatusCodes",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroupmember.OriginId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origingroupmember.OriginId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroupmembers.Items": {
        "Maximum": "2",
        "Required": "Yes",
        "Type": "List of [OriginGroupMember",
        "UniqueKey": "cloudfront.distribution.origingroupmembers.Items",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroupmembers.Quantity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.origingroupmembers.Quantity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroups.Items": {
        "Required": "No",
        "Type": "List of [OriginGroup",
        "UniqueKey": "cloudfront.distribution.origingroups.Items",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroups.Quantity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.origingroups.Quantity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.restrictions.GeoRestriction": {
        "Required": "Yes",
        "Type": "GeoRestriction",
        "UniqueKey": "cloudfront.distribution.restrictions.GeoRestriction",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.s3originconfig.OriginAccessIdentity": {
        "Required": "No",
        "SampleValue": "TODO-OriginAccessIdentity",
        "UniqueKey": "cloudfront.distribution.s3originconfig.OriginAccessIdentity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.statuscodes.Items": {
        "Required": "Yes",
        "Type": "List of Integer",
        "UniqueKey": "cloudfront.distribution.statuscodes.Items",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.statuscodes.Quantity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.statuscodes.Quantity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.AcmCertificateArn": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.viewercertificate.AcmCertificateArn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.CloudFrontDefaultCertificate": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Conditional",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.viewercertificate.CloudFrontDefaultCertificate",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.IamCertificateId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.viewercertificate.IamCertificateId",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.MinimumProtocolVersion": {
        "Required": "Conditional",
        "SampleValue": "TODO-MinimumProtocolVersion",
        "UniqueKey": "cloudfront.distribution.viewercertificate.MinimumProtocolVersion",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.SslSupportMethod": {
        "Allowed values": "sni-only | static-ip | vip",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.viewercertificate.SslSupportMethod",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.cookiesconfig.CookieBehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-CookieBehavior",
        "UniqueKey": "cloudfront.originrequestpolicy.cookiesconfig.CookieBehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.cookiesconfig.Cookies": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.originrequestpolicy.cookiesconfig.Cookies",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.headersconfig.HeaderBehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-HeaderBehavior",
        "UniqueKey": "cloudfront.originrequestpolicy.headersconfig.HeaderBehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.headersconfig.Headers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.originrequestpolicy.headersconfig.Headers",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.Comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.Comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.CookiesConfig": {
        "Required": "Yes",
        "Type": "CookiesConfig",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.CookiesConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.HeadersConfig": {
        "Required": "Yes",
        "Type": "HeadersConfig",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.HeadersConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.Name",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.QueryStringsConfig": {
        "Required": "Yes",
        "Type": "QueryStringsConfig",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.QueryStringsConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.querystringsconfig.QueryStringBehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-QueryStringBehavior",
        "UniqueKey": "cloudfront.originrequestpolicy.querystringsconfig.QueryStringBehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.querystringsconfig.QueryStrings": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.originrequestpolicy.querystringsconfig.QueryStrings",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.realtimelogconfig.endpoint.KinesisStreamConfig": {
        "Required": "Yes",
        "Type": "KinesisStreamConfig",
        "UniqueKey": "cloudfront.realtimelogconfig.endpoint.KinesisStreamConfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.realtimelogconfig.endpoint.StreamType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.realtimelogconfig.endpoint.StreamType",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.realtimelogconfig.kinesisstreamconfig.RoleArn": {
        "Required": "Yes",
        "SampleValue": "TODO-RoleArn",
        "UniqueKey": "cloudfront.realtimelogconfig.kinesisstreamconfig.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.realtimelogconfig.kinesisstreamconfig.StreamArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.realtimelogconfig.kinesisstreamconfig.StreamArn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.logging.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.logging.Bucket",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.logging.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.logging.Enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.logging.Prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.logging.Prefix",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.s3origin.DomainName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.s3origin.DomainName",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.s3origin.OriginAccessIdentity": {
        "Required": "Yes",
        "SampleValue": "TODO-OriginAccessIdentity",
        "UniqueKey": "cloudfront.streamingdistribution.s3origin.OriginAccessIdentity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.Aliases": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.Aliases",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.Comment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.Comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.Enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.Logging": {
        "Required": "No",
        "Type": "Logging",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.Logging",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.PriceClass": {
        "Allowed values": "PriceClass_100 | PriceClass_200 | PriceClass_All",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.PriceClass",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.S3Origin": {
        "Required": "Yes",
        "Type": "S3Origin",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.S3Origin",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.TrustedSigners": {
        "Required": "Yes",
        "SampleValue": "TODO-TrustedSigners",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.TrustedSigners",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.trustedsigners.AwsAccountNumbers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.streamingdistribution.trustedsigners.AwsAccountNumbers",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.trustedsigners.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.trustedsigners.Enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.dataresource.Type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudtrail.trail.dataresource.Type",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.dataresource.Values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "cloudtrail.trail.dataresource.Values",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.eventselector.DataResources": {
        "Required": "Conditional",
        "SampleValue": "TODO-DataResources",
        "UniqueKey": "cloudtrail.trail.eventselector.DataResources",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.eventselector.IncludeManagementEvents": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudtrail.trail.eventselector.IncludeManagementEvents",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.eventselector.ReadWriteType": {
        "Allowed values": "All | ReadOnly | WriteOnly",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudtrail.trail.eventselector.ReadWriteType",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metric.Dimensions": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Dimension",
        "UniqueKey": "cloudwatch.alarm.metric.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metric.MetricName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cloudwatch.alarm.metric.MetricName",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metric.MetricName",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metric.Namespace": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[^:].*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metric.Namespace",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.Expression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.Expression",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.Id": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.alarm.metricdataquery.Id",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.Id",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.Label": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.Label",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.MetricStat": {
        "Required": "No",
        "Type": "MetricStat",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.MetricStat",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.Period": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.Period",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.ReturnData": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.ReturnData",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricstat.Metric": {
        "Required": "Yes",
        "Type": "Metric",
        "UniqueKey": "cloudwatch.alarm.metricstat.Metric",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricstat.Period": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudwatch.alarm.metricstat.Period",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricstat.Stat": {
        "Required": "Yes",
        "SampleValue": "TODO-Stat",
        "UniqueKey": "cloudwatch.alarm.metricstat.Stat",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricstat.Unit": {
        "Allowed values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricstat.Unit",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.configuration.ExcludedTimeRanges": {
        "Required": "No",
        "Type": "List of [Range",
        "UniqueKey": "cloudwatch.anomalydetector.configuration.ExcludedTimeRanges",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.configuration.MetricTimeZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.configuration.MetricTimeZone",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.dimension.Name": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.anomalydetector.dimension.Name",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.dimension.Name",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.dimension.Value": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.anomalydetector.dimension.Value",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.dimension.Value",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.range.EndTime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.range.EndTime",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.range.StartTime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.range.StartTime",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.ArtifactIdentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.ArtifactIdentifier",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.EncryptionDisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.artifacts.EncryptionDisabled",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.Location": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.Location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.Name": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.Name",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.NamespaceType": {
        "Allowed values": "BUILD_ID | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.NamespaceType",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.OverrideArtifactName": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.artifacts.OverrideArtifactName",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.Packaging": {
        "Allowed values": "NONE | ZIP",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.Packaging",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.Path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.Path",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "codebuild.project.artifacts.Type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.batchrestrictions.ComputeTypesAllowed": {
        "Required": "No",
        "SampleValue": "TODO-ComputeTypesAllowed",
        "UniqueKey": "codebuild.project.batchrestrictions.ComputeTypesAllowed",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.batchrestrictions.MaximumBuildsAllowed": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "codebuild.project.batchrestrictions.MaximumBuildsAllowed",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.buildstatusconfig.Context": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.buildstatusconfig.Context",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.buildstatusconfig.TargetUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.buildstatusconfig.TargetUrl",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.cloudwatchlogsconfig.GroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.GroupName",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.cloudwatchlogsconfig.Status": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.Status",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.cloudwatchlogsconfig.StreamName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.StreamName",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&": {
        "UniqueKey": "codebuild.project.environment.- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&"
    },
    "codebuild.project.environment.- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.environment.- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {
        "UniqueKey": "codebuild.project.environment.- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\""
    },
    "codebuild.project.environment.Certificate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.Certificate",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.ComputeType": {
        "Required": "Yes",
        "SampleValue": "TODO-ComputeType",
        "UniqueKey": "codebuild.project.environment.ComputeType",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.EnvironmentVariables": {
        "Required": "No",
        "Type": "List of [EnvironmentVariable",
        "UniqueKey": "codebuild.project.environment.EnvironmentVariables",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.Image": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.Image",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.ImagePullCredentialsType": {
        "Allowed values": "CODEBUILD | SERVICE_ROLE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.ImagePullCredentialsType",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.PrivilegedMode": {
        "UniqueKey": "codebuild.project.environment.PrivilegedMode"
    },
    "codebuild.project.environment.RegistryCredential": {
        "Required": "No",
        "Type": "RegistryCredential",
        "UniqueKey": "codebuild.project.environment.RegistryCredential",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.Type": {
        "Allowed values": "ARM_CONTAINER | LINUX_CONTAINER | LINUX_GPU_CONTAINER | WINDOWS_CONTAINER | WINDOWS_SERVER_2019_CONTAINER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.Type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environmentvariable.Name": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environmentvariable.Name",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environmentvariable.Type": {
        "Allowed values": "PARAMETER_STORE | PLAINTEXT | SECRETS_MANAGER",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.environmentvariable.Type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environmentvariable.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environmentvariable.Value",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.gitsubmodulesconfig.FetchSubmodules": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.gitsubmodulesconfig.FetchSubmodules",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.logsconfig.CloudWatchLogs": {
        "Required": "No",
        "Type": "CloudWatchLogsConfig",
        "UniqueKey": "codebuild.project.logsconfig.CloudWatchLogs",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.logsconfig.S3Logs": {
        "Required": "No",
        "Type": "S3LogsConfig",
        "UniqueKey": "codebuild.project.logsconfig.S3Logs",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectbuildbatchconfig.CombineArtifacts": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.projectbuildbatchconfig.CombineArtifacts",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectbuildbatchconfig.Restrictions": {
        "Required": "No",
        "Type": "BatchRestrictions",
        "UniqueKey": "codebuild.project.projectbuildbatchconfig.Restrictions",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectbuildbatchconfig.ServiceRole": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectbuildbatchconfig.ServiceRole",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectbuildbatchconfig.TimeoutInMins": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "codebuild.project.projectbuildbatchconfig.TimeoutInMins",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectcache.Location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectcache.Location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectcache.Modes": {
        "Required": "No",
        "SampleValue": "TODO-Modes",
        "UniqueKey": "codebuild.project.projectcache.Modes",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectcache.Type": {
        "Allowed values": "LOCAL | NO_CACHE | S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectcache.Type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.Identifier": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.Identifier",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.Location": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.Location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.MountOptions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.MountOptions",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.MountPoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.MountPoint",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.Type": {
        "Allowed values": "EFS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.Type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectsourceversion.SourceIdentifier": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectsourceversion.SourceIdentifier",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectsourceversion.SourceVersion": {
        "Required": "No",
        "SampleValue": "TODO-SourceVersion",
        "UniqueKey": "codebuild.project.projectsourceversion.SourceVersion",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projecttriggers.FilterGroups": {
        "Required": "No",
        "Type": "List of [FilterGroup",
        "UniqueKey": "codebuild.project.projecttriggers.FilterGroups",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projecttriggers.Webhook": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.projecttriggers.Webhook",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.registrycredential.Credential": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.registrycredential.Credential",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.registrycredential.CredentialProvider": {
        "Allowed values": "SECRETS_MANAGER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.registrycredential.CredentialProvider",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.s3logsconfig.EncryptionDisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.s3logsconfig.EncryptionDisabled",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.s3logsconfig.Location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.s3logsconfig.Location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.s3logsconfig.Status": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.s3logsconfig.Status",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.Auth": {
        "Required": "No",
        "Type": "SourceAuth",
        "UniqueKey": "codebuild.project.source.Auth",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.BuildSpec": {
        "Required": "No",
        "SampleValue": "TODO-BuildSpec",
        "UniqueKey": "codebuild.project.source.BuildSpec",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.BuildStatusConfig": {
        "Required": "No",
        "Type": "BuildStatusConfig",
        "UniqueKey": "codebuild.project.source.BuildStatusConfig",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.GitCloneDepth": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "codebuild.project.source.GitCloneDepth",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.GitSubmodulesConfig": {
        "Required": "No",
        "Type": "GitSubmodulesConfig",
        "UniqueKey": "codebuild.project.source.GitSubmodulesConfig",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.InsecureSsl": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.source.InsecureSsl",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.Location": {
        "Required": "No",
        "SampleValue": "TODO-Location",
        "UniqueKey": "codebuild.project.source.Location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.ReportBuildStatus": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.source.ReportBuildStatus",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.SourceIdentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.source.SourceIdentifier",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.Type": {
        "Allowed values": "BITBUCKET | CODECOMMIT | CODEPIPELINE | GITHUB | GITHUB_ENTERPRISE | NO_SOURCE | S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.source.Type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.sourceauth.Resource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.sourceauth.Resource",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.sourceauth.Type": {
        "Allowed values": "OAUTH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.sourceauth.Type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.vpcconfig.SecurityGroupIds": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codebuild.project.vpcconfig.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.vpcconfig.Subnets": {
        "Maximum": "16",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codebuild.project.vpcconfig.Subnets",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.vpcconfig.VpcId": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.vpcconfig.VpcId",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.webhookfilter.ExcludeMatchedPattern": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.webhookfilter.ExcludeMatchedPattern",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.webhookfilter.Pattern": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.webhookfilter.Pattern",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.webhookfilter.Type": {
        "Allowed values": "ACTOR_ACCOUNT_ID | BASE_REF | COMMIT_MESSAGE | EVENT | FILE_PATH | HEAD_REF",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.webhookfilter.Type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.reportexportconfig.ExportConfigType": {
        "Allowed values": "NO_EXPORT | S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.reportexportconfig.ExportConfigType",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.reportexportconfig.S3Destination": {
        "Required": "No",
        "Type": "S3ReportExportConfig",
        "UniqueKey": "codebuild.reportgroup.reportexportconfig.S3Destination",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.Bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.Bucket",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.EncryptionDisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.EncryptionDisabled",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.EncryptionKey": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.EncryptionKey",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.Packaging": {
        "Allowed values": "NONE | ZIP",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.Packaging",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.Path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.Path",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.code.BranchName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codecommit.repository.code.BranchName",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.code.S3": {
        "Required": "Yes",
        "Type": "S3",
        "UniqueKey": "codecommit.repository.code.S3",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.Branches": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codecommit.repository.repositorytrigger.Branches",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.CustomData": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.CustomData",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.DestinationArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.DestinationArn",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.Events": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "codecommit.repository.repositorytrigger.Events",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.Name",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.s3.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.Bucket",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.s3.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.Key",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.s3.ObjectVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentconfig.minimumhealthyhosts.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "codedeploy.deploymentconfig.minimumhealthyhosts.Type",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentconfig.minimumhealthyhosts.Value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "codedeploy.deploymentconfig.minimumhealthyhosts.Value",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.alarm.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.alarm.Name",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.Alarms": {
        "Required": "No",
        "Type": "List of [Alarm",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.Alarms",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.Enabled",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.IgnorePollAlarmFailure": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.IgnorePollAlarmFailure",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.autorollbackconfiguration.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.autorollbackconfiguration.Enabled",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.autorollbackconfiguration.Events": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codedeploy.deploymentgroup.autorollbackconfiguration.Events",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.Description",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.IgnoreApplicationStopFailures": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.IgnoreApplicationStopFailures",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.Revision": {
        "Required": "Yes",
        "Type": "RevisionLocation",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.Revision",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.GitHubLocation": {
        "Required": "No",
        "Type": "GitHubLocation",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.GitHubLocation",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.RevisionType": {
        "Allowed values": "AppSpecContent | GitHub | S3 | String",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.RevisionType",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.S3Location": {
        "Required": "No",
        "Type": "S3Location",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.S3Location",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.githublocation.CommitId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.githublocation.CommitId",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.githublocation.Repository": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.githublocation.Repository",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.Bucket",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.BundleType": {
        "Allowed values": "JSON | tar | tgz | YAML | zip",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.BundleType",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.ETag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.ETag",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.Key",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.Version",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deploymentstyle.DeploymentOption": {
        "Allowed values": "WITH_TRAFFIC_CONTROL | WITHOUT_TRAFFIC_CONTROL",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deploymentstyle.DeploymentOption",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deploymentstyle.DeploymentType": {
        "Required": "No",
        "SampleValue": "TODO-DeploymentType",
        "UniqueKey": "codedeploy.deploymentgroup.deploymentstyle.DeploymentType",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.Key",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.Type": {
        "Allowed values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.Type",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.Value",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagset.Ec2TagSetList": {
        "Required": "No",
        "Type": "List of [EC2TagSetListObject",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagset.Ec2TagSetList",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagsetlistobject.Ec2TagGroup": {
        "Required": "No",
        "Type": "List of [EC2TagFilter",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagsetlistobject.Ec2TagGroup",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.elbinfo.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.elbinfo.Name",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.loadbalancerinfo.ElbInfoList": {
        "Required": "No",
        "Type": "List of [ELBInfo",
        "UniqueKey": "codedeploy.deploymentgroup.loadbalancerinfo.ElbInfoList",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.loadbalancerinfo.TargetGroupInfoList": {
        "Required": "Conditional",
        "Type": "List of [TargetGroupInfo",
        "UniqueKey": "codedeploy.deploymentgroup.loadbalancerinfo.TargetGroupInfoList",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.onpremisestagset.OnPremisesTagSetList": {
        "Required": "No",
        "Type": "List of [OnPremisesTagSetListObject",
        "UniqueKey": "codedeploy.deploymentgroup.onpremisestagset.OnPremisesTagSetList",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.onpremisestagsetlistobject.OnPremisesTagGroup": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "codedeploy.deploymentgroup.onpremisestagsetlistobject.OnPremisesTagGroup",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.tagfilter.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.Key",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.tagfilter.Type": {
        "Allowed values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.Type",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.tagfilter.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.Value",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.targetgroupinfo.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.targetgroupinfo.Name",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.triggerconfig.TriggerEvents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.TriggerEvents",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.triggerconfig.TriggerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.TriggerName",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.triggerconfig.TriggerTargetArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.TriggerTargetArn",
        "UpdateRequires": "Replacement"
    },
    "codeguruprofiler.profilinggroup.channel.channelId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codeguruprofiler.profilinggroup.channel.channelId",
        "UpdateRequires": "Replacement"
    },
    "codeguruprofiler.profilinggroup.channel.channelUri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codeguruprofiler.profilinggroup.channel.channelUri",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.artifactdetails.MaximumCount": {
        "Maximum": "5",
        "Minimum": "0",
        "Pattern": "^[0,5]}$",
        "Required": "Yes",
        "SampleValue": "0...5",
        "Type": "Integer",
        "UniqueKey": "codepipeline.customactiontype.artifactdetails.MaximumCount",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.artifactdetails.MinimumCount": {
        "Maximum": "5",
        "Minimum": "0",
        "Pattern": "^[0,5]}$",
        "Required": "Yes",
        "SampleValue": "0...5",
        "Type": "Integer",
        "UniqueKey": "codepipeline.customactiontype.artifactdetails.MinimumCount",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.Description": {
        "Maximum": "160",
        "Minimum": "1",
        "Pattern": "^.{1,160}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.configurationproperties.Description",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.Description",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.Key": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.Key",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.Name": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "^.{1,50}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.customactiontype.configurationproperties.Name",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.Name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.Queryable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.Queryable",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.Required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.Required",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.Secret": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.Secret",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.Type": {
        "Allowed values": "Boolean | Number | String",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.Type",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.settings.EntityUrlTemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.EntityUrlTemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.EntityUrlTemplate",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.settings.ExecutionUrlTemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.ExecutionUrlTemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.ExecutionUrlTemplate",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.settings.RevisionUrlTemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.RevisionUrlTemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.RevisionUrlTemplate",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.settings.ThirdPartyConfigurationUrl": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.ThirdPartyConfigurationUrl",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.ThirdPartyConfigurationUrl",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.EncryptionKey": {
        "Required": "No",
        "Type": "EncryptionKey",
        "UniqueKey": "codepipeline.pipeline.artifactstore.EncryptionKey",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.Location": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\-\\.]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.Location",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.Type": {
        "Allowed values": "S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.Type",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.encryptionkey.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.encryptionkey.Id",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.encryptionkey.Type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.encryptionkey.Type",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstoremap.ArtifactStore": {
        "Required": "Conditional",
        "Type": "ArtifactStore",
        "UniqueKey": "codepipeline.pipeline.artifactstoremap.ArtifactStore",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstoremap.Region": {
        "Maximum": "30",
        "Minimum": "4",
        "Pattern": "^.{4,30}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.pipeline.artifactstoremap.Region",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstoremap.Region",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.disableinboundstagetransitions.Reason": {
        "Maximum": "300",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.disableinboundstagetransitions.Reason",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.disableinboundstagetransitions.StageName": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.disableinboundstagetransitions.StageName",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.Actions": {
        "Required": "Yes",
        "Type": "List of [ActionDeclaration",
        "UniqueKey": "codepipeline.pipeline.stages.Actions",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.Blockers": {
        "Required": "No",
        "Type": "List of [BlockerDeclaration",
        "UniqueKey": "codepipeline.pipeline.stages.Blockers",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.Name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.Name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.ActionTypeId": {
        "Required": "Yes",
        "Type": "ActionTypeId",
        "UniqueKey": "codepipeline.pipeline.stages.actions.ActionTypeId",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.Configuration": {
        "Required": "No",
        "SampleValue": "TODO-Configuration",
        "UniqueKey": "codepipeline.pipeline.stages.actions.Configuration",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.InputArtifacts": {
        "Required": "No",
        "SampleValue": "TODO-InputArtifacts",
        "UniqueKey": "codepipeline.pipeline.stages.actions.InputArtifacts",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.Name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.Name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.Namespace": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9@\\-_]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.Namespace",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.OutputArtifacts": {
        "Required": "No",
        "Type": "List of [OutputArtifact",
        "UniqueKey": "codepipeline.pipeline.stages.actions.OutputArtifacts",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.Region": {
        "Maximum": "30",
        "Minimum": "4",
        "Pattern": "^.{4,30}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.pipeline.stages.actions.Region",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.Region",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.RoleArn": {
        "Maximum": "1024",
        "Pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.RunOrder": {
        "Maximum": "999",
        "Minimum": "1",
        "Pattern": "^[1,999]}$",
        "Required": "No",
        "SampleValue": "1...999",
        "Type": "Integer",
        "UniqueKey": "codepipeline.pipeline.stages.actions.RunOrder",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.Category": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.Category",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.Owner": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.Owner",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.Provider": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.Provider",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.Version": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.Version",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.inputartifacts.Name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.inputartifacts.Name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.outputartifacts.Name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.outputartifacts.Name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.blockers.Name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.pipeline.stages.blockers.Name",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.blockers.Name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.blockers.Type": {
        "Allowed values": "Schedule",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.blockers.Type",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.webhook.webhookauthconfiguration.AllowedIPRange": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookauthconfiguration.AllowedIPRange",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookauthconfiguration.AllowedIPRange",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.webhook.webhookauthconfiguration.SecretToken": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookauthconfiguration.SecretToken",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookauthconfiguration.SecretToken",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.webhook.webhookfilterrule.JsonPath": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "^.{1,150}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.webhook.webhookfilterrule.JsonPath",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookfilterrule.JsonPath",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.webhook.webhookfilterrule.MatchEquals": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "^.{1,150}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookfilterrule.MatchEquals",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookfilterrule.MatchEquals",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.code.S3": {
        "Required": "Yes",
        "Type": "S3",
        "UniqueKey": "codestar.githubrepository.code.S3",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.Bucket",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.Key",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.ObjectVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "codestarnotifications.notificationrule.target.TargetAddress": {
        "Maximum": "320",
        "Minimum": "1",
        "Pattern": "^.{1,320}$",
        "Required": "No",
        "SampleValue": "TODO-codestarnotifications.notificationrule.target.TargetAddress",
        "Type": "String",
        "UniqueKey": "codestarnotifications.notificationrule.target.TargetAddress",
        "UpdateRequires": "Replacement"
    },
    "codestarnotifications.notificationrule.target.TargetType": {
        "Pattern": "^[A-Za-z]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codestarnotifications.notificationrule.target.TargetType",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitoidentityprovider.ClientId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.ClientId",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitoidentityprovider.ProviderName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.ProviderName",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitoidentityprovider.ServerSideTokenCheck": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.ServerSideTokenCheck",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitostreams.RoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitostreams.StreamName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.StreamName",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitostreams.StreamingStatus": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.StreamingStatus",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.pushsync.ApplicationArns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.identitypool.pushsync.ApplicationArns",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.pushsync.RoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.pushsync.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.mappingrule.Claim": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.Claim",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.mappingrule.MatchType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.MatchType",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.mappingrule.RoleARN": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.mappingrule.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.Value",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rolemapping.AmbiguousRoleResolution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.AmbiguousRoleResolution",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rolemapping.IdentityProvider": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.IdentityProvider",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rolemapping.RulesConfiguration": {
        "Required": "No",
        "Type": "RulesConfigurationType",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.RulesConfiguration",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rolemapping.Type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.Type",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rulesconfigurationtype.Rules": {
        "Required": "Yes",
        "Type": "List of [MappingRule",
        "UniqueKey": "cognito.identitypoolroleattachment.rulesconfigurationtype.Rules",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.accountrecoverysetting.RecoveryMechanisms": {
        "Maximum": "2",
        "Required": "No",
        "Type": "List of [RecoveryOption",
        "UniqueKey": "cognito.userpool.accountrecoverysetting.RecoveryMechanisms",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.admincreateuserconfig.AllowAdminCreateUserOnly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.AllowAdminCreateUserOnly",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.admincreateuserconfig.InviteMessageTemplate": {
        "Required": "No",
        "Type": "InviteMessageTemplate",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.InviteMessageTemplate",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.admincreateuserconfig.UnusedAccountValidityDays": {
        "Maximum": "365",
        "Minimum": "0",
        "Pattern": "^[0,365]}$",
        "Required": "No",
        "SampleValue": "0...365",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.UnusedAccountValidityDays",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.deviceconfiguration.ChallengeRequiredOnNewDevice": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.deviceconfiguration.ChallengeRequiredOnNewDevice",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.deviceconfiguration.DeviceOnlyRememberedOnUserPrompt": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.deviceconfiguration.DeviceOnlyRememberedOnUserPrompt",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.ConfigurationSet": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.ConfigurationSet",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.EmailSendingAccount": {
        "Required": "No",
        "SampleValue": "TODO-EmailSendingAccount",
        "UniqueKey": "cognito.userpool.emailconfiguration.EmailSendingAccount",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.From": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.From",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.ReplyToEmailAddress": {
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.ReplyToEmailAddress",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.SourceArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.SourceArn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.invitemessagetemplate.EmailMessage": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.EmailMessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.invitemessagetemplate.EmailSubject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.EmailSubject",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.invitemessagetemplate.SMSMessage": {
        "Maximum": "140",
        "Minimum": "6",
        "Pattern": ".*\\{####\\}.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.SMSMessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.CreateAuthChallenge": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.CreateAuthChallenge",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.CustomMessage": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.CustomMessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.DefineAuthChallenge": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.DefineAuthChallenge",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.PostAuthentication": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.PostAuthentication",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.PostConfirmation": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.PostConfirmation",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.PreAuthentication": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.PreAuthentication",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.PreSignUp": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.PreSignUp",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.PreTokenGeneration": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.PreTokenGeneration",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.UserMigration": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.UserMigration",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.VerifyAuthChallengeResponse": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.VerifyAuthChallengeResponse",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.numberattributeconstraints.MaxValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.numberattributeconstraints.MaxValue",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.numberattributeconstraints.MinValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.numberattributeconstraints.MinValue",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.MinimumLength": {
        "Maximum": "99",
        "Minimum": "6",
        "Pattern": "^[6,99]}$",
        "Required": "No",
        "SampleValue": "6...99",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.passwordpolicy.MinimumLength",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.RequireLowercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.RequireLowercase",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.RequireNumbers": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.RequireNumbers",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.RequireSymbols": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.RequireSymbols",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.RequireUppercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.RequireUppercase",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.TemporaryPasswordValidityDays": {
        "Maximum": "365",
        "Minimum": "0",
        "Pattern": "^[0,365]}$",
        "Required": "No",
        "SampleValue": "0...365",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.passwordpolicy.TemporaryPasswordValidityDays",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.policies.PasswordPolicy": {
        "Required": "No",
        "Type": "PasswordPolicy",
        "UniqueKey": "cognito.userpool.policies.PasswordPolicy",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.recoveryoption.Name": {
        "Allowed values": "admin_only | verified_email | verified_phone_number",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.recoveryoption.Name",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.recoveryoption.Priority": {
        "Maximum": "2",
        "Minimum": "1",
        "Pattern": "^[1,2]}$",
        "Required": "No",
        "SampleValue": "1...2",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.recoveryoption.Priority",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.AttributeDataType": {
        "Allowed values": "Boolean | DateTime | Number | String",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.schemaattribute.AttributeDataType",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.DeveloperOnlyAttribute": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.DeveloperOnlyAttribute",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.Mutable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.Mutable",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.Name": {
        "Maximum": "20",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.schemaattribute.Name",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.NumberAttributeConstraints": {
        "Required": "No",
        "Type": "NumberAttributeConstraints",
        "UniqueKey": "cognito.userpool.schemaattribute.NumberAttributeConstraints",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.Required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.Required",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.StringAttributeConstraints": {
        "Required": "No",
        "Type": "StringAttributeConstraints",
        "UniqueKey": "cognito.userpool.schemaattribute.StringAttributeConstraints",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.smsconfiguration.ExternalId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.smsconfiguration.ExternalId",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.smsconfiguration.SnsCallerArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.smsconfiguration.SnsCallerArn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.stringattributeconstraints.MaxLength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.stringattributeconstraints.MaxLength",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.stringattributeconstraints.MinLength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.stringattributeconstraints.MinLength",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.usernameconfiguration.CaseSensitive": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "CaseSensitive`  <a name=\"cfn-cognito-userpool-usernameconfiguration-casesensitive\"></a>\nSpecifies whether username case sensitivity will be applied for all users in the user pool through Cognito APIs\\.  \nValid values include:  \n+  ** `True` *": "Enables case sensitivity for all username input\\. When this option is set to `True`, users must sign in using the exact capitalization of their given username\\. For example, \u201cUserName\u201d\\. This is the default value\\.\n+  ** `False` *",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.usernameconfiguration.CaseSensitive",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.userpooladdons.AdvancedSecurityMode": {
        "Allowed values": "AUDIT | ENFORCED | OFF",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.userpooladdons.AdvancedSecurityMode",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.DefaultEmailOption": {
        "Allowed values": "CONFIRM_WITH_CODE | CONFIRM_WITH_LINK",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.DefaultEmailOption",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.EmailMessage": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.EmailMessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.EmailMessageByLink": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.EmailMessageByLink",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.EmailSubject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.EmailSubject",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.EmailSubjectByLink": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.EmailSubjectByLink",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.SmsMessage": {
        "Maximum": "140",
        "Minimum": "6",
        "Pattern": ".*\\{####\\}.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.SmsMessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.analyticsconfiguration.ApplicationId": {
        "Pattern": "^[0-9a-fA-F]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.ApplicationId",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.analyticsconfiguration.ExternalId": {
        "Maximum": "1224",
        "Minimum": "2",
        "Pattern": "[\\w+=,.@:\\/-]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.ExternalId",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.analyticsconfiguration.RoleArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.analyticsconfiguration.UserDataShared": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.UserDataShared",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpooldomain.customdomainconfigtype.CertificateArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooldomain.customdomainconfigtype.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolresourceserver.resourceserverscopetype.ScopeDescription": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-cognito.userpoolresourceserver.resourceserverscopetype.ScopeDescription",
        "Type": "String",
        "UniqueKey": "cognito.userpoolresourceserver.resourceserverscopetype.ScopeDescription",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolresourceserver.resourceserverscopetype.ScopeName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\x21\\x23-\\x2E\\x30-\\x5B\\x5D-\\x7E]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolresourceserver.resourceserverscopetype.ScopeName",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.HighAction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.HighAction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.LowAction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.LowAction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.MediumAction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.MediumAction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.EventAction": {
        "Allowed values": "BLOCK | MFA_IF_CONFIGURED | MFA_REQUIRED | NO_ACTION",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.EventAction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.Notify": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.Notify",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.Actions": {
        "Required": "Yes",
        "Type": "AccountTakeoverActionsType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.Actions",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.NotifyConfiguration": {
        "Required": "No",
        "Type": "NotifyConfigurationType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.NotifyConfiguration",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.EventAction": {
        "Allowed values": "BLOCK | NO_ACTION",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.EventAction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.Actions": {
        "Required": "Yes",
        "Type": "CompromisedCredentialsActionsType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.Actions",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.EventFilter": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.EventFilter",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.BlockEmail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.BlockEmail",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.From": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.From",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.MfaEmail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.MfaEmail",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.NoActionEmail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.NoActionEmail",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.ReplyTo": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.ReplyTo",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.SourceArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.SourceArn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.HtmlBody": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.HtmlBody",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.Subject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.Subject",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.TextBody": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.TextBody",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.BlockedIPRangeList": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.BlockedIPRangeList",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.SkippedIPRangeList": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.SkippedIPRangeList",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpooluser.attributetype.Name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooluser.attributetype.Name",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpooluser.attributetype.Value": {
        "Maximum": "2048",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooluser.attributetype.Value",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.scope.ComplianceResourceId": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.ComplianceResourceId",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.ComplianceResourceId",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.scope.ComplianceResourceTypes": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configrule.scope.ComplianceResourceTypes",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.scope.TagKey": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.TagKey",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.TagKey",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.scope.TagValue": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.TagValue",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.TagValue",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.Owner": {
        "Allowed values": "AWS | CUSTOM_LAMBDA",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configrule.source.Owner",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.SourceDetails": {
        "Maximum": "25",
        "Required": "No",
        "Type": "List of [SourceDetail",
        "UniqueKey": "config.configrule.source.SourceDetails",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.SourceIdentifier": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.configrule.source.SourceIdentifier",
        "Type": "String",
        "UniqueKey": "config.configrule.source.SourceIdentifier",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.sourcedetails.EventSource": {
        "Allowed values": "aws.config",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.EventSource",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.sourcedetails.MaximumExecutionFrequency": {
        "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.MaximumExecutionFrequency",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.sourcedetails.MessageType": {
        "Allowed values": "ConfigurationItemChangeNotification | ConfigurationSnapshotDeliveryCompleted | OversizedConfigurationItemChangeNotification | ScheduledNotification",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.MessageType",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.accountaggregationsource.AccountIds": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.AccountIds",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.accountaggregationsource.AllAwsRegions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.AllAwsRegions",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.accountaggregationsource.AwsRegions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.AwsRegions",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.organizationaggregationsource.AllAwsRegions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.AllAwsRegions",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.organizationaggregationsource.AwsRegions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.AwsRegions",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.organizationaggregationsource.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "config.configurationrecorder.recordinggroup.AllSupported": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationrecorder.recordinggroup.AllSupported",
        "UpdateRequires": "Replacement"
    },
    "config.configurationrecorder.recordinggroup.IncludeGlobalResourceTypes": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationrecorder.recordinggroup.IncludeGlobalResourceTypes",
        "UpdateRequires": "Replacement"
    },
    "config.configurationrecorder.recordinggroup.ResourceTypes": {
        "Required": "No",
        "SampleValue": "TODO-ResourceTypes",
        "UniqueKey": "config.configurationrecorder.recordinggroup.ResourceTypes",
        "UpdateRequires": "Replacement"
    },
    "config.conformancepack.conformancepackinputparameter.ParameterName": {
        "Maximum": "255",
        "Minimum": "0",
        "Pattern": "^.{0,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.conformancepack.conformancepackinputparameter.ParameterName",
        "Type": "String",
        "UniqueKey": "config.conformancepack.conformancepackinputparameter.ParameterName",
        "UpdateRequires": "Replacement"
    },
    "config.conformancepack.conformancepackinputparameter.ParameterValue": {
        "Maximum": "4096",
        "Minimum": "0",
        "Pattern": "^.{0,4096}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.conformancepack.conformancepackinputparameter.ParameterValue",
        "Type": "String",
        "UniqueKey": "config.conformancepack.conformancepackinputparameter.ParameterValue",
        "UpdateRequires": "Replacement"
    },
    "config.deliverychannel.configsnapshotdeliveryproperties.DeliveryFrequency": {
        "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.deliverychannel.configsnapshotdeliveryproperties.DeliveryFrequency",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.Description": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.Description",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.Description",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.InputParameters": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.InputParameters",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.InputParameters",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.LambdaFunctionArn": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.LambdaFunctionArn",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.LambdaFunctionArn",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.MaximumExecutionFrequency": {
        "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.MaximumExecutionFrequency",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.OrganizationConfigRuleTriggerTypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.OrganizationConfigRuleTriggerTypes",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.ResourceIdScope": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.ResourceIdScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.ResourceIdScope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.ResourceTypesScope": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.ResourceTypesScope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.TagKeyScope": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.TagKeyScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.TagKeyScope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.TagValueScope": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.TagValueScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.TagValueScope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.Description": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.Description",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.Description",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.InputParameters": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.InputParameters",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.InputParameters",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.MaximumExecutionFrequency": {
        "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.MaximumExecutionFrequency",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.ResourceIdScope": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.ResourceIdScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.ResourceIdScope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.ResourceTypesScope": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.ResourceTypesScope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.RuleIdentifier": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.RuleIdentifier",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.RuleIdentifier",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.TagKeyScope": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.TagKeyScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.TagKeyScope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.TagValueScope": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.TagValueScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.TagValueScope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconformancepack.conformancepackinputparameter.ParameterName": {
        "Maximum": "255",
        "Minimum": "0",
        "Pattern": "^.{0,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconformancepack.conformancepackinputparameter.ParameterName",
        "Type": "String",
        "UniqueKey": "config.organizationconformancepack.conformancepackinputparameter.ParameterName",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconformancepack.conformancepackinputparameter.ParameterValue": {
        "Maximum": "255",
        "Minimum": "0",
        "Pattern": "^.{0,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconformancepack.conformancepackinputparameter.ParameterValue",
        "Type": "String",
        "UniqueKey": "config.organizationconformancepack.conformancepackinputparameter.ParameterValue",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.executioncontrols.SsmControls": {
        "Required": "No",
        "Type": "SsmControls",
        "UniqueKey": "config.remediationconfiguration.executioncontrols.SsmControls",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.remediationparametervalue.ResourceValue": {
        "Required": "No",
        "Type": "ResourceValue",
        "UniqueKey": "config.remediationconfiguration.remediationparametervalue.ResourceValue",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.remediationparametervalue.StaticValue": {
        "Required": "No",
        "Type": "StaticValue",
        "UniqueKey": "config.remediationconfiguration.remediationparametervalue.StaticValue",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.resourcevalue.Value": {
        "Allowed values": "RESOURCE_ID",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.remediationconfiguration.resourcevalue.Value",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.ssmcontrols.ConcurrentExecutionRatePercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "config.remediationconfiguration.ssmcontrols.ConcurrentExecutionRatePercentage",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.ssmcontrols.ErrorPercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "config.remediationconfiguration.ssmcontrols.ErrorPercentage",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.staticvalue.Values": {
        "Maximum": "25",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.remediationconfiguration.staticvalue.Values",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.ActionsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cw.alarm.ActionsEnabled",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.AlarmActions": {
        "Maximum": "5",
        "Required": "No",
        "UniqueKey": "cw.alarm.AlarmActions",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.AlarmDescription": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.AlarmDescription",
        "Type": "String",
        "UniqueKey": "cw.alarm.AlarmDescription",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.AlarmName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.AlarmName",
        "Type": "String",
        "UniqueKey": "cw.alarm.AlarmName",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.ComparisonOperator": {
        "Allowed values": "GreaterThanOrEqualToThreshold | GreaterThanThreshold | GreaterThanUpperThreshold | LessThanLowerOrGreaterThanUpperThreshold | LessThanLowerThreshold | LessThanOrEqualToThreshold | LessThanThreshold",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cw.alarm.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.DatapointsToAlarm": {
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cw.alarm.DatapointsToAlarm",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.Dimensions": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Dimension",
        "UniqueKey": "cw.alarm.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.EvaluateLowSampleCountPercentile": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.EvaluateLowSampleCountPercentile",
        "Type": "String",
        "UniqueKey": "cw.alarm.EvaluateLowSampleCountPercentile",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.EvaluationPeriods": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "cw.alarm.EvaluationPeriods",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.ExtendedStatistic": {
        "Pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.ExtendedStatistic",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.InsufficientDataActions": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cw.alarm.InsufficientDataActions",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.MetricName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.MetricName",
        "Type": "String",
        "UniqueKey": "cw.alarm.MetricName",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.Metrics": {
        "Required": "No",
        "Type": "List of [MetricDataQuery",
        "UniqueKey": "cw.alarm.Metrics",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.Namespace": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[^:].*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.Namespace",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.OKActions": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cw.alarm.OKActions",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.Period": {
        "Minimum": "10",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cw.alarm.Period",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.Statistic": {
        "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.Statistic",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.Threshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "cw.alarm.Threshold",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.ThresholdMetricId": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.ThresholdMetricId",
        "Type": "String",
        "UniqueKey": "cw.alarm.ThresholdMetricId",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.TreatMissingData": {
        "Maximum": "255",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cw.alarm.TreatMissingData",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.Unit": {
        "Allowed values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.Unit",
        "UpdateRequires": "Replacement"
    },
    "cw.dimension.Name": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cw.dimension.Name",
        "Type": "String",
        "UniqueKey": "cw.dimension.Name",
        "UpdateRequires": "Replacement"
    },
    "cw.dimension.Value": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cw.dimension.Value",
        "Type": "String",
        "UniqueKey": "cw.dimension.Value",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parameterobjects.Attributes": {
        "Required": "Yes",
        "Type": "List of [ParameterAttribute",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.Attributes",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parameterobjects.Id": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.Id",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parameterobjects.attributes.Key": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.attributes.Key",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parameterobjects.attributes.StringValue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.attributes.StringValue",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parametervalues.Id": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parametervalues.Id",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parametervalues.StringValue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parametervalues.StringValue",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.Fields": {
        "Required": "Yes",
        "Type": "List of [Field",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.Fields",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.Id": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.Id",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.Name": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.Name",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.fields.Key": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.Key",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.fields.RefValue": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.RefValue",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.fields.StringValue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.StringValue",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelinetags.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelinetags.Key",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelinetags.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelinetags.Value",
        "UpdateRequires": "Replacement"
    },
    "dax.cluster.ssespecification.SSEEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dax.cluster.ssespecification.SSEEnabled",
        "UpdateRequires": "Replacement"
    },
    "directoryservice.microsoftad.vpcsettings.SubnetIds": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "directoryservice.microsoftad.vpcsettings.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "directoryservice.microsoftad.vpcsettings.VpcId": {
        "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "directoryservice.microsoftad.vpcsettings.VpcId",
        "UpdateRequires": "Replacement"
    },
    "directoryservice.simplead.vpcsettings.SubnetIds": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "directoryservice.simplead.vpcsettings.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "directoryservice.simplead.vpcsettings.VpcId": {
        "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "directoryservice.simplead.vpcsettings.VpcId",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.createrule.CronExpression": {
        "Maximum": "106",
        "Minimum": "17",
        "Pattern": "cron\\([^\\n]{11,100}\\)",
        "Required": "No",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.CronExpression",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.createrule.Interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.Interval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.createrule.IntervalUnit": {
        "Allowed values": "HOURS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.IntervalUnit",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.createrule.Times": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.Times",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyretainrule.Interval": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyretainrule.Interval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyretainrule.IntervalUnit": {
        "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyretainrule.IntervalUnit",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.CmkArn": {
        "Maximum": "2048",
        "Minimum": "0",
        "Pattern": "arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\\d:\\d+:key/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.CmkArn",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.CopyTags": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.CopyTags",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.Encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.Encrypted",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.RetainRule": {
        "Required": "No",
        "Type": "CrossRegionCopyRetainRule",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.RetainRule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.TargetRegion": {
        "Maximum": "16",
        "Minimum": "0",
        "Pattern": "([a-z]+-){2,3}\\d",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.TargetRegion",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.fastrestorerule.AvailabilityZones": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.AvailabilityZones",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.fastrestorerule.Count": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.Count",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.fastrestorerule.Interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.Interval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.fastrestorerule.IntervalUnit": {
        "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.IntervalUnit",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.parameters.ExcludeBootVolume": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.parameters.ExcludeBootVolume",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.Parameters": {
        "Required": "No",
        "Type": "Parameters",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.Parameters",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.PolicyType": {
        "Allowed values": "EBS_SNAPSHOT_MANAGEMENT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.PolicyType",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.ResourceTypes": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.ResourceTypes",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.Schedules": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [Schedule",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.Schedules",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.TargetTags": {
        "Maximum": "50",
        "Required": "Yes",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.TargetTags",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.retainrule.Count": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.Count",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.retainrule.Interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.Interval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.retainrule.IntervalUnit": {
        "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.IntervalUnit",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.CopyTags": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.CopyTags",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.CreateRule": {
        "Required": "No",
        "Type": "CreateRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.CreateRule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.CrossRegionCopyRules": {
        "Maximum": "3",
        "Required": "No",
        "Type": "List of [CrossRegionCopyRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.CrossRegionCopyRules",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.FastRestoreRule": {
        "Required": "No",
        "Type": "FastRestoreRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.FastRestoreRule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.Name": {
        "Maximum": "500",
        "Minimum": "0",
        "Pattern": "[\\p{all}]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.Name",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.RetainRule": {
        "Required": "No",
        "Type": "RetainRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.RetainRule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.TagsToAdd": {
        "Maximum": "45",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.TagsToAdd",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.VariableTags": {
        "Maximum": "45",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.VariableTags",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.dynamodbsettings.ServiceAccessRoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.dynamodbsettings.ServiceAccessRoleArn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.elasticsearchsettings.EndpointUri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.EndpointUri",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.elasticsearchsettings.ErrorRetryDuration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.ErrorRetryDuration",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.elasticsearchsettings.FullLoadErrorPercentage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.FullLoadErrorPercentage",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.elasticsearchsettings.ServiceAccessRoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.ServiceAccessRoleArn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kafkasettings.Broker": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kafkasettings.Broker",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kafkasettings.Topic": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kafkasettings.Topic",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kinesissettings.MessageFormat": {
        "Allowed values": "json | json-unformatted",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.MessageFormat",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kinesissettings.ServiceAccessRoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.ServiceAccessRoleArn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kinesissettings.StreamArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.StreamArn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.AuthMechanism": {
        "Allowed values": "default | mongodb_cr | scram_sha_1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.AuthMechanism",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.AuthSource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.AuthSource",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.AuthType": {
        "Allowed values": "no | password",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.AuthType",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.DatabaseName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.DocsToInvestigate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.DocsToInvestigate",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.ExtractDocId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.ExtractDocId",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.NestingLevel": {
        "Allowed values": "none | one",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.NestingLevel",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.Password": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.Password",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.Port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.mongodbsettings.Port",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.ServerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.ServerName",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.Username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.Username",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.ErrorRetryDuration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.neptunesettings.ErrorRetryDuration",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.IamAuthEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dms.endpoint.neptunesettings.IamAuthEnabled",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.MaxFileSize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.neptunesettings.MaxFileSize",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.MaxRetryCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.neptunesettings.MaxRetryCount",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.S3BucketFolder": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.neptunesettings.S3BucketFolder",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.S3BucketName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.neptunesettings.S3BucketName",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.ServiceAccessRoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.neptunesettings.ServiceAccessRoleArn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.BucketFolder": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.BucketFolder",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.BucketName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.BucketName",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.CompressionType": {
        "Allowed values": "gzip | none",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.CompressionType",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.CsvDelimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.CsvDelimiter",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.CsvRowDelimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.CsvRowDelimiter",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.ExternalTableDefinition": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.ExternalTableDefinition",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.ServiceAccessRoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.ServiceAccessRoleArn",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.attributedef.AttributeName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-dynamodb.attributedef.AttributeName",
        "Type": "String",
        "UniqueKey": "dynamodb.attributedef.AttributeName",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.attributedef.AttributeType": {
        "Allowed values": "B | N | S",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.attributedef.AttributeType",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.gsi.IndexName": {
        "Maximum": "255",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9_.-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.gsi.IndexName",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.gsi.KeySchema": {
        "Maximum": "2",
        "Required": "Yes",
        "UniqueKey": "dynamodb.gsi.KeySchema",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.gsi.Projection": {
        "Required": "Yes",
        "Type": "Projection",
        "UniqueKey": "dynamodb.gsi.Projection",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.gsi.ProvisionedThroughput": {
        "Required": "No",
        "SampleValue": "TODO-ProvisionedThroughput",
        "UniqueKey": "dynamodb.gsi.ProvisionedThroughput",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.keyschema.AttributeName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-dynamodb.keyschema.AttributeName",
        "Type": "String",
        "UniqueKey": "dynamodb.keyschema.AttributeName",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.keyschema.KeyType": {
        "Required": "Yes",
        "SampleValue": "TODO-KeyType",
        "UniqueKey": "dynamodb.keyschema.KeyType",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.lsi.IndexName": {
        "Maximum": "255",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9_.-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.lsi.IndexName",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.lsi.KeySchema": {
        "Maximum": "2",
        "Required": "Yes",
        "UniqueKey": "dynamodb.lsi.KeySchema",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.lsi.Projection": {
        "Required": "Yes",
        "Type": "Projection",
        "UniqueKey": "dynamodb.lsi.Projection",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.projectionobject.NonKeyAttributes": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dynamodb.projectionobject.NonKeyAttributes",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.projectionobject.ProjectionType": {
        "Allowed values": "ALL | INCLUDE | KEYS_ONLY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.projectionobject.ProjectionType",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.provisionedthroughput.ReadCapacityUnits": {
        "Required": "Yes",
        "SampleValue": "TODO-ReadCapacityUnits",
        "UniqueKey": "dynamodb.provisionedthroughput.ReadCapacityUnits",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.provisionedthroughput.WriteCapacityUnits": {
        "Required": "Yes",
        "SampleValue": "TODO-WriteCapacityUnits",
        "UniqueKey": "dynamodb.provisionedthroughput.WriteCapacityUnits",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.streamspecification.StreamViewType": {
        "Allowed values": "KEYS_ONLY | NEW_AND_OLD_IMAGES | NEW_IMAGE | OLD_IMAGE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.streamspecification.StreamViewType",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.pointintimerecoveryspecification.PointInTimeRecoveryEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.table.pointintimerecoveryspecification.PointInTimeRecoveryEnabled",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.ssespecification.KMSMasterKeyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.table.ssespecification.KMSMasterKeyId",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.ssespecification.SSEEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.table.ssespecification.SSEEnabled",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.ssespecification.SSEType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.table.ssespecification.SSEType",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.timetolivespecification.AttributeName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-dynamodb.timetolivespecification.AttributeName",
        "Type": "String",
        "UniqueKey": "dynamodb.timetolivespecification.AttributeName",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.timetolivespecification.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.timetolivespecification.Enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.mapping.DeviceName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.mapping.DeviceName",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.mapping.Ebs": {
        "Required": "Conditional",
        "Type": "Ebs",
        "UniqueKey": "ec2.blockdev.mapping.Ebs",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.mapping.NoDevice": {
        "Required": "No",
        "Type": "NoDevice",
        "UniqueKey": "ec2.blockdev.mapping.NoDevice",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.mapping.VirtualName": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.mapping.VirtualName",
        "UpdateRequires": "Replacement",
        "VirtualName`  <a name=\"cfn-ec2-blockdev-mapping-virtualname\"></a>\nThe virtual device name \\(`ephemeral`N\\)\\. The name must be in the form `ephemeral`*X* where *X* is a number starting from zero \\(0\\)\\. For example, an instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1`\\. The number of available instance store volumes depends on the instance type\\. After you connect to the instance, you must mount the volume\\.  \nNVMe instance store volumes are automatically enumerated and assigned a device name\\. Including them in your block device mapping has no effect\\.  \nYou can specify either `VirtualName` or `Ebs`, but not both\\.  \n *Constraints": "For M3 instances, you must specify instance store volumes in the block device mapping for the instance\\. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI\\."
    },
    "ec2.blockdev.template.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.blockdev.template.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.Encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.blockdev.template.Encrypted",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.Iops": {
        "Required": "Conditional",
        "SampleValue": "TODO-Iops",
        "UniqueKey": "ec2.blockdev.template.Iops",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.KmsKeyId": {
        "Required": "No",
        "SampleValue": "TODO-KmsKeyId",
        "UniqueKey": "ec2.blockdev.template.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.SnapshotId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.template.SnapshotId",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.VolumeSize": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "ec2.blockdev.template.VolumeSize",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.VolumeType": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "ec2.blockdev.template.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "ec2.capacityreservation.tag.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tag.key",
        "UpdateRequires": "Replacement"
    },
    "ec2.capacityreservation.tag.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tag.value",
        "UpdateRequires": "Replacement"
    },
    "ec2.capacityreservation.tagspecification.ResourceType": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tagspecification.ResourceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.capacityreservation.tagspecification.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.capacityreservation.tagspecification.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.carriergateway.tags.Tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.carriergateway.tags.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.certificateauthenticationrequest.ClientRootCertificateChainArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.certificateauthenticationrequest.ClientRootCertificateChainArn",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.ActiveDirectory": {
        "Required": "No",
        "SampleValue": "TODO-ActiveDirectory",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.ActiveDirectory",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.FederatedAuthentication": {
        "Required": "No",
        "Type": "FederatedAuthenticationRequest",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.FederatedAuthentication",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.MutualAuthentication": {
        "Required": "No",
        "SampleValue": "TODO-MutualAuthentication",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.MutualAuthentication",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.Type": {
        "Allowed values": "certificate-authentication | directory-service-authentication | federated-authentication",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.Type",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.CloudwatchLogGroup": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.CloudwatchLogGroup",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.CloudwatchLogStream": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.CloudwatchLogStream",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.Enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.DirectoryId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.DirectoryId",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.federatedauthenticationrequest.SAMLProviderArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.federatedauthenticationrequest.SAMLProviderArn",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.tagspecification.ResourceType": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.tagspecification.ResourceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.tagspecification.Tags": {
        "Required": "Yes",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.clientvpnendpoint.tagspecification.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.AutoEnableIO": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ebs.volume.AutoEnableIO",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.AvailabilityZone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.Encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.ebs.volume.Encrypted",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.Iops": {
        "Required": "No",
        "SampleValue": "TODO-Iops",
        "UniqueKey": "ec2.ebs.volume.Iops",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.KmsKeyId": {
        "Required": "No",
        "SampleValue": "TODO-KmsKeyId",
        "UniqueKey": "ec2.ebs.volume.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.MultiAttachEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ebs.volume.MultiAttachEnabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.OutpostArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.OutpostArn",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.Size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ebs.volume.Size",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.SnapshotId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.SnapshotId",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.ebs.volume.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.VolumeType": {
        "Allowed values": "gp2 | io1 | io2 | sc1 | st1 | standard",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volumeattachment.Device": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.Device",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volumeattachment.InstanceId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.InstanceId",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volumeattachment.VolumeId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.VolumeId",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.capacityreservationoptionsrequest.UsageStrategy": {
        "Allowed values": "use-capacity-reservations-first",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.capacityreservationoptionsrequest.UsageStrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.LaunchTemplateSpecification": {
        "Required": "No",
        "Type": "FleetLaunchTemplateSpecificationRequest",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.LaunchTemplateSpecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.Overrides": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [FleetLaunchTemplateOverridesRequest",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.Overrides",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.InstanceType": {
        "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5ad.12xlarge | c5ad.16xlarge | c5ad.24xlarge | c5ad.2xlarge | c5ad.4xlarge | c5ad.8xlarge | c5ad.large | c5ad.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | c6gd.12xlarge | c6gd.16xlarge | c6gd.2xlarge | c6gd.4xlarge | c6gd.8xlarge | c6gd.large | c6gd.medium | c6gd.metal | c6gd.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | m6gd.12xlarge | m6gd.16xlarge | m6gd.2xlarge | m6gd.4xlarge | m6gd.8xlarge | m6gd.large | m6gd.medium | m6gd.metal | m6gd.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | r6gd.12xlarge | r6gd.16xlarge | r6gd.2xlarge | r6gd.4xlarge | r6gd.8xlarge | r6gd.large | r6gd.medium | r6gd.metal | r6gd.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.MaxPrice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.MaxPrice",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.Placement": {
        "Required": "No",
        "Type": "Placement",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.Placement",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.Priority": {
        "Required": "No",
        "SampleValue": "TODO-Priority",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.Priority",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.SubnetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.WeightedCapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.WeightedCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.LaunchTemplateId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.LaunchTemplateId",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.LaunchTemplateName": {
        "Maximum": "128",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.LaunchTemplateName",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.Version",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.AllocationStrategy": {
        "Allowed values": "lowest-price | prioritized",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.AllocationStrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.CapacityReservationOptions": {
        "Required": "No",
        "Type": "CapacityReservationOptionsRequest",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.CapacityReservationOptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.MaxTotalPrice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.MaxTotalPrice",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.MinTargetCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.MinTargetCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.SingleAvailabilityZone": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.SingleAvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.SingleInstanceType": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.SingleInstanceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.Affinity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.Affinity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.GroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.GroupName",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.HostId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.HostId",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.HostResourceGroupArn": {
        "Required": "No",
        "SampleValue": "TODO-HostResourceGroupArn",
        "UniqueKey": "ec2.ec2fleet.placement.HostResourceGroupArn",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.PartitionNumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.placement.PartitionNumber",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.SpreadDomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.SpreadDomain",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.Tenancy": {
        "Allowed values": "dedicated | default | host",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.Tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.AllocationStrategy": {
        "Allowed Values": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
        "AllowedValues": [
            "lowestPrice` \\| `diversified` \\| `capacityOptimized"
        ],
        "Pattern": "^[lowestPrice` \\| `diversified` \\| `capacityOptimized]",
        "Required": "No",
        "SampleValue": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.AllocationStrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.InstanceInterruptionBehavior": {
        "Allowed values": "hibernate | stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.InstanceInterruptionBehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.InstancePoolsToUseCount": {
        "Required": "No",
        "SampleValue": "TODO-InstancePoolsToUseCount",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.InstancePoolsToUseCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.MaxTotalPrice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.MaxTotalPrice",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.MinTargetCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.MinTargetCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.SingleAvailabilityZone": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.SingleAvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.SingleInstanceType": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.SingleInstanceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.tagrequest.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.ec2fleet.tagrequest.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagrequest.key",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.tagrequest.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagrequest.value",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.tagspecification.ResourceType": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagspecification.ResourceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.tagspecification.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.ec2fleet.tagspecification.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.DefaultTargetCapacityType": {
        "Allowed values": "on-demand | spot",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.DefaultTargetCapacityType",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.OnDemandTargetCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.OnDemandTargetCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.SpotTargetCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.SpotTargetCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.TotalTargetCapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.TotalTargetCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.Domain": {
        "Allowed values": "standard | vpc",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.eip.Domain",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.InstanceId": {
        "Required": "No",
        "SampleValue": "TODO-InstanceId",
        "UniqueKey": "ec2.eip.InstanceId",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.PublicIpv4Pool": {
        "Required": "No",
        "SampleValue": "TODO-PublicIpv4Pool",
        "UniqueKey": "ec2.eip.PublicIpv4Pool",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.Tags": {
        "Required": "No",
        "SampleValue": "TODO-Tags",
        "UniqueKey": "ec2.eip.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.AllocationId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.AllocationId",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.EIP": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.EIP",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.InstanceId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.InstanceId",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.NetworkInterfaceId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.NetworkInterfaceId",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.PrivateIpAddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.PrivateIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.AccessLoggingPolicy": {
        "Required": "No",
        "Type": "AccessLoggingPolicy",
        "UniqueKey": "ec2.elb.AccessLoggingPolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.AppCookieStickinessPolicy": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.AppCookieStickinessPolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.AppCookieStickinessPolicy.CookieName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.AppCookieStickinessPolicy.CookieName",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.AppCookieStickinessPolicy.PolicyName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.AppCookieStickinessPolicy.PolicyName",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.AvailabilityZones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.AvailabilityZones",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.ConnectionDrainingPolicy": {
        "Required": "No",
        "SampleValue": "TODO-ConnectionDrainingPolicy",
        "UniqueKey": "ec2.elb.ConnectionDrainingPolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.ConnectionSettings": {
        "Required": "No",
        "SampleValue": "TODO-ConnectionSettings",
        "UniqueKey": "ec2.elb.ConnectionSettings",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.CrossZone": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.elb.CrossZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.HealthCheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "ec2.elb.HealthCheck",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.Instances": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.Instances",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.LBCookieStickinessPolicy": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.LBCookieStickinessPolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.LBCookieStickinessPolicy.CookieExpirationPeriod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.LBCookieStickinessPolicy.CookieExpirationPeriod",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.LBCookieStickinessPolicy.PolicyName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.LBCookieStickinessPolicy.PolicyName",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.Listeners": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "ec2.elb.Listeners",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.LoadBalancerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.LoadBalancerName",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.Policies": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.Policies",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.Scheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.Scheme",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.SecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.Subnets": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.Subnets",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.elb.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy.EmitInterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.accessloggingpolicy.EmitInterval",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.elb.accessloggingpolicy.Enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy.S3BucketName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.accessloggingpolicy.S3BucketName",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy.S3BucketPrefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.accessloggingpolicy.S3BucketPrefix",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.connectiondrainingpolicy.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.elb.connectiondrainingpolicy.Enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.connectiondrainingpolicy.Timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.connectiondrainingpolicy.Timeout",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.connectionsettings.IdleTimeout": {
        "Maximum": "3600",
        "Minimum": "1",
        "Pattern": "^[1,3600]}$",
        "Required": "Yes",
        "SampleValue": "1...3600",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.connectionsettings.IdleTimeout",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.HealthyThreshold": {
        "Maximum": "10",
        "Minimum": "2",
        "Pattern": "^.{2,10}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.HealthyThreshold",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.HealthyThreshold",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.Interval": {
        "Maximum": "300",
        "Minimum": "5",
        "Pattern": "^.{5,300}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.Interval",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.Interval",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.Target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.Target",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.Timeout": {
        "Maximum": "60",
        "Minimum": "2",
        "Pattern": "^.{2,60}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.Timeout",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.Timeout",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.UnhealthyThreshold": {
        "Maximum": "10",
        "Minimum": "2",
        "Pattern": "^.{2,10}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.UnhealthyThreshold",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.UnhealthyThreshold",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.InstancePort": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^.{1,65535}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.listener.InstancePort",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.InstancePort",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.InstanceProtocol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.InstanceProtocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.LoadBalancerPort": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.LoadBalancerPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.PolicyNames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.listener.PolicyNames",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.Protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.Protocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.SSLCertificateId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.SSLCertificateId",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.Attributes": {
        "Required": "Yes",
        "Type": "List of Json",
        "UniqueKey": "ec2.elb.policy.Attributes",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.InstancePorts": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.policy.InstancePorts",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.LoadBalancerPorts": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.policy.LoadBalancerPorts",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.PolicyName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.policy.PolicyName",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.PolicyType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.policy.PolicyType",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.AdditionalInfo": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.AdditionalInfo",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.Affinity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.Affinity",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.BlockDeviceMappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.instance.BlockDeviceMappings",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.CpuOptions": {
        "Required": "No",
        "Type": "CpuOptions",
        "UniqueKey": "ec2.instance.CpuOptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.CreditSpecification": {
        "Required": "No",
        "SampleValue": "TODO-CreditSpecification",
        "UniqueKey": "ec2.instance.CreditSpecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.DisableApiTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.DisableApiTermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.EbsOptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.EbsOptimized",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ElasticGpuSpecifications": {
        "Required": "No",
        "SampleValue": "TODO-ElasticGpuSpecifications",
        "UniqueKey": "ec2.instance.ElasticGpuSpecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ElasticInferenceAccelerators": {
        "Required": "No",
        "Type": "List of [ElasticInferenceAccelerator",
        "UniqueKey": "ec2.instance.ElasticInferenceAccelerators",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.HibernationOptions": {
        "Required": "No",
        "SampleValue": "TODO-HibernationOptions",
        "UniqueKey": "ec2.instance.HibernationOptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.HostId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.HostId",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.HostResourceGroupArn": {
        "Required": "No",
        "SampleValue": "TODO-HostResourceGroupArn",
        "UniqueKey": "ec2.instance.HostResourceGroupArn",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.IamInstanceProfile": {
        "Required": "No",
        "SampleValue": "TODO-IamInstanceProfile",
        "UniqueKey": "ec2.instance.IamInstanceProfile",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ImageId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.ImageId",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.InstanceInitiatedShutdownBehavior": {
        "Allowed values": "stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.InstanceInitiatedShutdownBehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.InstanceType": {
        "Required": "No",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "ec2.instance.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.Ipv6AddressCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.Ipv6AddressCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.Ipv6Addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.instance.Ipv6Addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.KernelId": {
        "Required": "No",
        "SampleValue": "TODO-KernelId",
        "UniqueKey": "ec2.instance.KernelId",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.KeyName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.KeyName",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.LaunchTemplate": {
        "Required": "No",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "ec2.instance.LaunchTemplate",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.LicenseSpecifications": {
        "Required": "No",
        "Type": "List of [LicenseSpecification",
        "UniqueKey": "ec2.instance.LicenseSpecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.Monitoring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.Monitoring",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.NetworkInterfaces": {
        "Required": "No",
        "Type": "List of [NetworkInterface",
        "UniqueKey": "ec2.instance.NetworkInterfaces",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.PlacementGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.PlacementGroupName",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.PrivateIpAddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.PrivateIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.RamdiskId": {
        "Required": "No",
        "SampleValue": "TODO-RamdiskId",
        "UniqueKey": "ec2.instance.RamdiskId",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.SecurityGroupIds": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.SecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.SourceDestCheck": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.instance.SourceDestCheck",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.SsmAssociations": {
        "Required": "No",
        "SampleValue": "TODO-SsmAssociations",
        "UniqueKey": "ec2.instance.SsmAssociations",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.SubnetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.instance.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.Tenancy": {
        "Allowed values": "dedicated | default | host",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.Tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.UserData": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.UserData",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.Volumes": {
        "Required": "No",
        "Type": "List of [Volume",
        "UniqueKey": "ec2.instance.Volumes",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.cpuoptions.CoreCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.cpuoptions.CoreCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.cpuoptions.ThreadsPerCore": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.cpuoptions.ThreadsPerCore",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.creditspecification.CPUCredits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.creditspecification.CPUCredits",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticgpuspecification.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "ec2.instance.elasticgpuspecification.Type",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticinferenceaccelerator.Count": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.elasticinferenceaccelerator.Count",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticinferenceaccelerator.Type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.elasticinferenceaccelerator.Type",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.hibernationoptions.Configured": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.hibernationoptions.Configured",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.instanceipv6address.Ipv6Address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.instanceipv6address.Ipv6Address",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplatespecification.LaunchTemplateId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.LaunchTemplateId",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplatespecification.LaunchTemplateName": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.LaunchTemplateName",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplatespecification.Version": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.Version",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.licensespecification.LicenseConfigurationArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.licensespecification.LicenseConfigurationArn",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations.AssociationParameters": {
        "Required": "No",
        "Type": "List of [AssociationParameter",
        "UniqueKey": "ec2.instance.ssmassociations.AssociationParameters",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations.DocumentName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.ssmassociations.DocumentName",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations.associationparameters.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.ssmassociations.associationparameters.Key",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations.associationparameters.Value": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.ssmassociations.associationparameters.Value",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.DeviceName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.DeviceName",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.Ebs": {
        "Required": "No",
        "Type": "Ebs",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.Ebs",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.NoDevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.NoDevice",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.VirtualName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.VirtualName",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.Encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.Encrypted",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.Iops": {
        "Required": "No",
        "SampleValue": "TODO-Iops",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.Iops",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.KmsKeyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.SnapshotId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.SnapshotId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.VolumeSize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.VolumeSize",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.VolumeType": {
        "Allowed values": "gp2 | io1 | io2 | sc1 | st1 | standard",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.capacityreservationtarget.CapacityReservationId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.capacityreservationtarget.CapacityReservationId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.elasticgpuspecification.Type": {
        "Required": "No",
        "SampleValue": "TODO-Type",
        "UniqueKey": "ec2.launchtemplate.elasticgpuspecification.Type",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.ipv6add.Ipv6Address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.ipv6add.Ipv6Address",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.BlockDeviceMappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.BlockDeviceMappings",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.CapacityReservationSpecification": {
        "Required": "No",
        "Type": "CapacityReservationSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.CapacityReservationSpecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.CpuOptions": {
        "Required": "No",
        "SampleValue": "TODO-CpuOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.CpuOptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.CreditSpecification": {
        "Required": "No",
        "Type": "CreditSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.CreditSpecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.DisableApiTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.DisableApiTermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.EbsOptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.EbsOptimized",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.ElasticGpuSpecifications": {
        "Required": "No",
        "Type": "List of [ElasticGpuSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.ElasticGpuSpecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.ElasticInferenceAccelerators": {
        "Required": "No",
        "Type": "List of [LaunchTemplateElasticInferenceAccelerator",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.ElasticInferenceAccelerators",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.HibernationOptions": {
        "Required": "No",
        "SampleValue": "TODO-HibernationOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.HibernationOptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.IamInstanceProfile": {
        "Required": "No",
        "Type": "IamInstanceProfile",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.IamInstanceProfile",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.ImageId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.ImageId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.InstanceInitiatedShutdownBehavior": {
        "Allowed values": "stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.InstanceInitiatedShutdownBehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.InstanceMarketOptions": {
        "Required": "No",
        "Type": "InstanceMarketOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.InstanceMarketOptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.InstanceType": {
        "Required": "No",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.KernelId": {
        "Required": "No",
        "SampleValue": "TODO-KernelId",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.KernelId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.KeyName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.KeyName",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.LicenseSpecifications": {
        "Required": "No",
        "Type": "List of [LicenseSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.LicenseSpecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.MetadataOptions": {
        "Required": "No",
        "SampleValue": "TODO-MetadataOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.MetadataOptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.Monitoring": {
        "Required": "No",
        "Type": "Monitoring",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.Monitoring",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.NetworkInterfaces": {
        "Required": "No",
        "Type": "List of [NetworkInterface",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.NetworkInterfaces",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.Placement": {
        "Required": "No",
        "Type": "Placement",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.Placement",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.RamDiskId": {
        "Required": "No",
        "SampleValue": "TODO-RamDiskId",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.RamDiskId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.SecurityGroupIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.SecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.TagSpecifications": {
        "Required": "No",
        "Type": "List of [TagSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.TagSpecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.UserData": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.UserData",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.CapacityReservationPreference": {
        "Allowed values": "none | open",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.CapacityReservationPreference",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.CapacityReservationTarget": {
        "Required": "No",
        "Type": "CapacityReservationTarget",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.CapacityReservationTarget",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.cpuoptions.CoreCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.cpuoptions.CoreCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.cpuoptions.ThreadsPerCore": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.cpuoptions.ThreadsPerCore",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.creditspecification.CpuCredits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.creditspecification.CpuCredits",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.hibernationoptions.Configured": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.hibernationoptions.Configured",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.Arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.Arn",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.Name",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.MarketType": {
        "Allowed values": "spot",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.MarketType",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.SpotOptions": {
        "Required": "No",
        "Type": "SpotOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.SpotOptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.BlockDurationMinutes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.BlockDurationMinutes",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.InstanceInterruptionBehavior": {
        "Allowed values": "hibernate | stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.InstanceInterruptionBehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.MaxPrice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.MaxPrice",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.SpotInstanceType": {
        "Allowed values": "one-time | persistent",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.SpotInstanceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.ValidUntil": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.ValidUntil",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpEndpoint": {
        "Allowed values": "disabled | enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpEndpoint",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpPutResponseHopLimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpPutResponseHopLimit",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpTokens": {
        "Allowed values": "optional | required",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpTokens",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.monitoring.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.monitoring.Enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.Affinity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.Affinity",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.GroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.GroupName",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.HostId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.HostId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.HostResourceGroupArn": {
        "Required": "No",
        "SampleValue": "TODO-HostResourceGroupArn",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.HostResourceGroupArn",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.PartitionNumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.PartitionNumber",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.SpreadDomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.SpreadDomain",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.Tenancy": {
        "Allowed values": "dedicated | default | host",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.Tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.Count": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.Count",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.Type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.Type",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.licensespecification.LicenseConfigurationArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.licensespecification.LicenseConfigurationArn",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.AssociatePublicIpAddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.networkinterface.AssociatePublicIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.networkinterface.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.Description",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.DeviceIndex": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.DeviceIndex",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.Groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.Groups",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.InterfaceType": {
        "Required": "No",
        "SampleValue": "TODO-InterfaceType",
        "UniqueKey": "ec2.launchtemplate.networkinterface.InterfaceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.Ipv6AddressCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.Ipv6AddressCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.Ipv6Addresses": {
        "Required": "No",
        "Type": "List of [Ipv6Add",
        "UniqueKey": "ec2.launchtemplate.networkinterface.Ipv6Addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.NetworkInterfaceId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.NetworkInterfaceId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.PrivateIpAddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.PrivateIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.PrivateIpAddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAdd",
        "UniqueKey": "ec2.launchtemplate.networkinterface.PrivateIpAddresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.SecondaryPrivateIpAddressCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.SecondaryPrivateIpAddressCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.SubnetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.privateipadd.Primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.privateipadd.Primary",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.privateipadd.PrivateIpAddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.privateipadd.PrivateIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.tagspecification.ResourceType": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Conditional": "Required if tags are set\\.",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.tagspecification.ResourceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.tagspecification.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.launchtemplate.tagspecification.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.localgatewayroutetablevpcassociation.tags.Tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.localgatewayroutetablevpcassociation.tags.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.mount.point.Device": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.mount.point.Device",
        "UpdateRequires": "Replacement"
    },
    "ec2.mount.point.VolumeId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.mount.point.VolumeId",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.AssociatePublicIpAddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.iface.embedded.AssociatePublicIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.iface.embedded.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.Description",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.DeviceIndex": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.DeviceIndex",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.GroupSet": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.network.iface.embedded.GroupSet",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.Ipv6AddressCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.network.iface.embedded.Ipv6AddressCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.Ipv6Addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.network.iface.embedded.Ipv6Addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.NetworkInterfaceId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.NetworkInterfaceId",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.PrivateIpAddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.PrivateIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.PrivateIpAddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAddressSpecification",
        "UniqueKey": "ec2.network.iface.embedded.PrivateIpAddresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.SecondaryPrivateIpAddressCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.network.iface.embedded.SecondaryPrivateIpAddressCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.SubnetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.interface.privateipspec.1.Primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.interface.privateipspec.1.Primary",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.interface.privateipspec.1.PrivateIpAddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.network.interface.privateipspec.1.PrivateIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.interface.privateipspec.Primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.interface.privateipspec.Primary",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.interface.privateipspec.PrivateIpAddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.network.interface.privateipspec.PrivateIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkaclentry.icmp.Code": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.icmp.Code",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkaclentry.icmp.Type": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.icmp.Type",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkaclentry.portrange.From": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.portrange.From",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkaclentry.portrange.To": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.portrange.To",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinterface.instanceipv6address.Ipv6Address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.networkinterface.instanceipv6address.Ipv6Address",
        "UpdateRequires": "Replacement"
    },
    "ec2.prefixlist.entry.Cidr": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.prefixlist.entry.Cidr",
        "UpdateRequires": "Replacement"
    },
    "ec2.prefixlist.entry.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.prefixlist.entry.Description",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.GroupDescription": {
        "Required": "Yes",
        "SampleValue": "TODO-GroupDescription",
        "UniqueKey": "ec2.security.group.GroupDescription",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.GroupName": {
        "Required": "No",
        "SampleValue": "TODO-GroupName",
        "UniqueKey": "ec2.security.group.GroupName",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.SecurityGroupEgress": {
        "Required": "No",
        "Type": "List of [Egress",
        "UniqueKey": "ec2.security.group.SecurityGroupEgress",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.SecurityGroupIngress": {
        "Required": "No",
        "Type": "List of [Ingress",
        "UniqueKey": "ec2.security.group.SecurityGroupIngress",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.security.group.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.VpcId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.VpcId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.CidrIp": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.CidrIp",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.CidrIpv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.CidrIpv6",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.Description",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.FromPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.ingress.FromPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.GroupId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.GroupId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.GroupName": {
        "Required": "No",
        "SampleValue": "TODO-GroupName",
        "UniqueKey": "ec2.security.group.ingress.GroupName",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.IpProtocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.IpProtocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.SourcePrefixListId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.SourcePrefixListId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.SourceSecurityGroupId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.SourceSecurityGroupId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.SourceSecurityGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.SourceSecurityGroupName",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.SourceSecurityGroupOwnerId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.SourceSecurityGroupOwnerId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.ToPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.ingress.ToPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.CidrIp": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.CidrIp",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.CidrIpv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.CidrIpv6",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.Description": {
        "Required": "No",
        "SampleValue": "TODO-Description",
        "UniqueKey": "ec2.security.group.rule.1.Description",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.FromPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.1.FromPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.IpProtocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.IpProtocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.SourcePrefixListId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.SourcePrefixListId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.SourceSecurityGroupId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.SourceSecurityGroupId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.SourceSecurityGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.SourceSecurityGroupName",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.SourceSecurityGroupOwnerId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.SourceSecurityGroupOwnerId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.ToPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.1.ToPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.CidrIp": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.CidrIp",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.CidrIpv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.CidrIpv6",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.Description": {
        "Required": "No",
        "SampleValue": "TODO-Description",
        "UniqueKey": "ec2.security.group.rule.Description",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.DestinationPrefixListId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.DestinationPrefixListId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.DestinationSecurityGroupId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.DestinationSecurityGroupId",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.FromPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.FromPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.IpProtocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.IpProtocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.ToPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.ToPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.classicloadbalancer.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.classicloadbalancer.Name",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.classicloadbalancersconfig.ClassicLoadBalancers": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [ClassicLoadBalancer",
        "UniqueKey": "ec2.spotfleet.classicloadbalancersconfig.ClassicLoadBalancers",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.LaunchTemplateId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.LaunchTemplateId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.LaunchTemplateName": {
        "Maximum": "128",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.LaunchTemplateName",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.Version": {
        "Required": "Yes",
        "SampleValue": "TODO-Version",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.Version",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.instanceipv6address.Ipv6Address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.instanceipv6address.Ipv6Address",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateconfig.LaunchTemplateSpecification": {
        "Required": "No",
        "Type": "FleetLaunchTemplateSpecification",
        "UniqueKey": "ec2.spotfleet.launchtemplateconfig.LaunchTemplateSpecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateconfig.Overrides": {
        "Required": "No",
        "Type": "List of [LaunchTemplateOverrides",
        "UniqueKey": "ec2.spotfleet.launchtemplateconfig.Overrides",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.InstanceType": {
        "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5ad.12xlarge | c5ad.16xlarge | c5ad.24xlarge | c5ad.2xlarge | c5ad.4xlarge | c5ad.8xlarge | c5ad.large | c5ad.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | c6gd.12xlarge | c6gd.16xlarge | c6gd.2xlarge | c6gd.4xlarge | c6gd.8xlarge | c6gd.large | c6gd.medium | c6gd.metal | c6gd.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | m6gd.12xlarge | m6gd.16xlarge | m6gd.2xlarge | m6gd.4xlarge | m6gd.8xlarge | m6gd.large | m6gd.medium | m6gd.metal | m6gd.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | r6gd.12xlarge | r6gd.16xlarge | r6gd.2xlarge | r6gd.4xlarge | r6gd.8xlarge | r6gd.large | r6gd.medium | r6gd.metal | r6gd.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.SpotPrice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.SpotPrice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.SubnetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.WeightedCapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.WeightedCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.loadbalancersconfig.ClassicLoadBalancersConfig": {
        "Required": "No",
        "Type": "ClassicLoadBalancersConfig",
        "UniqueKey": "ec2.spotfleet.loadbalancersconfig.ClassicLoadBalancersConfig",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.loadbalancersconfig.TargetGroupsConfig": {
        "Required": "No",
        "Type": "TargetGroupsConfig",
        "UniqueKey": "ec2.spotfleet.loadbalancersconfig.TargetGroupsConfig",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.AllocationStrategy": {
        "Allowed values": "capacityOptimized | diversified | lowestPrice",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.AllocationStrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.ExcessCapacityTerminationPolicy": {
        "Allowed values": "default | noTermination",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.ExcessCapacityTerminationPolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.IamFleetRole": {
        "Required": "Yes",
        "SampleValue": "TODO-IamFleetRole",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.IamFleetRole",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.InstanceInterruptionBehavior": {
        "Allowed values": "hibernate | stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.InstanceInterruptionBehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.LaunchSpecifications": {
        "Required": "Conditional",
        "Type": "List of [SpotFleetLaunchSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.LaunchSpecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.LaunchTemplateConfigs": {
        "Required": "Conditional",
        "Type": "List of [LaunchTemplateConfig",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.LaunchTemplateConfigs",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.LoadBalancersConfig": {
        "Required": "No",
        "Type": "LoadBalancersConfig",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.LoadBalancersConfig",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.ReplaceUnhealthyInstances": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.ReplaceUnhealthyInstances",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.SpotPrice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.SpotPrice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.TargetCapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.TargetCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.TerminateInstancesWithExpiration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.TerminateInstancesWithExpiration",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.Type": {
        "Allowed values": "instant | maintain | request",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.Type",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.ValidFrom": {
        "Required": "No",
        "SampleValue": "TODO-ValidFrom",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.ValidFrom",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.ValidUntil": {
        "Required": "No",
        "SampleValue": "TODO-ValidUntil",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.ValidUntil",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.BlockDeviceMappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.BlockDeviceMappings",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.EbsOptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.EbsOptimized",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.IamInstanceProfile": {
        "Required": "No",
        "Type": "IamInstanceProfileSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.IamInstanceProfile",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ImageId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ImageId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.InstanceType": {
        "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5ad.12xlarge | c5ad.16xlarge | c5ad.24xlarge | c5ad.2xlarge | c5ad.4xlarge | c5ad.8xlarge | c5ad.large | c5ad.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | c6gd.12xlarge | c6gd.16xlarge | c6gd.2xlarge | c6gd.4xlarge | c6gd.8xlarge | c6gd.large | c6gd.medium | c6gd.metal | c6gd.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | m6gd.12xlarge | m6gd.16xlarge | m6gd.2xlarge | m6gd.4xlarge | m6gd.8xlarge | m6gd.large | m6gd.medium | m6gd.metal | m6gd.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | r6gd.12xlarge | r6gd.16xlarge | r6gd.2xlarge | r6gd.4xlarge | r6gd.8xlarge | r6gd.large | r6gd.medium | r6gd.metal | r6gd.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.KernelId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.KernelId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.KeyName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.KeyName",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.Monitoring": {
        "Required": "No",
        "Type": "SpotFleetMonitoring",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.Monitoring",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.NetworkInterfaces": {
        "Required": "No",
        "Type": "List of [InstanceNetworkInterfaceSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.NetworkInterfaces",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.Placement": {
        "Required": "No",
        "Type": "SpotPlacement",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.Placement",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.RamdiskId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.RamdiskId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SecurityGroups": {
        "Required": "No",
        "Type": "List of [GroupIdentifier",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SpotPrice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SpotPrice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SubnetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.TagSpecifications": {
        "Required": "No",
        "Type": "List of [SpotFleetTagSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.TagSpecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.UserData": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.UserData",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.WeightedCapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.WeightedCapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.DeviceName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.DeviceName",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.Ebs": {
        "Required": "Conditional",
        "Type": "EbsBlockDevice",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.Ebs",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.NoDevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.NoDevice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.VirtualName": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.VirtualName",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.Encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.Encrypted",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.Iops": {
        "Required": "No",
        "SampleValue": "TODO-Iops",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.Iops",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.SnapshotId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.SnapshotId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.VolumeSize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.VolumeSize",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.VolumeType": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.Arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.Arn",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.Enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.AssociatePublicIpAddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.AssociatePublicIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Description",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.DeviceIndex": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.DeviceIndex",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Groups",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Ipv6AddressCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Ipv6AddressCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Ipv6Addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Ipv6Addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.NetworkInterfaceId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.NetworkInterfaceId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.PrivateIpAddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAddressSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.PrivateIpAddresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.SecondaryPrivateIpAddressCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.SecondaryPrivateIpAddressCount",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.SubnetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.Primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.Primary",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.PrivateIpAddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.PrivateIpAddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.GroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.GroupName",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.Tenancy": {
        "Allowed values": "dedicated | default | host",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.Tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.GroupId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.GroupId",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.ResourceType": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.ResourceType",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.Tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.targetgroup.Arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.targetgroup.Arn",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.targetgroupsconfig.TargetGroups": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [TargetGroup",
        "UniqueKey": "ec2.spotfleet.targetgroupsconfig.TargetGroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.trafficmirrorfilterrule.trafficmirrorportrange.FromPort": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.trafficmirrorfilterrule.trafficmirrorportrange.FromPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.trafficmirrorfilterrule.trafficmirrorportrange.ToPort": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.trafficmirrorfilterrule.trafficmirrorportrange.ToPort",
        "UpdateRequires": "Replacement"
    },
    "ec2.vpnconnection.vpntunneloptionsspecification.PreSharedKey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.vpnconnection.vpntunneloptionsspecification.PreSharedKey",
        "UpdateRequires": "Replacement"
    },
    "ec2.vpnconnection.vpntunneloptionsspecification.TunnelInsideCidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.vpnconnection.vpntunneloptionsspecification.TunnelInsideCidr",
        "UpdateRequires": "Replacement"
    },
    "ecr.repository.lifecyclepolicy.LifecyclePolicyText": {
        "Maximum": "30720",
        "Minimum": "100",
        "Pattern": "^.{100,30720}$",
        "Required": "No",
        "SampleValue": "TODO-ecr.repository.lifecyclepolicy.LifecyclePolicyText",
        "Type": "String",
        "UniqueKey": "ecr.repository.lifecyclepolicy.LifecyclePolicyText",
        "UpdateRequires": "Replacement"
    },
    "ecr.repository.lifecyclepolicy.RegistryId": {
        "Pattern": "[0-9]{12}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecr.repository.lifecyclepolicy.RegistryId",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.autoscalinggroupprovider.AutoScalingGroupArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.capacityprovider.autoscalinggroupprovider.AutoScalingGroupArn",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.autoscalinggroupprovider.ManagedScaling": {
        "Required": "No",
        "Type": "ManagedScaling",
        "UniqueKey": "ecs.capacityprovider.autoscalinggroupprovider.ManagedScaling",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.autoscalinggroupprovider.ManagedTerminationProtection": {
        "Required": "No",
        "SampleValue": "TODO-ManagedTerminationProtection",
        "UniqueKey": "ecs.capacityprovider.autoscalinggroupprovider.ManagedTerminationProtection",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.managedscaling.MaximumScalingStepSize": {
        "Maximum": "10000",
        "Minimum": "1",
        "Pattern": "^[1,10000]}$",
        "Required": "No",
        "SampleValue": "1...10000",
        "Type": "Integer",
        "UniqueKey": "ecs.capacityprovider.managedscaling.MaximumScalingStepSize",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.managedscaling.MinimumScalingStepSize": {
        "Maximum": "10000",
        "Minimum": "1",
        "Pattern": "^[1,10000]}$",
        "Required": "No",
        "SampleValue": "1...10000",
        "Type": "Integer",
        "UniqueKey": "ecs.capacityprovider.managedscaling.MinimumScalingStepSize",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.managedscaling.Status": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.capacityprovider.managedscaling.Status",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.managedscaling.TargetCapacity": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "ecs.capacityprovider.managedscaling.TargetCapacity",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.capacityproviderstrategyitem.Base": {
        "Maximum": "100000",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "ecs.cluster.capacityproviderstrategyitem.Base",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.capacityproviderstrategyitem.CapacityProvider": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.cluster.capacityproviderstrategyitem.CapacityProvider",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.capacityproviderstrategyitem.Weight": {
        "Maximum": "1000",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "ecs.cluster.capacityproviderstrategyitem.Weight",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.clustersetting.name": {
        "Allowed Values": "containerInsights",
        "AllowedValues": [
            "containerInsights"
        ],
        "Pattern": "^[containerInsights]",
        "Required": "Yes",
        "SampleValue": "containerInsights",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersetting.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.clustersetting.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersetting.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.clustersettings.Name": {
        "Allowed values": "containerInsights",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersettings.Name",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.clustersettings.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersettings.Value",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.awsvpcconfiguration.AssignPublicIp": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.AssignPublicIp",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.awsvpcconfiguration.SecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.awsvpcconfiguration.Subnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.Subnets",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentconfiguration.MaximumPercent": {
        "Required": "No",
        "SampleValue": "TODO-MaximumPercent",
        "UniqueKey": "ecs.service.deploymentconfiguration.MaximumPercent",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentconfiguration.MinimumHealthyPercent": {
        "Required": "No",
        "SampleValue": "TODO-MinimumHealthyPercent",
        "UniqueKey": "ecs.service.deploymentconfiguration.MinimumHealthyPercent",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentcontroller.Type": {
        "Allowed Values": "ECS` \\| `EXTERNAL",
        "AllowedValues": [
            "ECS` \\| `EXTERNAL"
        ],
        "Pattern": "^[ECS` \\| `EXTERNAL]",
        "Required": "No",
        "SampleValue": "ECS` \\| `EXTERNAL",
        "Type": "String",
        "UniqueKey": "ecs.service.deploymentcontroller.Type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.ContainerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.loadbalancers.ContainerName",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.ContainerPort": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.service.loadbalancers.ContainerPort",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.LoadBalancerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.loadbalancers.LoadBalancerName",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.TargetGroupArn": {
        "Required": "No",
        "SampleValue": "TODO-TargetGroupArn",
        "UniqueKey": "ecs.service.loadbalancers.TargetGroupArn",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.networkconfiguration.AwsvpcConfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "ecs.service.networkconfiguration.AwsvpcConfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementconstraint.Expression": {
        "Required": "No",
        "SampleValue": "TODO-Expression",
        "UniqueKey": "ecs.service.placementconstraint.Expression",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementconstraint.Type": {
        "Allowed values": "distinctInstance | memberOf",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.service.placementconstraint.Type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementstrategy.Field": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.placementstrategy.Field",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementstrategy.Type": {
        "Allowed values": "binpack | random | spread",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.service.placementstrategy.Type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.ContainerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.serviceregistry.ContainerName",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.ContainerPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.service.serviceregistry.ContainerPort",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.Port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.service.serviceregistry.Port",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.RegistryArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.serviceregistry.RegistryArn",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.authorizationconfig.AccessPointId": {
        "Required": "No",
        "SampleValue": "TODO-AccessPointId",
        "UniqueKey": "ecs.taskdefinition.authorizationconfig.AccessPointId",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.authorizationconfig.IAM": {
        "Required": "No",
        "SampleValue": "TODO-IAM",
        "UniqueKey": "ecs.taskdefinition.authorizationconfig.IAM",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Command": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Command",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Cpu": {
        "Required": "No",
        "SampleValue": "TODO-Cpu",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Cpu",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.DependsOn": {
        "Required": "No",
        "SampleValue": "TODO-DependsOn",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.DependsOn",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.DisableNetworking": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.DisableNetworking",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.DnsSearchDomains": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.DnsSearchDomains",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.DnsServers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.DnsServers",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.DockerLabels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.DockerLabels",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.DockerSecurityOptions": {
        "Required": "No",
        "SampleValue": "TODO-DockerSecurityOptions",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.DockerSecurityOptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.EntryPoint": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.EntryPoint",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Environment": {
        "Required": "No",
        "Type": "List of [KeyValuePair",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Environment",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.EnvironmentFiles": {
        "Required": "No",
        "SampleValue": "TODO-EnvironmentFiles",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.EnvironmentFiles",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Essential": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Essential",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ExtraHosts": {
        "Required": "No",
        "Type": "List of [HostEntry",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ExtraHosts",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.FirelensConfiguration": {
        "Required": "No",
        "SampleValue": "TODO-FirelensConfiguration",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.FirelensConfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.HealthCheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.HealthCheck",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Hostname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Hostname",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Image": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Image",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Interactive": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Interactive",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Links": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Links",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.LinuxParameters": {
        "Required": "No",
        "Type": "LinuxParameters",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.LinuxParameters",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.LogConfiguration": {
        "Required": "No",
        "SampleValue": "TODO-LogConfiguration",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.LogConfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Memory": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Memory",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.MemoryReservation": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.MemoryReservation",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.MountPoints": {
        "Required": "No",
        "Type": "List of [MountPoint",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.MountPoints",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.PortMappings": {
        "Required": "No",
        "SampleValue": "TODO-PortMappings",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.PortMappings",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Privileged": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Privileged",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.PseudoTerminal": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.PseudoTerminal",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ReadonlyRootFilesystem": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ReadonlyRootFilesystem",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.RepositoryCredentials": {
        "Required": "No",
        "Type": "RepositoryCredentials",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.RepositoryCredentials",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ResourceRequirements": {
        "Required": "No",
        "Type": "List of [ResourceRequirement",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ResourceRequirements",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Secrets": {
        "Required": "No",
        "SampleValue": "TODO-Secrets",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Secrets",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.StartTimeout": {
        "Required": "No",
        "SampleValue": "TODO-StartTimeout",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.StartTimeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.StopTimeout": {
        "Required": "No",
        "SampleValue": "TODO-StopTimeout",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.StopTimeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.SystemControls": {
        "Required": "No",
        "Type": "List of [SystemControl",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.SystemControls",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.Ulimits": {
        "Required": "No",
        "Type": "List of [Ulimit",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.Ulimits",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.User": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.User",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.VolumesFrom": {
        "Required": "No",
        "Type": "List of [VolumeFrom",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.VolumesFrom",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.WorkingDirectory": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.WorkingDirectory",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environment.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environment.Name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environment.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environment.Value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.hostentry.Hostname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.hostentry.Hostname",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.hostentry.IpAddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.hostentry.IpAddress",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.LogDriver": {
        "Required": "Yes",
        "SampleValue": "TODO-LogDriver",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.LogDriver",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.Options": {
        "Required": "No",
        "Type": "Map",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.Options",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.SecretOptions": {
        "Required": "No",
        "SampleValue": "TODO-SecretOptions",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.SecretOptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.ContainerPath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.ContainerPath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.ReadOnly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.ReadOnly",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.SourceVolume": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.SourceVolume",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.ContainerPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.ContainerPort",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.HostPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.HostPort",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.Protocol": {
        "Allowed values": "tcp | udp",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.Protocol",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.HardLimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.HardLimit",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.Name": {
        "Allowed values": "core | cpu | data | fsize | locks | memlock | msgqueue | nice | nofile | nproc | rss | rtprio | rttime | sigpending | stack",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.Name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.SoftLimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.SoftLimit",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.volumesfrom.ReadOnly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.volumesfrom.ReadOnly",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.volumesfrom.SourceContainer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.volumesfrom.SourceContainer",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdependency.Condition": {
        "Allowed values": "COMPLETE | HEALTHY | START | SUCCESS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdependency.Condition",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdependency.ContainerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdependency.ContainerName",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.ContainerPath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.device.ContainerPath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.HostPath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.device.HostPath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.Permissions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.device.Permissions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.Autoprovision": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.Autoprovision",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.Driver": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.Driver",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.DriverOpts": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.DriverOpts",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.Labels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.Labels",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.Scope": {
        "Allowed values": "shared | task",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.Scope",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.AuthorizationConfig": {
        "Required": "No",
        "Type": "AuthorizationConfig",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.AuthorizationConfig",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.FilesystemId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.FilesystemId",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.RootDirectory": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.RootDirectory",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.TransitEncryption": {
        "Required": "No",
        "SampleValue": "TODO-TransitEncryption",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.TransitEncryption",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.TransitEncryptionPort": {
        "Required": "No",
        "SampleValue": "TODO-TransitEncryptionPort",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.TransitEncryptionPort",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.environmentfile.Type": {
        "Allowed values": "s3",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.environmentfile.Type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.environmentfile.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.environmentfile.Value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.firelensconfiguration.Options": {
        "Required": "No",
        "Type": "Map",
        "UniqueKey": "ecs.taskdefinition.firelensconfiguration.Options",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.firelensconfiguration.Type": {
        "Allowed values": "fluentbit | fluentd",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.firelensconfiguration.Type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.Command": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.healthcheck.Command",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.Interval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.Interval",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.Retries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.Retries",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.StartPeriod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.StartPeriod",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.Timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.Timeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.inferenceaccelerator.DeviceName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.inferenceaccelerator.DeviceName",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.inferenceaccelerator.DeviceType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.inferenceaccelerator.DeviceType",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.kernelcapabilities.Add": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.kernelcapabilities.Add",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.kernelcapabilities.Drop": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.kernelcapabilities.Drop",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.Capabilities": {
        "Required": "No",
        "Type": "KernelCapabilities",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.Capabilities",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.Devices": {
        "Required": "No",
        "Type": "List of [Device",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.Devices",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.InitProcessEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.InitProcessEnabled",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.MaxSwap": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.MaxSwap",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.SharedMemorySize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.SharedMemorySize",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.Swappiness": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.Swappiness",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.Tmpfs": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.Tmpfs",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.ContainerName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.ContainerName",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.ProxyConfigurationProperties": {
        "Required": "No",
        "Type": "List of [KeyValuePair",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.ProxyConfigurationProperties",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.Type": {
        "Allowed values": "APPMESH",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.Type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.repositorycredentials.CredentialsParameter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.repositorycredentials.CredentialsParameter",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.resourcerequirement.Type": {
        "Allowed values": "GPU | InferenceAccelerator",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.resourcerequirement.Type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.resourcerequirement.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.resourcerequirement.Value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.secret.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.secret.Name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.secret.ValueFrom": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.secret.ValueFrom",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.systemcontrol.Namespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.systemcontrol.Namespace",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.systemcontrol.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.systemcontrol.Value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.taskdefinitionplacementconstraint.Expression": {
        "Required": "No",
        "SampleValue": "TODO-Expression",
        "UniqueKey": "ecs.taskdefinition.taskdefinitionplacementconstraint.Expression",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.taskdefinitionplacementconstraint.Type": {
        "Allowed values": "memberOf",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.taskdefinitionplacementconstraint.Type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.ContainerPath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.tmpfs.ContainerPath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.MountOptions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.tmpfs.MountOptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.Size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.tmpfs.Size",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.DockerVolumeConfiguration": {
        "Required": "No",
        "Type": "DockerVolumeConfiguration",
        "UniqueKey": "ecs.taskdefinition.volumes.DockerVolumeConfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.EFSVolumeConfiguration": {
        "Required": "No",
        "Type": "EFSVolumeConfiguration",
        "UniqueKey": "ecs.taskdefinition.volumes.EFSVolumeConfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.Host": {
        "Required": "No",
        "Type": "HostVolumeProperties",
        "UniqueKey": "ecs.taskdefinition.volumes.Host",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.volumes.Name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.host.SourcePath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.volumes.host.SourcePath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.AssignPublicIp": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.AssignPublicIp",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.SecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.Subnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.Subnets",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.ContainerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.loadbalancer.ContainerName",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.ContainerPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.loadbalancer.ContainerPort",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.LoadBalancerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.loadbalancer.LoadBalancerName",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.TargetGroupArn": {
        "Required": "No",
        "SampleValue": "TODO-TargetGroupArn",
        "UniqueKey": "ecs.taskset.loadbalancer.TargetGroupArn",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.networkconfiguration.AwsVpcConfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "ecs.taskset.networkconfiguration.AwsVpcConfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.scale.Unit": {
        "Allowed values": "PERCENT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.scale.Unit",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.scale.Value": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ecs.taskset.scale.Value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.ContainerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.serviceregistry.ContainerName",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.ContainerPort": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.serviceregistry.ContainerPort",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.Port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.serviceregistry.Port",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.RegistryArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.serviceregistry.RegistryArn",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.accesspointtag.Key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^(?![aA]{1}[wW]{1}[sS]{1}:)([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.accesspointtag.Key",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.accesspointtag.Value": {
        "Maximum": "256",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.accesspointtag.Value",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.creationinfo.OwnerGid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.creationinfo.OwnerGid",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.creationinfo.OwnerUid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.creationinfo.OwnerUid",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.creationinfo.Permissions": {
        "Pattern": "^[0-7]{3,4}$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.creationinfo.Permissions",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.posixuser.Gid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.posixuser.Gid",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.posixuser.SecondaryGids": {
        "Maximum": "16",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "efs.accesspoint.posixuser.SecondaryGids",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.posixuser.Uid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.posixuser.Uid",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.rootdirectory.CreationInfo": {
        "Required": "No",
        "Type": "CreationInfo",
        "UniqueKey": "efs.accesspoint.rootdirectory.CreationInfo",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.rootdirectory.Path": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-efs.accesspoint.rootdirectory.Path",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.rootdirectory.Path",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.backuppolicy.Status": {
        "Required": "Yes",
        "SampleValue": "TODO-Status",
        "UniqueKey": "efs.filesystem.backuppolicy.Status",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.elasticfilesystemtag.Key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^(?![aA]{1}[wW]{1}[sS]{1}:)([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.elasticfilesystemtag.Key",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.elasticfilesystemtag.Value": {
        "Maximum": "256",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.elasticfilesystemtag.Value",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.filesystemtags.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "Yes",
        "SampleValue": "TODO-efs.filesystem.filesystemtags.key",
        "Type": "String",
        "UniqueKey": "efs.filesystem.filesystemtags.key",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.filesystemtags.value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.filesystemtags.value",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.lifecyclepolicy.TransitionToIA": {
        "Allowed values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.lifecyclepolicy.TransitionToIA",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.encryptionconfig.Provider": {
        "Required": "No",
        "Type": "Provider",
        "UniqueKey": "eks.cluster.encryptionconfig.Provider",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.encryptionconfig.Resources": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "eks.cluster.encryptionconfig.Resources",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.provider.KeyArn": {
        "Required": "No",
        "SampleValue": "TODO-KeyArn",
        "UniqueKey": "eks.cluster.provider.KeyArn",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.resourcesvpcconfig.SecurityGroupIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "eks.cluster.resourcesvpcconfig.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.resourcesvpcconfig.SubnetIds": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "eks.cluster.resourcesvpcconfig.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.launchtemplatespecification.Id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "eks.nodegroup.launchtemplatespecification.Id",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.launchtemplatespecification.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "eks.nodegroup.launchtemplatespecification.Name",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.launchtemplatespecification.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "eks.nodegroup.launchtemplatespecification.Version",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.remoteaccess.Ec2SshKey": {
        "Required": "Yes",
        "SampleValue": "TODO-Ec2SshKey",
        "UniqueKey": "eks.nodegroup.remoteaccess.Ec2SshKey",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.remoteaccess.SourceSecurityGroups": {
        "Required": "No",
        "SampleValue": "TODO-SourceSecurityGroups",
        "UniqueKey": "eks.nodegroup.remoteaccess.SourceSecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.scalingconfig.DesiredSize": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "eks.nodegroup.scalingconfig.DesiredSize",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.scalingconfig.MaxSize": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "eks.nodegroup.scalingconfig.MaxSize",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.scalingconfig.MinSize": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "eks.nodegroup.scalingconfig.MinSize",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.AZMode": {
        "Allowed values": "cross-az | single-az",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.AZMode",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.AutoMinorVersionUpgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticache.cache.cluster.AutoMinorVersionUpgrade",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.CacheNodeType": {
        "Required": "Yes",
        "SampleValue": "TODO-CacheNodeType",
        "UniqueKey": "elasticache.cache.cluster.CacheNodeType",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.CacheParameterGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.CacheParameterGroupName",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.CacheSecurityGroupNames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.CacheSecurityGroupNames",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.CacheSubnetGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.CacheSubnetGroupName",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.ClusterName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.ClusterName",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.Engine": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.Engine",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.EngineVersion": {
        "Required": "No",
        "SampleValue": "TODO-EngineVersion",
        "UniqueKey": "elasticache.cache.cluster.EngineVersion",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.NotificationTopicArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.NotificationTopicArn",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.NumCacheNodes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.NumCacheNodes",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.Port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.Port",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.PreferredAvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.PreferredAvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.PreferredAvailabilityZones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.PreferredAvailabilityZones",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.PreferredMaintenanceWindow": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.PreferredMaintenanceWindow",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.SnapshotArns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.SnapshotArns",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.SnapshotName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.SnapshotName",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.SnapshotRetentionLimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.SnapshotRetentionLimit",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.SnapshotWindow": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.SnapshotWindow",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "elasticache.cache.cluster.Tags",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.VpcSecurityGroupIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.VpcSecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "elasticache.parameter.group.": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticache.parameter.group.",
        "UpdateRequires": "Replacement"
    },
    "elasticache.parameter.group.CacheParameterGroupFamily": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.parameter.group.CacheParameterGroupFamily",
        "UpdateRequires": "Replacement"
    },
    "elasticache.parameter.group.Description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.parameter.group.Description",
        "UpdateRequires": "Replacement"
    },
    "elasticache.parameter.group.Properties": {
        "UniqueKey": "elasticache.parameter.group.Properties"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.NodeGroupId": {
        "Maximum": "4",
        "Minimum": "1",
        "Pattern": "\\d+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.NodeGroupId",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.PrimaryAvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.PrimaryAvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.ReplicaAvailabilityZones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.ReplicaAvailabilityZones",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.ReplicaCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.ReplicaCount",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.Slots": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.Slots",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.Description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.Description",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.ingress.CacheSecurityGroupName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.CacheSecurityGroupName",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.ingress.EC2SecurityGroupName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.EC2SecurityGroupName",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.ingress.EC2SecurityGroupOwnerId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.EC2SecurityGroupOwnerId",
        "UpdateRequires": "Replacement"
    },
    "elasticache.subnetgroup.CacheSubnetGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.subnetgroup.CacheSubnetGroupName",
        "UpdateRequires": "Replacement"
    },
    "elasticache.subnetgroup.Description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.subnetgroup.Description",
        "UpdateRequires": "Replacement"
    },
    "elasticache.subnetgroup.SubnetIds": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "elasticache.subnetgroup.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.applicationresourcelifecycleconfig.ServiceRole": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.application.applicationresourcelifecycleconfig.ServiceRole",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.applicationresourcelifecycleconfig.VersionLifecycleConfig": {
        "Required": "No",
        "Type": "ApplicationVersionLifecycleConfig",
        "UniqueKey": "elasticbeanstalk.application.applicationresourcelifecycleconfig.VersionLifecycleConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.applicationversionlifecycleconfig.MaxAgeRule": {
        "Required": "No",
        "Type": "MaxAgeRule",
        "UniqueKey": "elasticbeanstalk.application.applicationversionlifecycleconfig.MaxAgeRule",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.applicationversionlifecycleconfig.MaxCountRule": {
        "Required": "No",
        "Type": "MaxCountRule",
        "UniqueKey": "elasticbeanstalk.application.applicationversionlifecycleconfig.MaxCountRule",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxagerule.DeleteSourceFromS3": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.DeleteSourceFromS3",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxagerule.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxagerule.MaxAgeInDays": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.MaxAgeInDays",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxcountrule.DeleteSourceFromS3": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.DeleteSourceFromS3",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxcountrule.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxcountrule.MaxCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.MaxCount",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.Namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.Namespace",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.OptionName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.OptionName",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.ResourceName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.configurationoptionsetting.ResourceName",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.ResourceName",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.Value",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.sourceconfiguration.ApplicationName": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.sourceconfiguration.ApplicationName",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.sourceconfiguration.ApplicationName",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.sourceconfiguration.TemplateName": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.sourceconfiguration.TemplateName",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.sourceconfiguration.TemplateName",
        "UpdateRequires": "Replacement"
    },
    "elasticfilesystem.filesystem.lifecyclepolicy.transitiontoia": {
        "Allowed Values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
        "AllowedValues": [
            "AFTER_14_DAYS",
            "AFTER_30_DAYS",
            "AFTER_60_DAYS",
            "AFTER_7_DAYS",
            "AFTER_90_DAYS"
        ],
        "Pattern": "^[AFTER_14_DAYS|AFTER_30_DAYS|AFTER_60_DAYS|AFTER_7_DAYS|AFTER_90_DAYS]",
        "Required": "Yes",
        "SampleValue": "AFTER_14_DAYS|AFTER_30_DAYS|AFTER_60_DAYS|AFTER_7_DAYS|AFTER_90_DAYS",
        "Type": "String",
        "UniqueKey": "elasticfilesystem.filesystem.lifecyclepolicy.transitiontoia",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.AuthenticationRequestExtraParams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.AuthenticationRequestExtraParams",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.OnUnauthenticatedRequest": {
        "Allowed values": "allow | authenticate | deny",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.OnUnauthenticatedRequest",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.Scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.Scope",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.SessionCookieName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.SessionCookieName",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.SessionTimeout": {
        "Required": "No",
        "Type": "Long",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.SessionTimeout",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolArn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolClientId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolClientId",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolDomain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolDomain",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.AuthenticationRequestExtraParams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.AuthenticationRequestExtraParams",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.AuthorizationEndpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.AuthorizationEndpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.ClientId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.ClientId",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.ClientSecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.ClientSecret",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.Issuer": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.Issuer",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.OnUnauthenticatedRequest": {
        "Allowed values": "allow | authenticate | deny",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.OnUnauthenticatedRequest",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.Scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.Scope",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.SessionCookieName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.SessionCookieName",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.SessionTimeout": {
        "Required": "No",
        "Type": "Long",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.SessionTimeout",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.TokenEndpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.TokenEndpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.UserInfoEndpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.UserInfoEndpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.certificates.1.CertificateArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.certificates.1.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.certificates.CertificateArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.certificates.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.AuthenticateCognitoConfig": {
        "Required": "No",
        "Type": "AuthenticateCognitoConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.AuthenticateCognitoConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.AuthenticateOidcConfig": {
        "Required": "No",
        "Type": "AuthenticateOidcConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.AuthenticateOidcConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.FixedResponseConfig": {
        "Required": "No",
        "Type": "FixedResponseConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.FixedResponseConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.ForwardConfig": {
        "Required": "No",
        "Type": "ForwardConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.ForwardConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.Order": {
        "Maximum": "50000",
        "Minimum": "1",
        "Pattern": "^[1,50000]}$",
        "Required": "No",
        "SampleValue": "1...50000",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.Order",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.RedirectConfig": {
        "Required": "No",
        "Type": "RedirectConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.RedirectConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.TargetGroupArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.TargetGroupArn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.Type": {
        "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.Type",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.ContentType": {
        "Maximum": "32",
        "Minimum": "0",
        "Pattern": "^.{0,32}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.fixedresponseconfig.ContentType",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.ContentType",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.MessageBody": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.fixedresponseconfig.MessageBody",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.MessageBody",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.StatusCode": {
        "Pattern": "^(2|4|5)\\d\\d$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.StatusCode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.forwardconfig.TargetGroupStickinessConfig": {
        "Required": "No",
        "Type": "TargetGroupStickinessConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.forwardconfig.TargetGroupStickinessConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.forwardconfig.TargetGroups": {
        "Required": "No",
        "Type": "List of [TargetGroupTuple",
        "UniqueKey": "elasticloadbalancingv2.listener.forwardconfig.TargetGroups",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.Host": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.Host",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.Host",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.Path": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.Path",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.Path",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.Port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.Port",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.Protocol": {
        "Pattern": "^(HTTPS?|#\\{protocol\\})$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.Protocol",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.Query": {
        "Maximum": "128",
        "Minimum": "0",
        "Pattern": "^.{0,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.Query",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.Query",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.StatusCode": {
        "Allowed values": "HTTP_301 | HTTP_302",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.StatusCode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.targetgroupstickinessconfig.DurationSeconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listener.targetgroupstickinessconfig.DurationSeconds",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.targetgroupstickinessconfig.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticloadbalancingv2.listener.targetgroupstickinessconfig.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.targetgrouptuple.TargetGroupArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.targetgrouptuple.TargetGroupArn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.targetgrouptuple.Weight": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listener.targetgrouptuple.Weight",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.AuthenticateCognitoConfig": {
        "Required": "No",
        "Type": "AuthenticateCognitoConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.AuthenticateCognitoConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.AuthenticateOidcConfig": {
        "Required": "No",
        "Type": "AuthenticateOidcConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.AuthenticateOidcConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.FixedResponseConfig": {
        "Required": "No",
        "Type": "FixedResponseConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.FixedResponseConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.ForwardConfig": {
        "Required": "No",
        "Type": "ForwardConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.ForwardConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.Order": {
        "Maximum": "50000",
        "Minimum": "1",
        "Pattern": "^[1,50000]}$",
        "Required": "No",
        "SampleValue": "1...50000",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.Order",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.RedirectConfig": {
        "Required": "No",
        "Type": "RedirectConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.RedirectConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.TargetGroupArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.TargetGroupArn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.Type": {
        "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.Type",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.AuthenticationRequestExtraParams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.AuthenticationRequestExtraParams",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.OnUnauthenticatedRequest": {
        "Allowed values": "allow | authenticate | deny",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.OnUnauthenticatedRequest",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.Scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.Scope",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.SessionCookieName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.SessionCookieName",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.SessionTimeout": {
        "Required": "No",
        "Type": "Long",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.SessionTimeout",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolArn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolClientId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolClientId",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolDomain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolDomain",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.AuthenticationRequestExtraParams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.AuthenticationRequestExtraParams",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.AuthorizationEndpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.AuthorizationEndpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.ClientId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.ClientId",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.ClientSecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.ClientSecret",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.Issuer": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.Issuer",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.OnUnauthenticatedRequest": {
        "Allowed values": "allow | authenticate | deny",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.OnUnauthenticatedRequest",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.Scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.Scope",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.SessionCookieName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.SessionCookieName",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.SessionTimeout": {
        "Required": "No",
        "Type": "Long",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.SessionTimeout",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.TokenEndpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.TokenEndpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.UserInfoEndpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.UserInfoEndpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.Field": {
        "Maximum": "64",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.Field",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.HostHeaderConfig": {
        "Required": "No",
        "Type": "HostHeaderConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.HostHeaderConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.HttpHeaderConfig": {
        "Required": "Conditional",
        "Type": "HttpHeaderConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.HttpHeaderConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.HttpRequestMethodConfig": {
        "Required": "Conditional",
        "Type": "HttpRequestMethodConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.HttpRequestMethodConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.PathPatternConfig": {
        "Required": "No",
        "Type": "PathPatternConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.PathPatternConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.QueryStringConfig": {
        "Required": "Conditional",
        "Type": "QueryStringConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.QueryStringConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.SourceIpConfig": {
        "Required": "Conditional",
        "Type": "SourceIpConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.SourceIpConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.Values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.Values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.ContentType": {
        "Maximum": "32",
        "Minimum": "0",
        "Pattern": "^.{0,32}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.fixedresponseconfig.ContentType",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.ContentType",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.MessageBody": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.fixedresponseconfig.MessageBody",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.MessageBody",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.StatusCode": {
        "Pattern": "^(2|4|5)\\d\\d$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.StatusCode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.forwardconfig.TargetGroupStickinessConfig": {
        "Required": "No",
        "Type": "TargetGroupStickinessConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.forwardconfig.TargetGroupStickinessConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.forwardconfig.TargetGroups": {
        "Required": "No",
        "Type": "List of [TargetGroupTuple",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.forwardconfig.TargetGroups",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.hostheaderconfig.Values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.hostheaderconfig.Values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.httpheaderconfig.HttpHeaderName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httpheaderconfig.HttpHeaderName",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.httpheaderconfig.Values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httpheaderconfig.Values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.Values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.Values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.pathpatternconfig.Values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.pathpatternconfig.Values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.querystringconfig.Values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringconfig.Values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.querystringkeyvalue.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringkeyvalue.Key",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.querystringkeyvalue.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringkeyvalue.Value",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.Host": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.Host",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.Host",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.Path": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.Path",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.Path",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.Port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.Port",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.Protocol": {
        "Pattern": "^(HTTPS?|#\\{protocol\\})$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.Protocol",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.Query": {
        "Maximum": "128",
        "Minimum": "0",
        "Pattern": "^.{0,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.Query",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.Query",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.StatusCode": {
        "Allowed values": "HTTP_301 | HTTP_302",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.StatusCode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.sourceipconfig.Values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.sourceipconfig.Values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.DurationSeconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.DurationSeconds",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.targetgrouptuple.TargetGroupArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.targetgrouptuple.TargetGroupArn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.targetgrouptuple.Weight": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.targetgrouptuple.Weight",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.Key": {
        "Maximum": "256",
        "Pattern": "^[a-zA-Z0-9._]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.Key",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.Value": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.Value",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.AllocationId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.AllocationId",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.PrivateIPv4Address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.PrivateIPv4Address",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.SubnetId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.matcher.HttpCode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.matcher.HttpCode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.Id",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.Port": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.Port",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetgroupattribute.Key": {
        "Maximum": "256",
        "Pattern": "^[a-zA-Z0-9._]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetgroupattribute.Key",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetgroupattribute.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetgroupattribute.Value",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.application.AdditionalInfo": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.cluster.application.AdditionalInfo",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.application.Args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.application.Args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.application.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.application.Name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.application.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.application.Version",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.autoscalingpolicy.Constraints": {
        "Required": "Yes",
        "Type": "ScalingConstraints",
        "UniqueKey": "elasticmapreduce.cluster.autoscalingpolicy.Constraints",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.autoscalingpolicy.Rules": {
        "Required": "Yes",
        "Type": "List of [ScalingRule",
        "UniqueKey": "elasticmapreduce.cluster.autoscalingpolicy.Rules",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.bootstrapactionconfig.Name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.bootstrapactionconfig.Name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.bootstrapactionconfig.ScriptBootstrapAction": {
        "Required": "Yes",
        "Type": "ScriptBootstrapActionConfig",
        "UniqueKey": "elasticmapreduce.cluster.bootstrapactionconfig.ScriptBootstrapAction",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.ComparisonOperator": {
        "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.Dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.EvaluationPeriods": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.EvaluationPeriods",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.MetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.MetricName",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.Namespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.Namespace",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.Period": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.Period",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.Statistic": {
        "Allowed values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.Statistic",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.Threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.Threshold",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.Unit": {
        "Allowed values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.Unit",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.configuration.Classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.configuration.Classification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.configuration.ConfigurationProperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.cluster.configuration.ConfigurationProperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.configuration.Configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.configuration.Configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ebsblockdeviceconfig.VolumeSpecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "elasticmapreduce.cluster.ebsblockdeviceconfig.VolumeSpecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ebsblockdeviceconfig.VolumesPerInstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.ebsblockdeviceconfig.VolumesPerInstance",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ebsconfiguration.EbsBlockDeviceConfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "elasticmapreduce.cluster.ebsconfiguration.EbsBlockDeviceConfigs",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ebsconfiguration.EbsOptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.ebsconfiguration.EbsOptimized",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.Args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.Args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.Jar": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.Jar",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.MainClass": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.MainClass",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.StepProperties": {
        "Required": "No",
        "Type": "List of [KeyValue",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.StepProperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.InstanceTypeConfigs": {
        "Required": "No",
        "Type": "List of [InstanceTypeConfig",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.InstanceTypeConfigs",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.LaunchSpecifications": {
        "Required": "No",
        "Type": "InstanceFleetProvisioningSpecifications",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.LaunchSpecifications",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.Name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.Name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.TargetOnDemandCapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.TargetOnDemandCapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.TargetSpotCapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.TargetSpotCapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetprovisioningspecifications.SpotSpecification": {
        "Required": "Yes",
        "Type": "SpotProvisioningSpecification",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetprovisioningspecifications.SpotSpecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.AutoScalingPolicy": {
        "Required": "No",
        "Type": "AutoScalingPolicy",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.AutoScalingPolicy",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.BidPrice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.BidPrice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.Configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.Configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.EbsConfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.EbsConfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.InstanceCount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.InstanceCount",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.InstanceType": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.Market": {
        "Allowed values": "ON_DEMAND | SPOT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.Market",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.Name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.Name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.BidPrice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.BidPrice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.BidPriceAsPercentageOfOnDemandPrice": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.BidPriceAsPercentageOfOnDemandPrice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.Configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.Configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.EbsConfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.EbsConfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.InstanceType": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.WeightedCapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.WeightedCapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.AdditionalMasterSecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.AdditionalMasterSecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.AdditionalSlaveSecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.AdditionalSlaveSecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.CoreInstanceFleet": {
        "Required": "No",
        "Type": "InstanceFleetConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.CoreInstanceFleet",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.CoreInstanceGroup": {
        "Required": "No",
        "Type": "InstanceGroupConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.CoreInstanceGroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2KeyName": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2KeyName",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2SubnetId": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2SubnetId",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2SubnetIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.EmrManagedMasterSecurityGroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.EmrManagedMasterSecurityGroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.EmrManagedSlaveSecurityGroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.EmrManagedSlaveSecurityGroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.HadoopVersion": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.HadoopVersion",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.KeepJobFlowAliveWhenNoSteps": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.KeepJobFlowAliveWhenNoSteps",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.MasterInstanceFleet": {
        "Required": "No",
        "Type": "InstanceFleetConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.MasterInstanceFleet",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.MasterInstanceGroup": {
        "Required": "No",
        "Type": "InstanceGroupConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.MasterInstanceGroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.Placement": {
        "Required": "No",
        "Type": "PlacementType",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.Placement",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.ServiceAccessSecurityGroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.ServiceAccessSecurityGroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.TerminationProtected": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.TerminationProtected",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.ADDomainJoinPassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.ADDomainJoinPassword",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.ADDomainJoinUser": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.ADDomainJoinUser",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.CrossRealmTrustPrincipalPassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.CrossRealmTrustPrincipalPassword",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.KdcAdminPassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.KdcAdminPassword",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.Realm": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.Realm",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.keyvalue.Key": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.keyvalue.Key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.keyvalue.Value": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.keyvalue.Value",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.metricdimension.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.metricdimension.Key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.metricdimension.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.metricdimension.Value",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.placementtype.AvailabilityZone": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.placementtype.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingaction.Market": {
        "Allowed values": "ON_DEMAND | SPOT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingaction.Market",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingaction.SimpleScalingPolicyConfiguration": {
        "Required": "Yes",
        "Type": "SimpleScalingPolicyConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.scalingaction.SimpleScalingPolicyConfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingconstraints.MaxCapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.scalingconstraints.MaxCapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingconstraints.MinCapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.scalingconstraints.MinCapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingrule.Action": {
        "Required": "Yes",
        "Type": "ScalingAction",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.Action",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingrule.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.Description",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingrule.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.Name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingrule.Trigger": {
        "Required": "Yes",
        "Type": "ScalingTrigger",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.Trigger",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingtrigger.CloudWatchAlarmDefinition": {
        "Required": "Yes",
        "Type": "CloudWatchAlarmDefinition",
        "UniqueKey": "elasticmapreduce.cluster.scalingtrigger.CloudWatchAlarmDefinition",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scriptbootstrapactionconfig.Args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.scriptbootstrapactionconfig.Args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scriptbootstrapactionconfig.Path": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scriptbootstrapactionconfig.Path",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.AdjustmentType": {
        "Allowed values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.AdjustmentType",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.CoolDown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.CoolDown",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.ScalingAdjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.ScalingAdjustment",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.BlockDurationMinutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.BlockDurationMinutes",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.TimeoutAction": {
        "Allowed values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.TimeoutAction",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.TimeoutDurationMinutes": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.TimeoutDurationMinutes",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.stepconfig.ActionOnFailure": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.ActionOnFailure",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.stepconfig.HadoopJarStep": {
        "Required": "Yes",
        "Type": "HadoopJarStepConfig",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.HadoopJarStep",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.stepconfig.Name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.Name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.volumespecification.Iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.Iops",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.volumespecification.SizeInGB": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.SizeInGB",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.volumespecification.VolumeType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.configuration.Classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.Classification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.configuration.ConfigurationProperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.ConfigurationProperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.configuration.Configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.Configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.VolumeSpecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.VolumeSpecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.VolumesPerInstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.VolumesPerInstance",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsconfiguration.EbsBlockDeviceConfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsconfiguration.EbsBlockDeviceConfigs",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsconfiguration.EbsOptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsconfiguration.EbsOptimized",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.SpotSpecification": {
        "Required": "Yes",
        "Type": "SpotProvisioningSpecification",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.SpotSpecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.BidPrice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.BidPrice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.BidPriceAsPercentageOfOnDemandPrice": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.BidPriceAsPercentageOfOnDemandPrice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.Configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.Configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.EbsConfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.EbsConfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.InstanceType": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.WeightedCapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.WeightedCapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.BlockDurationMinutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.BlockDurationMinutes",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.TimeoutAction": {
        "Allowed values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.TimeoutAction",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.TimeoutDurationMinutes": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.TimeoutDurationMinutes",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.Iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.Iops",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.SizeInGB": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.SizeInGB",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.VolumeType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.autoscalingpolicy.Constraints": {
        "Required": "Yes",
        "Type": "ScalingConstraints",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.autoscalingpolicy.Constraints",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.autoscalingpolicy.Rules": {
        "Required": "Yes",
        "Type": "List of [ScalingRule",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.autoscalingpolicy.Rules",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.ComparisonOperator": {
        "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.EvaluationPeriods": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.EvaluationPeriods",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.MetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.MetricName",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Namespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Namespace",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Period": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Period",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Statistic": {
        "Allowed values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Statistic",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Threshold",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Unit": {
        "Allowed values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Unit",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.metricdimension.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.metricdimension.Key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.metricdimension.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.metricdimension.Value",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingaction.Market": {
        "Allowed values": "ON_DEMAND | SPOT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingaction.Market",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingaction.SimpleScalingPolicyConfiguration": {
        "Required": "Yes",
        "Type": "SimpleScalingPolicyConfiguration",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingaction.SimpleScalingPolicyConfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingconstraints.MaxCapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingconstraints.MaxCapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingconstraints.MinCapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingconstraints.MinCapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.Action": {
        "Required": "Yes",
        "Type": "ScalingAction",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.Action",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.Description",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.Name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.Trigger": {
        "Required": "Yes",
        "Type": "ScalingTrigger",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.Trigger",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingtrigger.CloudWatchAlarmDefinition": {
        "Required": "Yes",
        "Type": "CloudWatchAlarmDefinition",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingtrigger.CloudWatchAlarmDefinition",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.AdjustmentType": {
        "Allowed values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.AdjustmentType",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.CoolDown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.CoolDown",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.ScalingAdjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.ScalingAdjustment",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.Args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.Args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.Jar": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.Jar",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.MainClass": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.MainClass",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.StepProperties": {
        "Required": "No",
        "Type": "List of [KeyValue",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.StepProperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.keyvalue.Key": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.keyvalue.Key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.keyvalue.Value": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.keyvalue.Value",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.advancedsecurityoptionsinput.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.advancedsecurityoptionsinput.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.advancedsecurityoptionsinput.InternalUserDatabaseEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.advancedsecurityoptionsinput.InternalUserDatabaseEnabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.advancedsecurityoptionsinput.MasterUserOptions": {
        "Required": "No",
        "Type": "MasterUserOptions",
        "UniqueKey": "elasticsearch.domain.advancedsecurityoptionsinput.MasterUserOptions",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.cognitooptions.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.IdentityPoolId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.IdentityPoolId",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.RoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.UserPoolId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.UserPoolId",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.domainendpointoptions.EnforceHTTPS": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.domainendpointoptions.EnforceHTTPS",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.domainendpointoptions.TLSSecurityPolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.domainendpointoptions.TLSSecurityPolicy",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.ebsoptions.EBSEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.ebsoptions.EBSEnabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.ebsoptions.Iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.ebsoptions.Iops",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.ebsoptions.VolumeSize": {
        "Required": "No",
        "SampleValue": "TODO-VolumeSize",
        "UniqueKey": "elasticsearch.domain.ebsoptions.VolumeSize",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.ebsoptions.VolumeType": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "elasticsearch.domain.ebsoptions.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterCount",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterEnabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterType": {
        "Required": "No",
        "SampleValue": "TODO-DedicatedMasterType",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterType",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.InstanceCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.InstanceCount",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.InstanceType": {
        "Required": "No",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.ZoneAwarenessConfig": {
        "Required": "No",
        "Type": "ZoneAwarenessConfig",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.ZoneAwarenessConfig",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.ZoneAwarenessEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.ZoneAwarenessEnabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.encryptionatrestoptions.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.encryptionatrestoptions.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.encryptionatrestoptions.KmsKeyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.encryptionatrestoptions.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.logpublishingoption.CloudWatchLogsLogGroupArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.logpublishingoption.CloudWatchLogsLogGroupArn",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.logpublishingoption.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.logpublishingoption.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.masteruseroptions.MasterUserARN": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.masteruseroptions.MasterUserARN",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.masteruseroptions.MasterUserName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.masteruseroptions.MasterUserName",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.masteruseroptions.MasterUserPassword": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.masteruseroptions.MasterUserPassword",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.nodetonodeencryptionoptions.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.nodetonodeencryptionoptions.Enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.snapshotoptions.AutomatedSnapshotStartHour": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.snapshotoptions.AutomatedSnapshotStartHour",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.vpcoptions.SecurityGroupIds": {
        "Required": "No",
        "SampleValue": "TODO-SecurityGroupIds",
        "UniqueKey": "elasticsearch.domain.vpcoptions.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.vpcoptions.SubnetIds": {
        "Required": "No",
        "SampleValue": "TODO-SubnetIds",
        "UniqueKey": "elasticsearch.domain.vpcoptions.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.zoneawarenessconfig.AvailabilityZoneCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.zoneawarenessconfig.AvailabilityZoneCount",
        "UpdateRequires": "Replacement"
    },
    "emr.cluster.configuration.Classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "emr.cluster.configuration.Classification",
        "UpdateRequires": "Replacement"
    },
    "emr.cluster.configuration.ConfigurationProperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "emr.cluster.configuration.ConfigurationProperties",
        "UpdateRequires": "Replacement"
    },
    "emr.cluster.configuration.Configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "emr.cluster.configuration.Configurations",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.EbsBlockDeviceConfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "emr.ebsconfiguration.EbsBlockDeviceConfigs",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.EbsOptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "emr.ebsconfiguration.EbsOptimized",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.VolumeSpecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.VolumeSpecification",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.VolumesPerInstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.VolumesPerInstance",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.Iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.Iops",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.SizeInGB": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.SizeInGB",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.VolumeType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "events.eventbuspolicy.condition.Key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.Key",
        "UpdateRequires": "Replacement"
    },
    "events.eventbuspolicy.condition.Type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.Type",
        "UpdateRequires": "Replacement"
    },
    "events.eventbuspolicy.condition.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.Value",
        "UpdateRequires": "Replacement"
    },
    "events.rule.awsvpcconfiguration.AssignPublicIp": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.awsvpcconfiguration.AssignPublicIp",
        "UpdateRequires": "Replacement"
    },
    "events.rule.awsvpcconfiguration.SecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "events.rule.awsvpcconfiguration.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "events.rule.awsvpcconfiguration.Subnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "events.rule.awsvpcconfiguration.Subnets",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batcharrayproperties.Size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.batcharrayproperties.Size",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchparameters.ArrayProperties": {
        "Required": "No",
        "Type": "BatchArrayProperties",
        "UniqueKey": "events.rule.batchparameters.ArrayProperties",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchparameters.JobDefinition": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.batchparameters.JobDefinition",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchparameters.JobName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.batchparameters.JobName",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchparameters.RetryStrategy": {
        "Required": "No",
        "Type": "BatchRetryStrategy",
        "UniqueKey": "events.rule.batchparameters.RetryStrategy",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchretrystrategy.Attempts": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.batchretrystrategy.Attempts",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.Group": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.ecsparameters.Group",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.LaunchType": {
        "Required": "No",
        "SampleValue": "TODO-LaunchType",
        "UniqueKey": "events.rule.ecsparameters.LaunchType",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.NetworkConfiguration": {
        "Required": "No",
        "Type": "NetworkConfiguration",
        "UniqueKey": "events.rule.ecsparameters.NetworkConfiguration",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.PlatformVersion": {
        "Required": "No",
        "SampleValue": "TODO-PlatformVersion",
        "UniqueKey": "events.rule.ecsparameters.PlatformVersion",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.TaskCount": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.ecsparameters.TaskCount",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.TaskDefinitionArn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "Yes",
        "SampleValue": "TODO-events.rule.ecsparameters.TaskDefinitionArn",
        "Type": "String",
        "UniqueKey": "events.rule.ecsparameters.TaskDefinitionArn",
        "UpdateRequires": "Replacement"
    },
    "events.rule.httpparameters.HeaderParameters": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "events.rule.httpparameters.HeaderParameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.httpparameters.PathParameterValues": {
        "Required": "No",
        "SampleValue": "TODO-PathParameterValues",
        "UniqueKey": "events.rule.httpparameters.PathParameterValues",
        "UpdateRequires": "Replacement"
    },
    "events.rule.httpparameters.QueryStringParameters": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "events.rule.httpparameters.QueryStringParameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.inputtransformer.InputPathsMap": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "events.rule.inputtransformer.InputPathsMap",
        "UpdateRequires": "Replacement"
    },
    "events.rule.inputtransformer.InputTemplate": {
        "Maximum": "8192",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "events.rule.inputtransformer.InputTemplate",
        "UpdateRequires": "Replacement"
    },
    "events.rule.kinesisparameters.PartitionKeyPath": {
        "Maximum": "256",
        "Required": "Yes",
        "UniqueKey": "events.rule.kinesisparameters.PartitionKeyPath",
        "UpdateRequires": "Replacement"
    },
    "events.rule.networkconfiguration.AwsVpcConfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "events.rule.networkconfiguration.AwsVpcConfiguration",
        "UpdateRequires": "Replacement"
    },
    "events.rule.runcommandparameters.RunCommandTargets": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [RunCommandTarget",
        "UniqueKey": "events.rule.runcommandparameters.RunCommandTargets",
        "UpdateRequires": "Replacement"
    },
    "events.rule.runcommandtarget.Key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
        "Required": "Yes",
        "UniqueKey": "events.rule.runcommandtarget.Key",
        "UpdateRequires": "Replacement"
    },
    "events.rule.runcommandtarget.Values": {
        "Maximum": "50",
        "Required": "Yes",
        "UniqueKey": "events.rule.runcommandtarget.Values",
        "UpdateRequires": "Replacement"
    },
    "events.rule.sqsparameters.MessageGroupId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.sqsparameters.MessageGroupId",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.Arn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "Yes",
        "SampleValue": "TODO-events.rule.target.Arn",
        "Type": "String",
        "UniqueKey": "events.rule.target.Arn",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.BatchParameters": {
        "Required": "No",
        "SampleValue": "TODO-BatchParameters",
        "UniqueKey": "events.rule.target.BatchParameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.EcsParameters": {
        "Required": "No",
        "SampleValue": "TODO-EcsParameters",
        "UniqueKey": "events.rule.target.EcsParameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.HttpParameters": {
        "Required": "No",
        "Type": "HttpParameters",
        "UniqueKey": "events.rule.target.HttpParameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.Id": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "[\\.\\-_A-Za-z0-9]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.target.Id",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.Input": {
        "Maximum": "8192",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.target.Input",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.InputPath": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.target.InputPath",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.InputTransformer": {
        "Required": "No",
        "Type": "InputTransformer",
        "UniqueKey": "events.rule.target.InputTransformer",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.KinesisParameters": {
        "Required": "No",
        "Type": "KinesisParameters",
        "UniqueKey": "events.rule.target.KinesisParameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.RoleArn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "No",
        "SampleValue": "TODO-events.rule.target.RoleArn",
        "Type": "String",
        "UniqueKey": "events.rule.target.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.RunCommandParameters": {
        "Required": "No",
        "Type": "RunCommandParameters",
        "UniqueKey": "events.rule.target.RunCommandParameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.SqsParameters": {
        "Required": "No",
        "Type": "SqsParameters",
        "UniqueKey": "events.rule.target.SqsParameters",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.discoverer.tagsentry.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.discoverer.tagsentry.Key",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.discoverer.tagsentry.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.discoverer.tagsentry.Value",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.registry.tagsentry.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.registry.tagsentry.Key",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.registry.tagsentry.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.registry.tagsentry.Value",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.schema.tagsentry.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.schema.tagsentry.Key",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.schema.tagsentry.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.schema.tagsentry.Value",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.iemap.ACCOUNT": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "fms.policy.iemap.ACCOUNT",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.iemap.ORGUNIT": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "fms.policy.iemap.ORGUNIT",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.policytag.Key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "fms.policy.policytag.Key",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.policytag.Value": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "fms.policy.policytag.Value",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.resourcetag.Key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "fms.policy.resourcetag.Key",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.resourcetag.Value": {
        "Maximum": "256",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fms.policy.resourcetag.Value",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.AutoImportPolicy": {
        "Allowed values": "NEW | NEW_CHANGED | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.AutoImportPolicy",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.AutomaticBackupRetentionDays": {
        "Maximum": "90",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.AutomaticBackupRetentionDays",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.CopyTagsToBackups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.CopyTagsToBackups",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.DailyAutomaticBackupStartTime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.DailyAutomaticBackupStartTime",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.DeploymentType": {
        "Allowed values": "PERSISTENT_1 | SCRATCH_1 | SCRATCH_2",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.DeploymentType",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.DriveCacheType": {
        "Allowed values": "NONE | READ",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.DriveCacheType",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.ExportPath": {
        "Maximum": "900",
        "Minimum": "3",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.ExportPath",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.ImportPath": {
        "Maximum": "900",
        "Minimum": "3",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.ImportPath",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.ImportedFileChunkSize": {
        "Maximum": "512000",
        "Minimum": "1",
        "Pattern": "^[1,512000]}$",
        "Required": "No",
        "SampleValue": "1...512000",
        "Type": "Integer",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.ImportedFileChunkSize",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.PerUnitStorageThroughput": {
        "Maximum": "200",
        "Minimum": "12",
        "Pattern": "^[12,200]}$",
        "Required": "Conditional",
        "SampleValue": "12...200",
        "Type": "Integer",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.PerUnitStorageThroughput",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.WeeklyMaintenanceStartTime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.WeeklyMaintenanceStartTime",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.ActiveDirectoryId": {
        "Maximum": "12",
        "Minimum": "12",
        "Pattern": "^d-[0-9a-f]{10}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.ActiveDirectoryId",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.AutomaticBackupRetentionDays": {
        "Maximum": "90",
        "Minimum": "0",
        "Pattern": "^[0,90]}$",
        "Required": "No",
        "SampleValue": "0...90",
        "Type": "Integer",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.AutomaticBackupRetentionDays",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.CopyTagsToBackups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.CopyTagsToBackups",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.DailyAutomaticBackupStartTime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.DailyAutomaticBackupStartTime",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.DeploymentType": {
        "Allowed values": "MULTI_AZ_1 | SINGLE_AZ_1 | SINGLE_AZ_2",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.DeploymentType",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.PreferredSubnetId": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.PreferredSubnetId",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.SelfManagedActiveDirectoryConfiguration": {
        "Required": "No",
        "Type": "SelfManagedActiveDirectoryConfiguration",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.SelfManagedActiveDirectoryConfiguration",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.ThroughputCapacity": {
        "Maximum": "2048",
        "Minimum": "8",
        "Required": "No",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.ThroughputCapacity",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.WeeklyMaintenanceStartTime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.WeeklyMaintenanceStartTime",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.DnsIps": {
        "Maximum": "2",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.DnsIps",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.DomainName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,255}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.DomainName",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.FileSystemAdministratorsGroup": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,256}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.FileSystemAdministratorsGroup",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.OrganizationalUnitDistinguishedName": {
        "Maximum": "2000",
        "Minimum": "1",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,2000}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.OrganizationalUnitDistinguishedName",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.Password": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.Password",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.UserName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,256}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.UserName",
        "UpdateRequires": "Replacement"
    },
    "gamelift.alias.routingstrategy.FleetId": {
        "Pattern": "^fleet-\\S+",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "gamelift.alias.routingstrategy.FleetId",
        "UpdateRequires": "Replacement"
    },
    "gamelift.alias.routingstrategy.Message": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "gamelift.alias.routingstrategy.Message",
        "UpdateRequires": "Replacement"
    },
    "gamelift.alias.routingstrategy.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "gamelift.alias.routingstrategy.Type",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.Bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.Bucket",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.Key": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.Key",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.ObjectVersion": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.RoleArn": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.certificateconfiguration.CertificateType": {
        "Allowed values": "DISABLED | GENERATED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.certificateconfiguration.CertificateType",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.ec2inboundpermission.FromPort": {
        "Maximum": "60000",
        "Minimum": "1",
        "Pattern": "^[1,60000]}$",
        "Required": "Yes",
        "SampleValue": "1...60000",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.FromPort",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.ec2inboundpermission.IpRange": {
        "Pattern": "[^\\s]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.IpRange",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.ec2inboundpermission.Protocol": {
        "Allowed values": "TCP | UDP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.Protocol",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.ec2inboundpermission.ToPort": {
        "Maximum": "60000",
        "Minimum": "1",
        "Pattern": "^[1,60000]}$",
        "Required": "Yes",
        "SampleValue": "1...60000",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.ToPort",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.resourcecreationlimitpolicy.NewGameSessionsPerCreator": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.resourcecreationlimitpolicy.NewGameSessionsPerCreator",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.resourcecreationlimitpolicy.PolicyPeriodInMinutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.resourcecreationlimitpolicy.PolicyPeriodInMinutes",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.runtimeconfiguration.GameSessionActivationTimeoutSeconds": {
        "Maximum": "600",
        "Minimum": "1",
        "Pattern": "^[1,600]}$",
        "Required": "No",
        "SampleValue": "1...600",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.GameSessionActivationTimeoutSeconds",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.runtimeconfiguration.MaxConcurrentGameSessionActivations": {
        "Maximum": "2147483647",
        "Minimum": "1",
        "Pattern": "^[1,2147483647]}$",
        "Required": "No",
        "SampleValue": "1...2147483647",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.MaxConcurrentGameSessionActivations",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.runtimeconfiguration.ServerProcesses": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [ServerProcess",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.ServerProcesses",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.serverprocess.ConcurrentExecutions": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.serverprocess.ConcurrentExecutions",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.serverprocess.LaunchPath": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-gamelift.fleet.serverprocess.LaunchPath",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.serverprocess.LaunchPath",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.serverprocess.Parameters": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-gamelift.fleet.serverprocess.Parameters",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.serverprocess.Parameters",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gamesessionqueue.destination.DestinationArn": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9:/-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.gamesessionqueue.destination.DestinationArn",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gamesessionqueue.playerlatencypolicy.MaximumIndividualPlayerLatencyMilliseconds": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.gamesessionqueue.playerlatencypolicy.MaximumIndividualPlayerLatencyMilliseconds",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gamesessionqueue.playerlatencypolicy.PolicyDurationSeconds": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.gamesessionqueue.playerlatencypolicy.PolicyDurationSeconds",
        "UpdateRequires": "Replacement"
    },
    "gamelift.matchmakingconfiguration.gameproperty.Key": {
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.matchmakingconfiguration.gameproperty.Key",
        "UpdateRequires": "Replacement"
    },
    "gamelift.matchmakingconfiguration.gameproperty.Value": {
        "Maximum": "96",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.matchmakingconfiguration.gameproperty.Value",
        "UpdateRequires": "Replacement"
    },
    "gamelift.script.s3location.Bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.Bucket",
        "UpdateRequires": "Replacement"
    },
    "gamelift.script.s3location.Key": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.Key",
        "UpdateRequires": "Replacement"
    },
    "gamelift.script.s3location.ObjectVersion": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "gamelift.script.s3location.RoleArn": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.endpointgroup.endpointconfiguration.ClientIPPreservationEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "globalaccelerator.endpointgroup.endpointconfiguration.ClientIPPreservationEnabled",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.endpointgroup.endpointconfiguration.EndpointId": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "globalaccelerator.endpointgroup.endpointconfiguration.EndpointId",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.endpointgroup.endpointconfiguration.Weight": {
        "Maximum": "255",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "globalaccelerator.endpointgroup.endpointconfiguration.Weight",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.listener.portrange.FromPort": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "globalaccelerator.listener.portrange.FromPort",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.listener.portrange.ToPort": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "globalaccelerator.listener.portrange.ToPort",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.AllowSingleColumn": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.classifier.csvclassifier.AllowSingleColumn",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.ContainsHeader": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.ContainsHeader",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.Delimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.Delimiter",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.DisableValueTrimming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.classifier.csvclassifier.DisableValueTrimming",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.Header": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.classifier.csvclassifier.Header",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.QuoteSymbol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.QuoteSymbol",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.grokclassifier.Classification": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.Classification",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.grokclassifier.CustomPatterns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.CustomPatterns",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.grokclassifier.GrokPattern": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.GrokPattern",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.grokclassifier.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.jsonclassifier.JsonPath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.jsonclassifier.JsonPath",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.jsonclassifier.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.jsonclassifier.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.xmlclassifier.Classification": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.Classification",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.xmlclassifier.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.xmlclassifier.RowTag": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.RowTag",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.ConnectionProperties": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "glue.connection.connectioninput.ConnectionProperties",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.ConnectionType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.ConnectionType",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.Description",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.MatchCriteria": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.connection.connectioninput.MatchCriteria",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.PhysicalConnectionRequirements": {
        "Required": "No",
        "Type": "PhysicalConnectionRequirements",
        "UniqueKey": "glue.connection.connectioninput.PhysicalConnectionRequirements",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.physicalconnectionrequirements.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.physicalconnectionrequirements.SecurityGroupIdList": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.SecurityGroupIdList",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.physicalconnectionrequirements.SubnetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.catalogtarget.DatabaseName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.catalogtarget.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.catalogtarget.Tables": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.catalogtarget.Tables",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.dynamodbtarget.Path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.dynamodbtarget.Path",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.jdbctarget.ConnectionName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.jdbctarget.ConnectionName",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.jdbctarget.Exclusions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.jdbctarget.Exclusions",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.jdbctarget.Path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.jdbctarget.Path",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.s3target.Exclusions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.s3target.Exclusions",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.s3target.Path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.s3target.Path",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.schedule.ScheduleExpression": {
        "Required": "No",
        "SampleValue": "TODO-ScheduleExpression",
        "UniqueKey": "glue.crawler.schedule.ScheduleExpression",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.schemachangepolicy.DeleteBehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.schemachangepolicy.DeleteBehavior",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.schemachangepolicy.UpdateBehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.schemachangepolicy.UpdateBehavior",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.targets.CatalogTargets": {
        "Required": "No",
        "Type": "List of [CatalogTarget",
        "UniqueKey": "glue.crawler.targets.CatalogTargets",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.targets.DynamoDBTargets": {
        "Required": "No",
        "Type": "List of [DynamoDBTarget",
        "UniqueKey": "glue.crawler.targets.DynamoDBTargets",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.targets.JdbcTargets": {
        "Required": "No",
        "Type": "List of [JdbcTarget",
        "UniqueKey": "glue.crawler.targets.JdbcTargets",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.targets.S3Targets": {
        "Required": "No",
        "Type": "List of [S3Target",
        "UniqueKey": "glue.crawler.targets.S3Targets",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.Description",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.LocationUri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.LocationUri",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.database.databaseinput.Parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.connectionpasswordencryption.KmsKeyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.connectionpasswordencryption.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.connectionpasswordencryption.ReturnConnectionPasswordEncrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.datacatalogencryptionsettings.connectionpasswordencryption.ReturnConnectionPasswordEncrypted",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.ConnectionPasswordEncryption": {
        "Required": "No",
        "Type": "ConnectionPasswordEncryption",
        "UniqueKey": "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.ConnectionPasswordEncryption",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.EncryptionAtRest": {
        "Required": "No",
        "Type": "EncryptionAtRest",
        "UniqueKey": "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.EncryptionAtRest",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.encryptionatrest.CatalogEncryptionMode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.encryptionatrest.CatalogEncryptionMode",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.encryptionatrest.SseAwsKmsKeyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.encryptionatrest.SseAwsKmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "glue.job.connectionslist.Connections": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.job.connectionslist.Connections",
        "UpdateRequires": "Replacement"
    },
    "glue.job.executionproperty.MaxConcurrentRuns": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.job.executionproperty.MaxConcurrentRuns",
        "UpdateRequires": "Replacement"
    },
    "glue.job.jobcommand.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.job.jobcommand.PythonVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.PythonVersion",
        "UpdateRequires": "Replacement"
    },
    "glue.job.jobcommand.ScriptLocation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.ScriptLocation",
        "UpdateRequires": "Replacement"
    },
    "glue.job.notificationproperty.NotifyDelayAfter": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.job.notificationproperty.NotifyDelayAfter",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.GlueTables": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "glue.mltransform.inputrecordtables.GlueTables",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables.CatalogId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.CatalogId",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables.ConnectionName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.ConnectionName",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables.DatabaseName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables.TableName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.TableName",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.FindMatchesParameters": {
        "Required": "No",
        "Type": "FindMatchesParameters",
        "UniqueKey": "glue.mltransform.transformparameters.FindMatchesParameters",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.TransformType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformparameters.TransformType",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.AccuracyCostTradeoff": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.AccuracyCostTradeoff",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.EnforceProvidedLabels": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.EnforceProvidedLabels",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.PrecisionRecallTradeoff": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.PrecisionRecallTradeoff",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.PrimaryKeyColumnName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.PrimaryKeyColumnName",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.column.Comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.column.Comment",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.column.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.partition.column.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.column.Type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.column.Type",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.order.Column": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.partition.order.Column",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.order.SortOrder": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.partition.order.SortOrder",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.partitioninput.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.partitioninput.Parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.partitioninput.StorageDescriptor": {
        "Required": "No",
        "Type": "StorageDescriptor",
        "UniqueKey": "glue.partition.partitioninput.StorageDescriptor",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.partitioninput.Values": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "glue.partition.partitioninput.Values",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.serdeinfo.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.serdeinfo.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.serdeinfo.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.serdeinfo.Parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.serdeinfo.SerializationLibrary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.serdeinfo.SerializationLibrary",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.skewedinfo.SkewedColumnNames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.skewedinfo.SkewedColumnNames",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.skewedinfo.SkewedColumnValueLocationMaps": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.skewedinfo.SkewedColumnValueLocationMaps",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.skewedinfo.SkewedColumnValues": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.skewedinfo.SkewedColumnValues",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.BucketColumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.storagedescriptor.BucketColumns",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.Columns": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.partition.storagedescriptor.Columns",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.Compressed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.partition.storagedescriptor.Compressed",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.InputFormat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.InputFormat",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.Location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.Location",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.NumberOfBuckets": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "glue.partition.storagedescriptor.NumberOfBuckets",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.OutputFormat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.OutputFormat",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.storagedescriptor.Parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.SerdeInfo": {
        "Required": "No",
        "Type": "SerdeInfo",
        "UniqueKey": "glue.partition.storagedescriptor.SerdeInfo",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.SkewedInfo": {
        "Required": "No",
        "Type": "SkewedInfo",
        "UniqueKey": "glue.partition.storagedescriptor.SkewedInfo",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.SortColumns": {
        "Required": "No",
        "Type": "List of [Order",
        "UniqueKey": "glue.partition.storagedescriptor.SortColumns",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.StoredAsSubDirectories": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.partition.storagedescriptor.StoredAsSubDirectories",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.cloudwatchencryption.CloudWatchEncryptionMode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.cloudwatchencryption.CloudWatchEncryptionMode",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.cloudwatchencryption.KmsKeyArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.cloudwatchencryption.KmsKeyArn",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.encryptionconfiguration.CloudWatchEncryption": {
        "Required": "No",
        "Type": "CloudWatchEncryption",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.CloudWatchEncryption",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.encryptionconfiguration.JobBookmarksEncryption": {
        "Required": "No",
        "Type": "JobBookmarksEncryption",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.JobBookmarksEncryption",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.encryptionconfiguration.S3Encryptions": {
        "Required": "No",
        "Type": "S3Encryptions",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.S3Encryptions",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.jobbookmarksencryption.JobBookmarksEncryptionMode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.jobbookmarksencryption.JobBookmarksEncryptionMode",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.jobbookmarksencryption.KmsKeyArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.jobbookmarksencryption.KmsKeyArn",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.s3encryption.KmsKeyArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.s3encryption.KmsKeyArn",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.s3encryption.S3EncryptionMode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.s3encryption.S3EncryptionMode",
        "UpdateRequires": "Replacement"
    },
    "glue.table.column.Comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.column.Comment",
        "UpdateRequires": "Replacement"
    },
    "glue.table.column.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.table.column.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.table.column.Type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.column.Type",
        "UpdateRequires": "Replacement"
    },
    "glue.table.order.Column": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.table.order.Column",
        "UpdateRequires": "Replacement"
    },
    "glue.table.order.SortOrder": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "glue.table.order.SortOrder",
        "UpdateRequires": "Replacement"
    },
    "glue.table.serdeinfo.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.serdeinfo.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.table.serdeinfo.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.serdeinfo.Parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.table.serdeinfo.SerializationLibrary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.serdeinfo.SerializationLibrary",
        "UpdateRequires": "Replacement"
    },
    "glue.table.skewedinfo.SkewedColumnNames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.skewedinfo.SkewedColumnNames",
        "UpdateRequires": "Replacement"
    },
    "glue.table.skewedinfo.SkewedColumnValueLocationMaps": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.skewedinfo.SkewedColumnValueLocationMaps",
        "UpdateRequires": "Replacement"
    },
    "glue.table.skewedinfo.SkewedColumnValues": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.skewedinfo.SkewedColumnValues",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.BucketColumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.storagedescriptor.BucketColumns",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.Columns": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.table.storagedescriptor.Columns",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.Compressed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.table.storagedescriptor.Compressed",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.InputFormat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.InputFormat",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.Location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.Location",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.NumberOfBuckets": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.table.storagedescriptor.NumberOfBuckets",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.OutputFormat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.OutputFormat",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.storagedescriptor.Parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.SerdeInfo": {
        "Required": "No",
        "Type": "SerdeInfo",
        "UniqueKey": "glue.table.storagedescriptor.SerdeInfo",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.SkewedInfo": {
        "Required": "No",
        "Type": "SkewedInfo",
        "UniqueKey": "glue.table.storagedescriptor.SkewedInfo",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.SortColumns": {
        "Required": "No",
        "Type": "List of [Order",
        "UniqueKey": "glue.table.storagedescriptor.SortColumns",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.StoredAsSubDirectories": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.table.storagedescriptor.StoredAsSubDirectories",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.Description",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.Name",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.Owner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.Owner",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.tableinput.Parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.PartitionKeys": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.table.tableinput.PartitionKeys",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.Retention": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.table.tableinput.Retention",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.StorageDescriptor": {
        "Required": "No",
        "Type": "StorageDescriptor",
        "UniqueKey": "glue.table.tableinput.StorageDescriptor",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.TableType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.TableType",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.ViewExpandedText": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.ViewExpandedText",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.ViewOriginalText": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.ViewOriginalText",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.Arguments": {
        "Required": "No",
        "SampleValue": "TODO-Arguments",
        "UniqueKey": "glue.trigger.action.Arguments",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.CrawlerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.CrawlerName",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.JobName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.JobName",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.NotificationProperty": {
        "Required": "No",
        "Type": "NotificationProperty",
        "UniqueKey": "glue.trigger.action.NotificationProperty",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.SecurityConfiguration": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.SecurityConfiguration",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.Timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.trigger.action.Timeout",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.CrawlState": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.CrawlState",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.CrawlerName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.CrawlerName",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.JobName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.JobName",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.LogicalOperator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.LogicalOperator",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.State": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.State",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.notificationproperty.NotifyDelayAfter": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.trigger.notificationproperty.NotifyDelayAfter",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.predicate.Conditions": {
        "Required": "No",
        "Type": "List of [Condition",
        "UniqueKey": "glue.trigger.predicate.Conditions",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.predicate.Logical": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.predicate.Logical",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connector.ConnectorArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinition.connector.ConnectorArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connector.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinition.connector.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connector.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.connectordefinition.connector.Parameters",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connectordefinitionversion.Connectors": {
        "Required": "Yes",
        "Type": "List of [Connector",
        "UniqueKey": "greengrass.connectordefinition.connectordefinitionversion.Connectors",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.ConnectorArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.ConnectorArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.Parameters",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.CertificateArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.SyncShadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.coredefinition.core.SyncShadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.ThingArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.ThingArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.coredefinitionversion.Cores": {
        "Required": "Yes",
        "Type": "List of [Core",
        "UniqueKey": "greengrass.coredefinition.coredefinitionversion.Cores",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.CertificateArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.SyncShadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.coredefinitionversion.core.SyncShadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.ThingArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.ThingArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.CertificateArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.SyncShadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.devicedefinition.device.SyncShadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.ThingArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.ThingArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.devicedefinitionversion.Devices": {
        "Required": "Yes",
        "Type": "List of [Device",
        "UniqueKey": "greengrass.devicedefinition.devicedefinitionversion.Devices",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.CertificateArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.CertificateArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.SyncShadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.devicedefinitionversion.device.SyncShadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.ThingArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.ThingArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.defaultconfig.Execution": {
        "Required": "Yes",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinition.defaultconfig.Execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.AccessSysfs": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.functiondefinition.environment.AccessSysfs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.Execution": {
        "Required": "No",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinition.environment.Execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.ResourceAccessPolicies": {
        "Required": "No",
        "Type": "List of [ResourceAccessPolicy",
        "UniqueKey": "greengrass.functiondefinition.environment.ResourceAccessPolicies",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.Variables": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.functiondefinition.environment.Variables",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.execution.IsolationMode": {
        "Required": "No",
        "SampleValue": "TODO-IsolationMode",
        "UniqueKey": "greengrass.functiondefinition.execution.IsolationMode",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.execution.RunAs": {
        "Required": "No",
        "SampleValue": "TODO-RunAs",
        "UniqueKey": "greengrass.functiondefinition.execution.RunAs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.FunctionArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.function.FunctionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.FunctionConfiguration": {
        "Required": "Yes",
        "Type": "FunctionConfiguration",
        "UniqueKey": "greengrass.functiondefinition.function.FunctionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.function.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.EncodingType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.EncodingType",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.Environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.Environment",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.ExecArgs": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.ExecArgs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.Executable": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.Executable",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.MemorySize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.MemorySize",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.Pinned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.Pinned",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.Timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.Timeout",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functiondefinitionversion.DefaultConfig": {
        "Required": "No",
        "Type": "DefaultConfig",
        "UniqueKey": "greengrass.functiondefinition.functiondefinitionversion.DefaultConfig",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functiondefinitionversion.Functions": {
        "Required": "Yes",
        "Type": "List of [Function",
        "UniqueKey": "greengrass.functiondefinition.functiondefinitionversion.Functions",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.resourceaccesspolicy.Permission": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.resourceaccesspolicy.Permission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.resourceaccesspolicy.ResourceId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.resourceaccesspolicy.ResourceId",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.runas.Gid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.runas.Gid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.runas.Uid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.runas.Uid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.defaultconfig.Execution": {
        "Required": "Yes",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinitionversion.defaultconfig.Execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.AccessSysfs": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.AccessSysfs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.Execution": {
        "Required": "No",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.Execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.ResourceAccessPolicies": {
        "Required": "No",
        "Type": "List of [ResourceAccessPolicy",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.ResourceAccessPolicies",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.Variables": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.Variables",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.execution.IsolationMode": {
        "Required": "No",
        "SampleValue": "TODO-IsolationMode",
        "UniqueKey": "greengrass.functiondefinitionversion.execution.IsolationMode",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.execution.RunAs": {
        "Required": "No",
        "SampleValue": "TODO-RunAs",
        "UniqueKey": "greengrass.functiondefinitionversion.execution.RunAs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.FunctionArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.function.FunctionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.FunctionConfiguration": {
        "Required": "Yes",
        "Type": "FunctionConfiguration",
        "UniqueKey": "greengrass.functiondefinitionversion.function.FunctionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.function.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.EncodingType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.EncodingType",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.Environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.Environment",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.ExecArgs": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.ExecArgs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.Executable": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.Executable",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.MemorySize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.MemorySize",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.Pinned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.Pinned",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.Timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.Timeout",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.resourceaccesspolicy.Permission": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.resourceaccesspolicy.Permission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.resourceaccesspolicy.ResourceId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.resourceaccesspolicy.ResourceId",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.runas.Gid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.runas.Gid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.runas.Uid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.runas.Uid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.ConnectorDefinitionVersionArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.ConnectorDefinitionVersionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.CoreDefinitionVersionArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.CoreDefinitionVersionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.DeviceDefinitionVersionArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.DeviceDefinitionVersionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.FunctionDefinitionVersionArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.FunctionDefinitionVersionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.LoggerDefinitionVersionArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.LoggerDefinitionVersionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.ResourceDefinitionVersionArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.ResourceDefinitionVersionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.SubscriptionDefinitionVersionArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.SubscriptionDefinitionVersionArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.Component": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.Component",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.Level": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.Level",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.Space": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.loggerdefinition.logger.Space",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.Type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.Type",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.loggerdefinitionversion.Loggers": {
        "Required": "Yes",
        "Type": "List of [Logger",
        "UniqueKey": "greengrass.loggerdefinition.loggerdefinitionversion.Loggers",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.Component": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.Component",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.Level": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.Level",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.Space": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.Space",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.Type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.Type",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.groupownersetting.AutoAddGroupOwner": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.resourcedefinition.groupownersetting.AutoAddGroupOwner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.groupownersetting.GroupOwner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.groupownersetting.GroupOwner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localdeviceresourcedata.GroupOwnerSetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.localdeviceresourcedata.GroupOwnerSetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localdeviceresourcedata.SourcePath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localdeviceresourcedata.SourcePath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.DestinationPath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.DestinationPath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.GroupOwnerSetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.GroupOwnerSetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.SourcePath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.SourcePath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.LocalDeviceResourceData": {
        "Required": "No",
        "Type": "LocalDeviceResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.LocalDeviceResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.LocalVolumeResourceData": {
        "Required": "No",
        "Type": "LocalVolumeResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.LocalVolumeResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.S3MachineLearningModelResourceData": {
        "Required": "No",
        "Type": "S3MachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.S3MachineLearningModelResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.SageMakerMachineLearningModelResourceData": {
        "Required": "No",
        "Type": "SageMakerMachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.SageMakerMachineLearningModelResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.SecretsManagerSecretResourceData": {
        "Required": "No",
        "Type": "SecretsManagerSecretResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.SecretsManagerSecretResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedefinitionversion.Resources": {
        "Required": "Yes",
        "Type": "List of [ResourceInstance",
        "UniqueKey": "greengrass.resourcedefinition.resourcedefinitionversion.Resources",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedownloadownersetting.GroupOwner": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourcedownloadownersetting.GroupOwner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedownloadownersetting.GroupPermission": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourcedownloadownersetting.GroupPermission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.Name",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.ResourceDataContainer": {
        "Required": "Yes",
        "Type": "ResourceDataContainer",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.ResourceDataContainer",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.DestinationPath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.DestinationPath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.OwnerSetting": {
        "Required": "No",
        "SampleValue": "TODO-OwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.OwnerSetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.S3Uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.S3Uri",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.DestinationPath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.DestinationPath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.OwnerSetting": {
        "Required": "No",
        "SampleValue": "TODO-OwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.OwnerSetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.SageMakerJobArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.SageMakerJobArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.secretsmanagersecretresourcedata.ARN": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.secretsmanagersecretresourcedata.ARN",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.secretsmanagersecretresourcedata.AdditionalStagingLabelsToDownload": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "greengrass.resourcedefinition.secretsmanagersecretresourcedata.AdditionalStagingLabelsToDownload",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.groupownersetting.AutoAddGroupOwner": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.resourcedefinitionversion.groupownersetting.AutoAddGroupOwner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.groupownersetting.GroupOwner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.groupownersetting.GroupOwner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localdeviceresourcedata.GroupOwnerSetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.localdeviceresourcedata.GroupOwnerSetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localdeviceresourcedata.SourcePath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localdeviceresourcedata.SourcePath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.DestinationPath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.DestinationPath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.GroupOwnerSetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.GroupOwnerSetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.SourcePath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.SourcePath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.LocalDeviceResourceData": {
        "Required": "No",
        "Type": "LocalDeviceResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.LocalDeviceResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.LocalVolumeResourceData": {
        "Required": "No",
        "Type": "LocalVolumeResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.LocalVolumeResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.S3MachineLearningModelResourceData": {
        "Required": "No",
        "Type": "S3MachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.S3MachineLearningModelResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.SageMakerMachineLearningModelResourceData": {
        "Required": "No",
        "Type": "SageMakerMachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.SageMakerMachineLearningModelResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.SecretsManagerSecretResourceData": {
        "Required": "No",
        "Type": "SecretsManagerSecretResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.SecretsManagerSecretResourceData",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedownloadownersetting.GroupOwner": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedownloadownersetting.GroupOwner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedownloadownersetting.GroupPermission": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedownloadownersetting.GroupPermission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.Name",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.ResourceDataContainer": {
        "Required": "Yes",
        "Type": "ResourceDataContainer",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.ResourceDataContainer",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.DestinationPath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.DestinationPath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.OwnerSetting": {
        "Required": "No",
        "SampleValue": "TODO-OwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.OwnerSetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.S3Uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.S3Uri",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.DestinationPath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.DestinationPath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.OwnerSetting": {
        "Required": "No",
        "SampleValue": "TODO-OwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.OwnerSetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.SageMakerJobArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.SageMakerJobArn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.ARN": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.ARN",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.AdditionalStagingLabelsToDownload": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.AdditionalStagingLabelsToDownload",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.Source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.Source",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.Subject": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.Subject",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.Target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.Target",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscriptiondefinitionversion.Subscriptions": {
        "Required": "Yes",
        "Type": "List of [Subscription",
        "UniqueKey": "greengrass.subscriptiondefinition.subscriptiondefinitionversion.Subscriptions",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.Id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.Source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.Source",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.Subject": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.Subject",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.Target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.Target",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennadownlinkconfig.SpectrumConfig": {
        "Required": "Yes",
        "Type": "SpectrumConfig",
        "UniqueKey": "groundstation.config.antennadownlinkconfig.SpectrumConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennadownlinkdemoddecodeconfig.DecodeConfig": {
        "Required": "Yes",
        "Type": "DecodeConfig",
        "UniqueKey": "groundstation.config.antennadownlinkdemoddecodeconfig.DecodeConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennadownlinkdemoddecodeconfig.DemodulationConfig": {
        "Required": "Yes",
        "Type": "DemodulationConfig",
        "UniqueKey": "groundstation.config.antennadownlinkdemoddecodeconfig.DemodulationConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennadownlinkdemoddecodeconfig.SpectrumConfig": {
        "Required": "Yes",
        "Type": "SpectrumConfig",
        "UniqueKey": "groundstation.config.antennadownlinkdemoddecodeconfig.SpectrumConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennauplinkconfig.SpectrumConfig": {
        "Required": "Yes",
        "Type": "SpectrumConfig",
        "UniqueKey": "groundstation.config.antennauplinkconfig.SpectrumConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennauplinkconfig.TargetEirp": {
        "Required": "Yes",
        "Type": "Eirp",
        "UniqueKey": "groundstation.config.antennauplinkconfig.TargetEirp",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.bandwidth.Units": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.bandwidth.Units",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.bandwidth.Value": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "groundstation.config.bandwidth.Value",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.AntennaDownlinkConfig": {
        "Required": "No",
        "Type": "AntennaDownlinkConfig",
        "UniqueKey": "groundstation.config.configdata.AntennaDownlinkConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.AntennaDownlinkDemodDecodeConfig": {
        "Required": "No",
        "Type": "AntennaDownlinkDemodDecodeConfig",
        "UniqueKey": "groundstation.config.configdata.AntennaDownlinkDemodDecodeConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.AntennaUplinkConfig": {
        "Required": "No",
        "Type": "AntennaUplinkConfig",
        "UniqueKey": "groundstation.config.configdata.AntennaUplinkConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.DataflowEndpointConfig": {
        "Required": "No",
        "Type": "DataflowEndpointConfig",
        "UniqueKey": "groundstation.config.configdata.DataflowEndpointConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.TrackingConfig": {
        "Required": "No",
        "Type": "TrackingConfig",
        "UniqueKey": "groundstation.config.configdata.TrackingConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.UplinkEchoConfig": {
        "Required": "No",
        "Type": "UplinkEchoConfig",
        "UniqueKey": "groundstation.config.configdata.UplinkEchoConfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.dataflowendpointconfig.DataflowEndpointName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.dataflowendpointconfig.DataflowEndpointName",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.dataflowendpointconfig.DataflowEndpointRegion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.config.dataflowendpointconfig.DataflowEndpointRegion",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.decodeconfig.UnvalidatedJSON": {
        "Required": "Yes",
        "Type": "JSON",
        "UniqueKey": "groundstation.config.decodeconfig.UnvalidatedJSON",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.demodulationconfig.UnvalidatedJSON": {
        "Required": "Yes",
        "Type": "JSON",
        "UniqueKey": "groundstation.config.demodulationconfig.UnvalidatedJSON",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.eirp.Units": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.eirp.Units",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.eirp.Value": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "groundstation.config.eirp.Value",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.frequency.Units": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.frequency.Units",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.frequency.Value": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "groundstation.config.frequency.Value",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.spectrumconfig.Bandwidth": {
        "Required": "Yes",
        "Type": "Bandwidth",
        "UniqueKey": "groundstation.config.spectrumconfig.Bandwidth",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.spectrumconfig.CenterFrequency": {
        "Required": "Yes",
        "Type": "Frequency",
        "UniqueKey": "groundstation.config.spectrumconfig.CenterFrequency",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.spectrumconfig.Polarization": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.config.spectrumconfig.Polarization",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.trackingconfig.AutoTrack": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.trackingconfig.AutoTrack",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.uplinkechoconfig.AntennaUplinkConfigArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.uplinkechoconfig.AntennaUplinkConfigArn",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.uplinkechoconfig.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "groundstation.config.uplinkechoconfig.Enabled",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.dataflowendpoint.Address": {
        "Required": "No",
        "Type": "SocketAddress",
        "UniqueKey": "groundstation.dataflowendpointgroup.dataflowendpoint.Address",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.dataflowendpoint.Mtu": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "groundstation.dataflowendpointgroup.dataflowendpoint.Mtu",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.dataflowendpoint.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.dataflowendpointgroup.dataflowendpoint.Name",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.endpointdetails.DataflowEndpoint": {
        "Required": "No",
        "Type": "DataflowEndpoint",
        "UniqueKey": "groundstation.dataflowendpointgroup.endpointdetails.DataflowEndpoint",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.endpointdetails.SecurityDetails": {
        "Required": "No",
        "Type": "SecurityDetails",
        "UniqueKey": "groundstation.dataflowendpointgroup.endpointdetails.SecurityDetails",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.securitydetails.RoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.dataflowendpointgroup.securitydetails.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.securitydetails.SecurityGroupIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "groundstation.dataflowendpointgroup.securitydetails.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.securitydetails.SubnetIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "groundstation.dataflowendpointgroup.securitydetails.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.socketaddress.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.dataflowendpointgroup.socketaddress.Name",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.socketaddress.Port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "groundstation.dataflowendpointgroup.socketaddress.Port",
        "UpdateRequires": "Replacement"
    },
    "groundstation.missionprofile.dataflowedge.Destination": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.missionprofile.dataflowedge.Destination",
        "UpdateRequires": "Replacement"
    },
    "groundstation.missionprofile.dataflowedge.Source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.missionprofile.dataflowedge.Source",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.Eq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "guardduty.filter.condition.Eq",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.Gte": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.Gte",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.Lt": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.Lt",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.Lte": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.Lte",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.Neq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "guardduty.filter.condition.Neq",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.findingcriteria.Criterion": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "guardduty.filter.findingcriteria.Criterion",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.findingcriteria.ItemType": {
        "Required": "No",
        "Type": "Condition",
        "UniqueKey": "guardduty.filter.findingcriteria.ItemType",
        "UpdateRequires": "Replacement"
    },
    "iam.accesskey.Serial": {
        "Required": "No",
        "SampleValue": "TODO-Serial",
        "UniqueKey": "iam.accesskey.Serial",
        "UpdateRequires": "Replacement"
    },
    "iam.accesskey.Status": {
        "Allowed values": "Active | Inactive",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.accesskey.Status",
        "UpdateRequires": "Replacement"
    },
    "iam.accesskey.UserName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.accesskey.UserName",
        "UpdateRequires": "Replacement"
    },
    "iam.addusertogroup.GroupName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.addusertogroup.GroupName",
        "UpdateRequires": "Replacement"
    },
    "iam.addusertogroup.Users": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "iam.addusertogroup.Users",
        "UpdateRequires": "Replacement"
    },
    "iam.group.GroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.group.GroupName",
        "UpdateRequires": "Replacement"
    },
    "iam.group.ManagedPolicyArns": {
        "Required": "No",
        "SampleValue": "TODO-ManagedPolicyArns",
        "UniqueKey": "iam.group.ManagedPolicyArns",
        "UpdateRequires": "Replacement"
    },
    "iam.group.Path": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
        "Required": "No",
        "UniqueKey": "iam.group.Path",
        "UpdateRequires": "Replacement"
    },
    "iam.group.Policies": {
        "Required": "No",
        "SampleValue": "TODO-Policies",
        "UniqueKey": "iam.group.Policies",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.1.PolicyDocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.1.PolicyDocument",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.1.PolicyName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.1.PolicyName",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.2.PolicyDocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.2.PolicyDocument",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.2.PolicyName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.2.PolicyName",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.PolicyDocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.PolicyDocument",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.PolicyName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.PolicyName",
        "UpdateRequires": "Replacement"
    },
    "iam.user.Groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iam.user.Groups",
        "UpdateRequires": "Replacement"
    },
    "iam.user.LoginProfile": {
        "Required": "No",
        "SampleValue": "TODO-LoginProfile",
        "UniqueKey": "iam.user.LoginProfile",
        "UpdateRequires": "Replacement"
    },
    "iam.user.ManagedPolicyArns": {
        "Required": "No",
        "SampleValue": "TODO-ManagedPolicyArns",
        "UniqueKey": "iam.user.ManagedPolicyArns",
        "UpdateRequires": "Replacement"
    },
    "iam.user.Path": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
        "Required": "No",
        "UniqueKey": "iam.user.Path",
        "UpdateRequires": "Replacement"
    },
    "iam.user.PermissionsBoundary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.user.PermissionsBoundary",
        "UpdateRequires": "Replacement"
    },
    "iam.user.Policies": {
        "Required": "No",
        "SampleValue": "TODO-Policies",
        "UniqueKey": "iam.user.Policies",
        "UpdateRequires": "Replacement"
    },
    "iam.user.Tags": {
        "Maximum": "50",
        "Required": "No",
        "UniqueKey": "iam.user.Tags",
        "UpdateRequires": "Replacement"
    },
    "iam.user.UserName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.user.UserName",
        "UpdateRequires": "Replacement"
    },
    "iam.user.loginprofile.Password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.user.loginprofile.Password",
        "UpdateRequires": "Replacement"
    },
    "iam.user.loginprofile.PasswordResetRequired": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iam.user.loginprofile.PasswordResetRequired",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.distributionconfiguration.distribution.AmiDistributionConfiguration": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "imagebuilder.distributionconfiguration.distribution.AmiDistributionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.distributionconfiguration.distribution.LicenseConfigurationArns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "imagebuilder.distributionconfiguration.distribution.LicenseConfigurationArns",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.distributionconfiguration.distribution.Region": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-imagebuilder.distributionconfiguration.distribution.Region",
        "Type": "String",
        "UniqueKey": "imagebuilder.distributionconfiguration.distribution.Region",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.image.imagetestsconfiguration.ImageTestsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "imagebuilder.image.imagetestsconfiguration.ImageTestsEnabled",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.image.imagetestsconfiguration.TimeoutMinutes": {
        "Maximum": "1440",
        "Minimum": "60",
        "Pattern": "^[60,1440]}$",
        "Required": "No",
        "SampleValue": "60...1440",
        "Type": "Integer",
        "UniqueKey": "imagebuilder.image.imagetestsconfiguration.TimeoutMinutes",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagepipeline.imagetestsconfiguration.ImageTestsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "imagebuilder.imagepipeline.imagetestsconfiguration.ImageTestsEnabled",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagepipeline.imagetestsconfiguration.TimeoutMinutes": {
        "Maximum": "1440",
        "Minimum": "60",
        "Pattern": "^[60,1440]}$",
        "Required": "No",
        "SampleValue": "60...1440",
        "Type": "Integer",
        "UniqueKey": "imagebuilder.imagepipeline.imagetestsconfiguration.TimeoutMinutes",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagepipeline.schedule.PipelineExecutionStartCondition": {
        "Required": "No",
        "SampleValue": "TODO-PipelineExecutionStartCondition",
        "UniqueKey": "imagebuilder.imagepipeline.schedule.PipelineExecutionStartCondition",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagepipeline.schedule.ScheduleExpression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagepipeline.schedule.ScheduleExpression",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagepipeline.schedule.ScheduleExpression",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.componentconfiguration.ComponentArn": {
        "Pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:\\d{12}|aws):component/[a-z0-9-_]+/(?:(?:(\\d+|x)\\.(\\d+|x)\\.(\\d+|x))|(?:\\d+\\.\\d+\\.\\d+/\\d+))$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.componentconfiguration.ComponentArn",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.Encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.Encrypted",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.Iops": {
        "Maximum": "10000",
        "Minimum": "100",
        "Pattern": "^[100,10000]}$",
        "Required": "No",
        "SampleValue": "100...10000",
        "Type": "Integer",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.Iops",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.KmsKeyId": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.KmsKeyId",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.SnapshotId": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.SnapshotId",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.SnapshotId",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.VolumeSize": {
        "Maximum": "16000",
        "Minimum": "1",
        "Pattern": "^[1,16000]}$",
        "Required": "No",
        "SampleValue": "1...16000",
        "Type": "Integer",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.VolumeSize",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.VolumeType": {
        "Allowed values": "gp2 | io1 | sc1 | st1 | standard",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.DeviceName": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagerecipe.instanceblockdevicemapping.DeviceName",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.DeviceName",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.Ebs": {
        "Required": "No",
        "Type": "EbsInstanceBlockDeviceSpecification",
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.Ebs",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.NoDevice": {
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.NoDevice"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.NoDevice:\"\"": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.NoDevice:\"\"",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.VirtualName": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagerecipe.instanceblockdevicemapping.VirtualName",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.VirtualName",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.infrastructureconfiguration.logging.S3Logs": {
        "Required": "No",
        "Type": "S3Logs",
        "UniqueKey": "imagebuilder.infrastructureconfiguration.logging.S3Logs",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.infrastructureconfiguration.s3logs.S3BucketName": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.infrastructureconfiguration.s3logs.S3BucketName",
        "Type": "String",
        "UniqueKey": "imagebuilder.infrastructureconfiguration.s3logs.S3BucketName",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.infrastructureconfiguration.s3logs.S3KeyPrefix": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.infrastructureconfiguration.s3logs.S3KeyPrefix",
        "Type": "String",
        "UniqueKey": "imagebuilder.infrastructureconfiguration.s3logs.S3KeyPrefix",
        "UpdateRequires": "Replacement"
    },
    "iot.provisioningtemplate.provisioninghook.PayloadVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.provisioningtemplate.provisioninghook.PayloadVersion",
        "UpdateRequires": "Replacement"
    },
    "iot.provisioningtemplate.provisioninghook.TargetArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.provisioningtemplate.provisioninghook.TargetArn",
        "UpdateRequires": "Replacement"
    },
    "iot.provisioningtemplate.tags.Tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "iot.provisioningtemplate.tags.Tags",
        "UpdateRequires": "Replacement"
    },
    "iot.thing.attributepayload.Attributes": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "iot.thing.attributepayload.Attributes",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.CloudwatchAlarm": {
        "Required": "No",
        "Type": "CloudwatchAlarmAction",
        "UniqueKey": "iot.topicrule.action.CloudwatchAlarm",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.CloudwatchMetric": {
        "Required": "No",
        "Type": "CloudwatchMetricAction",
        "UniqueKey": "iot.topicrule.action.CloudwatchMetric",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.DynamoDB": {
        "Required": "No",
        "Type": "DynamoDBAction",
        "UniqueKey": "iot.topicrule.action.DynamoDB",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.DynamoDBv2": {
        "Required": "No",
        "Type": "DynamoDBv2Action",
        "UniqueKey": "iot.topicrule.action.DynamoDBv2",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.Elasticsearch": {
        "Required": "No",
        "Type": "ElasticsearchAction",
        "UniqueKey": "iot.topicrule.action.Elasticsearch",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.Firehose": {
        "Required": "No",
        "Type": "FirehoseAction",
        "UniqueKey": "iot.topicrule.action.Firehose",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.Http": {
        "Required": "No",
        "Type": "HttpAction",
        "UniqueKey": "iot.topicrule.action.Http",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.IotAnalytics": {
        "Required": "No",
        "Type": "IotAnalyticsAction",
        "UniqueKey": "iot.topicrule.action.IotAnalytics",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.IotEvents": {
        "Required": "No",
        "Type": "IotEventsAction",
        "UniqueKey": "iot.topicrule.action.IotEvents",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.IotSiteWise": {
        "Required": "No",
        "Type": "IotSiteWiseAction",
        "UniqueKey": "iot.topicrule.action.IotSiteWise",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.Kinesis": {
        "Required": "No",
        "Type": "KinesisAction",
        "UniqueKey": "iot.topicrule.action.Kinesis",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.Lambda": {
        "Required": "No",
        "Type": "LambdaAction",
        "UniqueKey": "iot.topicrule.action.Lambda",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.Republish": {
        "Required": "No",
        "Type": "RepublishAction",
        "UniqueKey": "iot.topicrule.action.Republish",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.S3": {
        "Required": "No",
        "Type": "S3Action",
        "UniqueKey": "iot.topicrule.action.S3",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.Sns": {
        "Required": "No",
        "Type": "SnsAction",
        "UniqueKey": "iot.topicrule.action.Sns",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.Sqs": {
        "Required": "No",
        "Type": "SqsAction",
        "UniqueKey": "iot.topicrule.action.Sqs",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.StepFunctions": {
        "Required": "No",
        "Type": "StepFunctionsAction",
        "UniqueKey": "iot.topicrule.action.StepFunctions",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertytimestamp.OffsetInNanos": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertytimestamp.OffsetInNanos",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertytimestamp.TimeInSeconds": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertytimestamp.TimeInSeconds",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvalue.Quality": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvalue.Quality",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvalue.Timestamp": {
        "Required": "Yes",
        "Type": "AssetPropertyTimestamp",
        "UniqueKey": "iot.topicrule.assetpropertyvalue.Timestamp",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvalue.Value": {
        "Required": "Yes",
        "Type": "AssetPropertyVariant",
        "UniqueKey": "iot.topicrule.assetpropertyvalue.Value",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvariant.BooleanValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvariant.BooleanValue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvariant.DoubleValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvariant.DoubleValue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvariant.IntegerValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvariant.IntegerValue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvariant.StringValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvariant.StringValue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchalarmaction.AlarmName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.AlarmName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchalarmaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchalarmaction.StateReason": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.StateReason",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchalarmaction.StateValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.StateValue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.MetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.MetricName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.MetricNamespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.MetricNamespace",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.MetricTimestamp": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.MetricTimestamp",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.MetricUnit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.MetricUnit",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.MetricValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.MetricValue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.HashKeyField": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.HashKeyField",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.HashKeyType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.HashKeyType",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.HashKeyValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.HashKeyValue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.PayloadField": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.PayloadField",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.RangeKeyField": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.RangeKeyField",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.RangeKeyType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.RangeKeyType",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.RangeKeyValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.RangeKeyValue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.TableName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.TableName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbv2action.PutItem": {
        "Required": "No",
        "Type": "PutItemInput",
        "UniqueKey": "iot.topicrule.dynamodbv2action.PutItem",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbv2action.RoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbv2action.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.Endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.Endpoint",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.Id",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.Index": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.Index",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.Type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.Type",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.firehoseaction.DeliveryStreamName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.DeliveryStreamName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.firehoseaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.firehoseaction.Separator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.Separator",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpaction.Auth": {
        "Required": "No",
        "Type": "HttpAuthorization",
        "UniqueKey": "iot.topicrule.httpaction.Auth",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpaction.ConfirmationUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.httpaction.ConfirmationUrl",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpaction.Headers": {
        "Required": "No",
        "Type": "List of [HttpActionHeader",
        "UniqueKey": "iot.topicrule.httpaction.Headers",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpaction.Url": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.httpaction.Url",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpactionheader.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.httpactionheader.Key",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpactionheader.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.httpactionheader.Value",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpauthorization.Sigv4": {
        "Required": "No",
        "Type": "SigV4Authorization",
        "UniqueKey": "iot.topicrule.httpauthorization.Sigv4",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.iotanalyticsaction.ChannelName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.iotanalyticsaction.ChannelName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.iotanalyticsaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.iotanalyticsaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.ioteventsaction.InputName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.ioteventsaction.InputName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.ioteventsaction.MessageId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.ioteventsaction.MessageId",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.ioteventsaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.ioteventsaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.iotsitewiseaction.PutAssetPropertyValueEntries": {
        "Required": "Yes",
        "Type": "List of [PutAssetPropertyValueEntry",
        "UniqueKey": "iot.topicrule.iotsitewiseaction.PutAssetPropertyValueEntries",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.iotsitewiseaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.iotsitewiseaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.kinesisaction.PartitionKey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.PartitionKey",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.kinesisaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.kinesisaction.StreamName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.StreamName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.lambdaaction.FunctionArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.lambdaaction.FunctionArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.AssetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.AssetId",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.EntryId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.EntryId",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.PropertyAlias": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.PropertyAlias",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.PropertyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.PropertyId",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.PropertyValues": {
        "Required": "Yes",
        "Type": "List of [AssetPropertyValue",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.PropertyValues",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putiteminput.TableName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putiteminput.TableName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.republishaction.Qos": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iot.topicrule.republishaction.Qos",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.republishaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.republishaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.republishaction.Topic": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.republishaction.Topic",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.s3action.BucketName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.BucketName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.s3action.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.Key",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.s3action.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sigv4authorization.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sigv4authorization.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sigv4authorization.ServiceName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sigv4authorization.ServiceName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sigv4authorization.SigningRegion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sigv4authorization.SigningRegion",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.snsaction.MessageFormat": {
        "Required": "No",
        "SampleValue": "TODO-MessageFormat",
        "UniqueKey": "iot.topicrule.snsaction.MessageFormat",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.snsaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.snsaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.snsaction.TargetArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.snsaction.TargetArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sqsaction.QueueUrl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sqsaction.QueueUrl",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sqsaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sqsaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sqsaction.UseBase64": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iot.topicrule.sqsaction.UseBase64",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.stepfunctionsaction.ExecutionNamePrefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.ExecutionNamePrefix",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.stepfunctionsaction.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.stepfunctionsaction.StateMachineName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.StateMachineName",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.Actions": {
        "Required": "Yes",
        "Type": "List of [Action",
        "UniqueKey": "iot.topicrule.topicrulepayload.Actions",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.AwsIotSqlVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.topicrulepayload.AwsIotSqlVersion",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.topicrulepayload.Description",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.ErrorAction": {
        "Required": "No",
        "Type": "Action",
        "UniqueKey": "iot.topicrule.topicrulepayload.ErrorAction",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.RuleDisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iot.topicrule.topicrulepayload.RuleDisabled",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.Sql": {
        "Required": "Yes",
        "SampleValue": "TODO-Sql",
        "UniqueKey": "iot.topicrule.topicrulepayload.Sql",
        "UpdateRequires": "Replacement"
    },
    "iot1click.project.devicetemplate.CallbackOverrides": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.devicetemplate.CallbackOverrides",
        "UpdateRequires": "Replacement"
    },
    "iot1click.project.devicetemplate.DeviceType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot1click.project.devicetemplate.DeviceType",
        "UpdateRequires": "Replacement"
    },
    "iot1click.project.placementtemplate.DefaultAttributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.placementtemplate.DefaultAttributes",
        "UpdateRequires": "Replacement"
    },
    "iot1click.project.placementtemplate.DeviceTemplates": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.placementtemplate.DeviceTemplates",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.channelstorage.CustomerManagedS3": {
        "Required": "No",
        "Type": "CustomerManagedS3",
        "UniqueKey": "iotanalytics.channel.channelstorage.CustomerManagedS3",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.channelstorage.ServiceManagedS3": {
        "Required": "No",
        "Type": "ServiceManagedS3",
        "UniqueKey": "iotanalytics.channel.channelstorage.ServiceManagedS3",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.customermanageds3.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.Bucket",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.customermanageds3.KeyPrefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.KeyPrefix",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.customermanageds3.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.retentionperiod.NumberOfDays": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.channel.retentionperiod.NumberOfDays",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.retentionperiod.Unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.channel.retentionperiod.Unlimited",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.action.ActionName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.action.ActionName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.action.ContainerAction": {
        "Required": "No",
        "Type": "ContainerAction",
        "UniqueKey": "iotanalytics.dataset.action.ContainerAction",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.action.QueryAction": {
        "Required": "No",
        "Type": "QueryAction",
        "UniqueKey": "iotanalytics.dataset.action.QueryAction",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.containeraction.ExecutionRoleArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.containeraction.ExecutionRoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.containeraction.ExecutionRoleArn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.containeraction.Image": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.containeraction.Image",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.containeraction.ResourceConfiguration": {
        "Required": "Yes",
        "Type": "ResourceConfiguration",
        "UniqueKey": "iotanalytics.dataset.containeraction.ResourceConfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.containeraction.Variables": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Variable",
        "UniqueKey": "iotanalytics.dataset.containeraction.Variables",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.datasetcontentdeliveryrule.Destination": {
        "Required": "Yes",
        "Type": "DatasetContentDeliveryRuleDestination",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryrule.Destination",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.datasetcontentdeliveryrule.EntryName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryrule.EntryName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.datasetcontentdeliveryruledestination.IotEventsDestinationConfiguration": {
        "Required": "No",
        "Type": "IotEventsDestinationConfiguration",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryruledestination.IotEventsDestinationConfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.datasetcontentdeliveryruledestination.S3DestinationConfiguration": {
        "Required": "No",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryruledestination.S3DestinationConfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.deltatime.OffsetSeconds": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.deltatime.OffsetSeconds",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.deltatime.TimeExpression": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.deltatime.TimeExpression",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.filter.DeltaTime": {
        "Required": "No",
        "Type": "DeltaTime",
        "UniqueKey": "iotanalytics.dataset.filter.DeltaTime",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.glueconfiguration.DatabaseName": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.glueconfiguration.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.glueconfiguration.TableName": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.glueconfiguration.TableName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.ioteventsdestinationconfiguration.InputName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.ioteventsdestinationconfiguration.InputName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.ioteventsdestinationconfiguration.RoleArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.ioteventsdestinationconfiguration.RoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.ioteventsdestinationconfiguration.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.queryaction.Filters": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of [Filter",
        "UniqueKey": "iotanalytics.dataset.queryaction.Filters",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.queryaction.SqlQuery": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.queryaction.SqlQuery",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.resourceconfiguration.ComputeType": {
        "Allowed values": "ACU_1 | ACU_2",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.resourceconfiguration.ComputeType",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.resourceconfiguration.VolumeSizeInGB": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "^[1,50]}$",
        "Required": "Yes",
        "SampleValue": "1...50",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.resourceconfiguration.VolumeSizeInGB",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.retentionperiod.NumberOfDays": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.retentionperiod.NumberOfDays",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.retentionperiod.Unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.dataset.retentionperiod.Unlimited",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.s3destinationconfiguration.Bucket": {
        "Maximum": "255",
        "Minimum": "3",
        "Pattern": "^[a-zA-Z0-9.\\-_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.Bucket",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.s3destinationconfiguration.GlueConfiguration": {
        "Required": "No",
        "Type": "GlueConfiguration",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.GlueConfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.s3destinationconfiguration.Key": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.Key",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.s3destinationconfiguration.RoleArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.s3destinationconfiguration.RoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.trigger.Schedule": {
        "Required": "No",
        "Type": "Schedule",
        "UniqueKey": "iotanalytics.dataset.trigger.Schedule",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.trigger.TriggeringDataset": {
        "Required": "No",
        "Type": "TriggeringDataset",
        "UniqueKey": "iotanalytics.dataset.trigger.TriggeringDataset",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.trigger.schedule.ScheduleExpression": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.trigger.schedule.ScheduleExpression",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.triggeringdataset.DatasetName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.triggeringdataset.DatasetName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.DatasetContentVersionValue": {
        "Required": "No",
        "Type": "DatasetContentVersionValue",
        "UniqueKey": "iotanalytics.dataset.variable.DatasetContentVersionValue",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.DoubleValue": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "iotanalytics.dataset.variable.DoubleValue",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.OutputFileUriValue": {
        "Required": "No",
        "Type": "OutputFileUriValue",
        "UniqueKey": "iotanalytics.dataset.variable.OutputFileUriValue",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.StringValue": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.dataset.variable.StringValue",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.StringValue",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.VariableName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.variable.VariableName",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.VariableName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.datasetcontentversionvalue.DatasetName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.datasetcontentversionvalue.DatasetName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.outputfileurivalue.FileName": {
        "Pattern": "[\\w\\.-]{1,255}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.outputfileurivalue.FileName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.versioningconfiguration.MaxVersions": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.versioningconfiguration.MaxVersions",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.versioningconfiguration.Unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.dataset.versioningconfiguration.Unlimited",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.customermanageds3.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.Bucket",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.customermanageds3.KeyPrefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.KeyPrefix",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.customermanageds3.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.datastorestorage.CustomerManagedS3": {
        "Required": "No",
        "Type": "CustomerManagedS3",
        "UniqueKey": "iotanalytics.datastore.datastorestorage.CustomerManagedS3",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.datastorestorage.ServiceManagedS3": {
        "Required": "No",
        "Type": "ServiceManagedS3",
        "UniqueKey": "iotanalytics.datastore.datastorestorage.ServiceManagedS3",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.retentionperiod.NumberOfDays": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.datastore.retentionperiod.NumberOfDays",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.retentionperiod.Unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.datastore.retentionperiod.Unlimited",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.AddAttributes": {
        "Required": "No",
        "Type": "AddAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.AddAttributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.Channel": {
        "Required": "No",
        "Type": "Channel",
        "UniqueKey": "iotanalytics.pipeline.activity.Channel",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.Datastore": {
        "Required": "No",
        "Type": "Datastore",
        "UniqueKey": "iotanalytics.pipeline.activity.Datastore",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.DeviceRegistryEnrich": {
        "Required": "No",
        "Type": "DeviceRegistryEnrich",
        "UniqueKey": "iotanalytics.pipeline.activity.DeviceRegistryEnrich",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.DeviceShadowEnrich": {
        "Required": "No",
        "Type": "DeviceShadowEnrich",
        "UniqueKey": "iotanalytics.pipeline.activity.DeviceShadowEnrich",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.Filter": {
        "Required": "No",
        "Type": "Filter",
        "UniqueKey": "iotanalytics.pipeline.activity.Filter",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.Lambda": {
        "Required": "No",
        "Type": "Lambda",
        "UniqueKey": "iotanalytics.pipeline.activity.Lambda",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.Math": {
        "Required": "No",
        "Type": "Math",
        "UniqueKey": "iotanalytics.pipeline.activity.Math",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.RemoveAttributes": {
        "Required": "No",
        "Type": "RemoveAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.RemoveAttributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.SelectAttributes": {
        "Required": "No",
        "Type": "SelectAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.SelectAttributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.addattributes.Attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iotanalytics.pipeline.addattributes.Attributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.addattributes.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.addattributes.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.addattributes.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.addattributes.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.addattributes.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.addattributes.Next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.channel.ChannelName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.ChannelName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.channel.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.channel.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.channel.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.channel.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.Next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.datastore.DatastoreName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.datastore.DatastoreName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.datastore.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.datastore.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.datastore.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.Attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.Attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.Attribute",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.Next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.RoleArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.RoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.ThingName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.ThingName",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.ThingName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.Attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.Attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.Attribute",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.Next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.RoleArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.RoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.ThingName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.ThingName",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.ThingName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.filter.Filter": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.Filter",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.Filter",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.filter.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.filter.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.Next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.lambda.BatchSize": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.pipeline.lambda.BatchSize",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.lambda.LambdaName": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.LambdaName",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.lambda.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.lambda.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.lambda.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.lambda.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.Next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.math.Attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.Attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.Attribute",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.math.Math": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.Math",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.Math",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.math.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.math.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.Next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.removeattributes.Attributes": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.Attributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.removeattributes.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.removeattributes.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.removeattributes.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.removeattributes.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.Next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.selectattributes.Attributes": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.Attributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.selectattributes.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.selectattributes.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.Name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.selectattributes.Next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.selectattributes.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.Next",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.ClearTimer": {
        "Required": "No",
        "Type": "ClearTimer",
        "UniqueKey": "iotevents.detectormodel.action.ClearTimer",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.DynamoDB": {
        "Required": "No",
        "SampleValue": "TODO-DynamoDB",
        "UniqueKey": "iotevents.detectormodel.action.DynamoDB",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.DynamoDBv2": {
        "Required": "No",
        "SampleValue": "TODO-DynamoDBv2",
        "UniqueKey": "iotevents.detectormodel.action.DynamoDBv2",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.Firehose": {
        "Required": "No",
        "Type": "Firehose",
        "UniqueKey": "iotevents.detectormodel.action.Firehose",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.IotEvents": {
        "Required": "No",
        "Type": "IotEvents",
        "UniqueKey": "iotevents.detectormodel.action.IotEvents",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.IotSiteWise": {
        "Required": "No",
        "Type": "IotSiteWise",
        "UniqueKey": "iotevents.detectormodel.action.IotSiteWise",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.IotTopicPublish": {
        "Required": "No",
        "Type": "IotTopicPublish",
        "UniqueKey": "iotevents.detectormodel.action.IotTopicPublish",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.Lambda": {
        "Required": "No",
        "Type": "Lambda",
        "UniqueKey": "iotevents.detectormodel.action.Lambda",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.ResetTimer": {
        "Required": "No",
        "Type": "ResetTimer",
        "UniqueKey": "iotevents.detectormodel.action.ResetTimer",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.SetTimer": {
        "Required": "No",
        "Type": "SetTimer",
        "UniqueKey": "iotevents.detectormodel.action.SetTimer",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.SetVariable": {
        "Required": "No",
        "Type": "SetVariable",
        "UniqueKey": "iotevents.detectormodel.action.SetVariable",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.Sns": {
        "Required": "No",
        "Type": "Sns",
        "UniqueKey": "iotevents.detectormodel.action.Sns",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.Sqs": {
        "Required": "No",
        "Type": "Sqs",
        "UniqueKey": "iotevents.detectormodel.action.Sqs",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertytimestamp.OffsetInNanos": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertytimestamp.OffsetInNanos",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertytimestamp.TimeInSeconds": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertytimestamp.TimeInSeconds",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvalue.Quality": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvalue.Quality",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvalue.Timestamp": {
        "Required": "No",
        "Type": "AssetPropertyTimestamp",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvalue.Timestamp",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvalue.Value": {
        "Required": "No",
        "Type": "AssetPropertyVariant",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvalue.Value",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvariant.BooleanValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvariant.BooleanValue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvariant.DoubleValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvariant.DoubleValue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvariant.IntegerValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvariant.IntegerValue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvariant.StringValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvariant.StringValue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.cleartimer.TimerName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.cleartimer.TimerName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.cleartimer.TimerName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.detectormodeldefinition.InitialStateName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.detectormodeldefinition.InitialStateName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.detectormodeldefinition.InitialStateName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.detectormodeldefinition.States": {
        "Required": "No",
        "Type": "List of [State",
        "UniqueKey": "iotevents.detectormodel.detectormodeldefinition.States",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.HashKeyField": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.HashKeyField",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.HashKeyType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.HashKeyType",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.HashKeyValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.HashKeyValue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.Operation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.Operation",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.Payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.dynamodb.Payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.PayloadField": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.PayloadField",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.RangeKeyField": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.RangeKeyField",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.RangeKeyType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.RangeKeyType",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.RangeKeyValue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.RangeKeyValue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.TableName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.TableName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodbv2.Payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.dynamodbv2.Payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodbv2.TableName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodbv2.TableName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.event.Actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "iotevents.detectormodel.event.Actions",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.event.Condition": {
        "Maximum": "512",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.event.Condition",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.event.EventName": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.event.EventName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.firehose.DeliveryStreamName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.firehose.DeliveryStreamName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.firehose.Payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.firehose.Payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.firehose.Separator": {
        "Pattern": "([\\n\\t])|(\\r\\n)|(,)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.firehose.Separator",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotevents.InputName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotevents.InputName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotevents.Payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.iotevents.Payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.AssetId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.AssetId",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.EntryId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.EntryId",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.PropertyAlias": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.PropertyAlias",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.PropertyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.PropertyId",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.PropertyValue": {
        "Required": "No",
        "Type": "AssetPropertyValue",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.PropertyValue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iottopicpublish.MqttTopic": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.iottopicpublish.MqttTopic",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iottopicpublish.MqttTopic",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iottopicpublish.Payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.iottopicpublish.Payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.lambda.FunctionArn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.lambda.FunctionArn",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.lambda.FunctionArn",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.lambda.Payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.lambda.Payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.onenter.Events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.onenter.Events",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.onexit.Events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.onexit.Events",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.oninput.Events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.oninput.Events",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.oninput.TransitionEvents": {
        "Required": "No",
        "Type": "List of [TransitionEvent",
        "UniqueKey": "iotevents.detectormodel.oninput.TransitionEvents",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.payload.ContentExpression": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.payload.ContentExpression",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.payload.Type": {
        "Allowed values": "JSON | STRING",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.payload.Type",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.resettimer.TimerName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.resettimer.TimerName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.resettimer.TimerName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.settimer.DurationExpression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.settimer.DurationExpression",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.settimer.DurationExpression",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.settimer.Seconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotevents.detectormodel.settimer.Seconds",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.settimer.TimerName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.settimer.TimerName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.settimer.TimerName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.setvariable.Value": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.setvariable.Value",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.setvariable.Value",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.setvariable.VariableName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.setvariable.VariableName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sns.Payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.sns.Payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sns.TargetArn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.sns.TargetArn",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.sns.TargetArn",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sqs.Payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.sqs.Payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sqs.QueueUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.sqs.QueueUrl",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sqs.UseBase64": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotevents.detectormodel.sqs.UseBase64",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.state.OnEnter": {
        "Required": "No",
        "Type": "OnEnter",
        "UniqueKey": "iotevents.detectormodel.state.OnEnter",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.state.OnExit": {
        "Required": "No",
        "Type": "OnExit",
        "UniqueKey": "iotevents.detectormodel.state.OnExit",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.state.OnInput": {
        "Required": "No",
        "Type": "OnInput",
        "UniqueKey": "iotevents.detectormodel.state.OnInput",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.state.StateName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.state.StateName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.state.StateName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.transitionevent.Actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "iotevents.detectormodel.transitionevent.Actions",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.transitionevent.Condition": {
        "Maximum": "512",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.Condition",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.transitionevent.EventName": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.EventName",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.transitionevent.NextState": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.transitionevent.NextState",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.NextState",
        "UpdateRequires": "Replacement"
    },
    "iotevents.input.attribute.JsonPath": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.input.attribute.JsonPath",
        "UpdateRequires": "Replacement"
    },
    "iotevents.input.inputdefinition.Attributes": {
        "Maximum": "200",
        "Required": "No",
        "Type": "List of [Attribute",
        "UniqueKey": "iotevents.input.inputdefinition.Attributes",
        "UpdateRequires": "Replacement"
    },
    "iotthingsgraph.flowtemplate.definitiondocument.Language": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotthingsgraph.flowtemplate.definitiondocument.Language",
        "UpdateRequires": "Replacement"
    },
    "iotthingsgraph.flowtemplate.definitiondocument.Text": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotthingsgraph.flowtemplate.definitiondocument.Text",
        "UpdateRequires": "Replacement"
    },
    "kinesis.stream.streamencryption.EncryptionType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesis.stream.streamencryption.EncryptionType",
        "UpdateRequires": "Replacement"
    },
    "kinesis.stream.streamencryption.KeyId": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesis.stream.streamencryption.KeyId",
        "Type": "String",
        "UniqueKey": "kinesis.stream.streamencryption.KeyId",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.csvmappingparameters.RecordColumnDelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.csvmappingparameters.RecordColumnDelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.csvmappingparameters.RecordRowDelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalytics.application.csvmappingparameters.RecordRowDelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.InputParallelism": {
        "Required": "No",
        "Type": "InputParallelism",
        "UniqueKey": "kinesisanalytics.application.input.InputParallelism",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.InputProcessingConfiguration": {
        "Required": "No",
        "Type": "InputProcessingConfiguration",
        "UniqueKey": "kinesisanalytics.application.input.InputProcessingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.InputSchema": {
        "Required": "Yes",
        "Type": "InputSchema",
        "UniqueKey": "kinesisanalytics.application.input.InputSchema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.KinesisFirehoseInput": {
        "Required": "Conditional",
        "Type": "KinesisFirehoseInput",
        "UniqueKey": "kinesisanalytics.application.input.KinesisFirehoseInput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.KinesisStreamsInput": {
        "Required": "Conditional",
        "Type": "KinesisStreamsInput",
        "UniqueKey": "kinesisanalytics.application.input.KinesisStreamsInput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.NamePrefix": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalytics.application.input.NamePrefix",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.input.NamePrefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputlambdaprocessor.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputlambdaprocessor.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputlambdaprocessor.RoleARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputlambdaprocessor.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputparallelism.Count": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[1,64]}$",
        "Required": "No",
        "SampleValue": "1...64",
        "Type": "Integer",
        "UniqueKey": "kinesisanalytics.application.inputparallelism.Count",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputprocessingconfiguration.InputLambdaProcessor": {
        "Required": "No",
        "Type": "InputLambdaProcessor",
        "UniqueKey": "kinesisanalytics.application.inputprocessingconfiguration.InputLambdaProcessor",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputschema.RecordColumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalytics.application.inputschema.RecordColumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputschema.RecordEncoding": {
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputschema.RecordEncoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputschema.RecordFormat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalytics.application.inputschema.RecordFormat",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.jsonmappingparameters.RecordRowPath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.jsonmappingparameters.RecordRowPath",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.kinesisfirehoseinput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisfirehoseinput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.kinesisfirehoseinput.RoleARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisfirehoseinput.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.kinesisstreamsinput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisstreamsinput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.kinesisstreamsinput.RoleARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisstreamsinput.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.mappingparameters.CSVMappingParameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalytics.application.mappingparameters.CSVMappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.mappingparameters.JSONMappingParameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalytics.application.mappingparameters.JSONMappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordcolumn.Mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.Mapping",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordcolumn.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.Name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordcolumn.SqlType": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.SqlType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordformat.MappingParameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalytics.application.recordformat.MappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordformat.RecordFormatType": {
        "Allowed values": "CSV | JSON",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordformat.RecordFormatType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.destinationschema.RecordFormatType": {
        "Allowed values": "CSV | JSON",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.destinationschema.RecordFormatType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.RoleARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.kinesisstreamsoutput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisstreamsoutput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.kinesisstreamsoutput.RoleARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisstreamsoutput.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.lambdaoutput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.lambdaoutput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.lambdaoutput.RoleARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.lambdaoutput.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.DestinationSchema": {
        "Required": "Yes",
        "Type": "DestinationSchema",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.DestinationSchema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.KinesisFirehoseOutput": {
        "Required": "No",
        "Type": "KinesisFirehoseOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.KinesisFirehoseOutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.KinesisStreamsOutput": {
        "Required": "No",
        "Type": "KinesisStreamsOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.KinesisStreamsOutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.LambdaOutput": {
        "Required": "No",
        "Type": "LambdaOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.LambdaOutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.Name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalytics.applicationoutput.output.Name",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.Name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.RecordColumnDelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.RecordColumnDelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.RecordRowDelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.RecordRowDelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.RecordRowPath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.RecordRowPath",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.mappingparameters.CSVMappingParameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.mappingparameters.CSVMappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.mappingparameters.JSONMappingParameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.mappingparameters.JSONMappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.Mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.Mapping",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.Name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.SqlType": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.SqlType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordformat.MappingParameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordformat.MappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordformat.RecordFormatType": {
        "Allowed values": "CSV | JSON",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordformat.RecordFormatType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.ReferenceSchema": {
        "Required": "Yes",
        "Type": "ReferenceSchema",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.ReferenceSchema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.S3ReferenceDataSource": {
        "Required": "No",
        "Type": "S3ReferenceDataSource",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.S3ReferenceDataSource",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.TableName": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalytics.applicationreferencedatasource.referencedatasource.TableName",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.TableName",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordColumns": {
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordColumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordEncoding": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordEncoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordFormat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordFormat",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.BucketARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.BucketARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.FileKey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalytics.applicationreferencedatasource.s3referencedatasource.FileKey",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.FileKey",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.ReferenceRoleARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.ReferenceRoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationcodeconfiguration.CodeContent": {
        "Required": "Yes",
        "Type": "CodeContent",
        "UniqueKey": "kinesisanalyticsv2.application.applicationcodeconfiguration.CodeContent",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationcodeconfiguration.CodeContentType": {
        "Allowed values": "PLAINTEXT | ZIPFILE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.applicationcodeconfiguration.CodeContentType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.ApplicationCodeConfiguration": {
        "Required": "Conditional",
        "Type": "ApplicationCodeConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.ApplicationCodeConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.ApplicationSnapshotConfiguration": {
        "Required": "No",
        "Type": "ApplicationSnapshotConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.ApplicationSnapshotConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.EnvironmentProperties": {
        "Required": "No",
        "Type": "EnvironmentProperties",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.EnvironmentProperties",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.FlinkApplicationConfiguration": {
        "Required": "No",
        "Type": "FlinkApplicationConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.FlinkApplicationConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.SqlApplicationConfiguration": {
        "Required": "No",
        "Type": "SqlApplicationConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.SqlApplicationConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationsnapshotconfiguration.SnapshotsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.applicationsnapshotconfiguration.SnapshotsEnabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.CheckpointInterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.CheckpointInterval",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.CheckpointingEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.CheckpointingEnabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.ConfigurationType": {
        "Required": "Yes",
        "SampleValue": "TODO-ConfigurationType",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.ConfigurationType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.MinPauseBetweenCheckpoints": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.MinPauseBetweenCheckpoints",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.codecontent.S3ContentLocation": {
        "Required": "No",
        "Type": "S3ContentLocation",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.S3ContentLocation",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.codecontent.TextContent": {
        "Maximum": "102400",
        "Minimum": "0",
        "Pattern": "^.{0,102400}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.application.codecontent.TextContent",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.TextContent",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.codecontent.ZipFileContent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.ZipFileContent",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.csvmappingparameters.RecordColumnDelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.csvmappingparameters.RecordColumnDelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.csvmappingparameters.RecordRowDelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalyticsv2.application.csvmappingparameters.RecordRowDelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.environmentproperties.PropertyGroups": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [PropertyGroup",
        "UniqueKey": "kinesisanalyticsv2.application.environmentproperties.PropertyGroups",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.CheckpointConfiguration": {
        "Required": "No",
        "Type": "CheckpointConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.CheckpointConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.MonitoringConfiguration": {
        "Required": "No",
        "Type": "MonitoringConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.MonitoringConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.ParallelismConfiguration": {
        "Required": "No",
        "Type": "ParallelismConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.ParallelismConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.InputParallelism": {
        "Required": "No",
        "Type": "InputParallelism",
        "UniqueKey": "kinesisanalyticsv2.application.input.InputParallelism",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.InputProcessingConfiguration": {
        "Required": "No",
        "Type": "InputProcessingConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.input.InputProcessingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.InputSchema": {
        "Required": "Yes",
        "Type": "InputSchema",
        "UniqueKey": "kinesisanalyticsv2.application.input.InputSchema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.KinesisFirehoseInput": {
        "Required": "No",
        "Type": "KinesisFirehoseInput",
        "UniqueKey": "kinesisanalyticsv2.application.input.KinesisFirehoseInput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.KinesisStreamsInput": {
        "Required": "No",
        "Type": "KinesisStreamsInput",
        "UniqueKey": "kinesisanalyticsv2.application.input.KinesisStreamsInput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.NamePrefix": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.application.input.NamePrefix",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.input.NamePrefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputlambdaprocessor.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.inputlambdaprocessor.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputparallelism.Count": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[1,64]}$",
        "Required": "No",
        "SampleValue": "1...64",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.inputparallelism.Count",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputprocessingconfiguration.InputLambdaProcessor": {
        "Required": "No",
        "Type": "InputLambdaProcessor",
        "UniqueKey": "kinesisanalyticsv2.application.inputprocessingconfiguration.InputLambdaProcessor",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputschema.RecordColumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.RecordColumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputschema.RecordEncoding": {
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.RecordEncoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputschema.RecordFormat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.RecordFormat",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.jsonmappingparameters.RecordRowPath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.jsonmappingparameters.RecordRowPath",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.kinesisfirehoseinput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.kinesisfirehoseinput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.kinesisstreamsinput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.kinesisstreamsinput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.mappingparameters.CSVMappingParameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.mappingparameters.CSVMappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.mappingparameters.JSONMappingParameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.mappingparameters.JSONMappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.ConfigurationType": {
        "Allowed values": "CUSTOM | DEFAULT",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.ConfigurationType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.LogLevel": {
        "Allowed values": "DEBUG | ERROR | INFO | WARN",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.LogLevel",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.MetricsLevel": {
        "Allowed values": "APPLICATION | OPERATOR | PARALLELISM | TASK",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.MetricsLevel",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.AutoScalingEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.AutoScalingEnabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.ConfigurationType": {
        "Allowed values": "CUSTOM | DEFAULT",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.ConfigurationType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.Parallelism": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.Parallelism",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.ParallelismPerKPU": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.ParallelismPerKPU",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.propertygroup.PropertyGroupId": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_.-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.propertygroup.PropertyGroupId",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.propertygroup.PropertyMap": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "kinesisanalyticsv2.application.propertygroup.PropertyMap",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordcolumn.Mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.Mapping",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordcolumn.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.Name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordcolumn.SqlType": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.SqlType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordformat.MappingParameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.recordformat.MappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordformat.RecordFormatType": {
        "Allowed values": "CSV | JSON",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordformat.RecordFormatType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.s3contentlocation.BucketARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.BucketARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.s3contentlocation.FileKey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.application.s3contentlocation.FileKey",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.FileKey",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.s3contentlocation.ObjectVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.sqlapplicationconfiguration.Inputs": {
        "Required": "No",
        "Type": "List of [Input",
        "UniqueKey": "kinesisanalyticsv2.application.sqlapplicationconfiguration.Inputs",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.LogStreamARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.LogStreamARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.destinationschema.RecordFormatType": {
        "Allowed values": "CSV | JSON",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.destinationschema.RecordFormatType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.lambdaoutput.ResourceARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.lambdaoutput.ResourceARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.DestinationSchema": {
        "Required": "Yes",
        "Type": "DestinationSchema",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.DestinationSchema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.KinesisFirehoseOutput": {
        "Required": "No",
        "Type": "KinesisFirehoseOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.KinesisFirehoseOutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.KinesisStreamsOutput": {
        "Required": "No",
        "Type": "KinesisStreamsOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.KinesisStreamsOutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.LambdaOutput": {
        "Required": "No",
        "Type": "LambdaOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.LambdaOutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.Name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationoutput.output.Name",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.Name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.RecordColumnDelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.RecordColumnDelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.RecordRowDelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.RecordRowDelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.RecordRowPath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.RecordRowPath",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.CSVMappingParameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.CSVMappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.JSONMappingParameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.JSONMappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.Mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.Mapping",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.Name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.Name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.SqlType": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.SqlType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordformat.MappingParameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordformat.MappingParameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordformat.RecordFormatType": {
        "Allowed values": "CSV | JSON",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordformat.RecordFormatType",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.ReferenceSchema": {
        "Required": "Yes",
        "Type": "ReferenceSchema",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.ReferenceSchema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.S3ReferenceDataSource": {
        "Required": "No",
        "Type": "S3ReferenceDataSource",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.S3ReferenceDataSource",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.TableName": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.TableName",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.TableName",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordColumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordColumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordEncoding": {
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordEncoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordFormat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordFormat",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.BucketARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.BucketARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.FileKey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.FileKey",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.FileKey",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.bufferinghints.IntervalInSeconds": {
        "Maximum": "900",
        "Minimum": "60",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.bufferinghints.IntervalInSeconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.bufferinghints.SizeInMBs": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.bufferinghints.SizeInMBs",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.Enabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.LogGroupName": {
        "Maximum": "512",
        "Minimum": "0",
        "Pattern": "[\\.\\-_/#A-Za-z0-9]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.LogGroupName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.LogStreamName": {
        "Maximum": "512",
        "Minimum": "0",
        "Pattern": "[^:*]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.LogStreamName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.copycommand.CopyOptions": {
        "Maximum": "204800",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.CopyOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.copycommand.DataTableColumns": {
        "Maximum": "204800",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.DataTableColumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.copycommand.DataTableName": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.DataTableName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.Enabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.InputFormatConfiguration": {
        "Required": "No",
        "Type": "InputFormatConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.InputFormatConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.OutputFormatConfiguration": {
        "Required": "No",
        "Type": "OutputFormatConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.OutputFormatConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.SchemaConfiguration": {
        "Required": "No",
        "Type": "SchemaConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.SchemaConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.deserializer.HiveJsonSerDe": {
        "Required": "No",
        "Type": "HiveJsonSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.deserializer.HiveJsonSerDe",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.deserializer.OpenXJsonSerDe": {
        "Required": "No",
        "Type": "OpenXJsonSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.deserializer.OpenXJsonSerDe",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchbufferinghints.IntervalInSeconds": {
        "Maximum": "900",
        "Minimum": "60",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchbufferinghints.IntervalInSeconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchbufferinghints.SizeInMBs": {
        "Maximum": "100",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchbufferinghints.SizeInMBs",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.BufferingHints": {
        "Required": "No",
        "Type": "ElasticsearchBufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.BufferingHints",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.CloudWatchLoggingOptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.CloudWatchLoggingOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.ClusterEndpoint": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.ClusterEndpoint",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.DomainARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.DomainARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.IndexName": {
        "Maximum": "80",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.IndexName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.IndexRotationPeriod": {
        "Required": "No",
        "SampleValue": "TODO-IndexRotationPeriod",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.IndexRotationPeriod",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.ProcessingConfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.ProcessingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.RetryOptions": {
        "Required": "No",
        "Type": "ElasticsearchRetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.RetryOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.RoleARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.S3BackupMode": {
        "Required": "No",
        "SampleValue": "TODO-S3BackupMode",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.S3BackupMode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.S3Configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.S3Configuration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.TypeName": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.TypeName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.VpcConfiguration": {
        "Required": "No",
        "Type": "VpcConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.VpcConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchretryoptions.DurationInSeconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchretryoptions.DurationInSeconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.encryptionconfiguration.KMSEncryptionConfig": {
        "Required": "No",
        "Type": "KMSEncryptionConfig",
        "UniqueKey": "kinesisfirehose.deliverystream.encryptionconfiguration.KMSEncryptionConfig",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.encryptionconfiguration.NoEncryptionConfig": {
        "Required": "No",
        "SampleValue": "TODO-NoEncryptionConfig",
        "UniqueKey": "kinesisfirehose.deliverystream.encryptionconfiguration.NoEncryptionConfig",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.BucketARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.BucketARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.BufferingHints": {
        "Required": "No",
        "Type": "BufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.BufferingHints",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.CloudWatchLoggingOptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.CloudWatchLoggingOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.CompressionFormat": {
        "Allowed values": "GZIP | HADOOP_SNAPPY | Snappy | UNCOMPRESSED | ZIP",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.CompressionFormat",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.DataFormatConversionConfiguration": {
        "Required": "No",
        "Type": "DataFormatConversionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.DataFormatConversionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.EncryptionConfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.EncryptionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.ErrorOutputPrefix": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.ErrorOutputPrefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.Prefix": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.Prefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.ProcessingConfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.ProcessingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.RoleARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.S3BackupConfiguration": {
        "Required": "No",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.S3BackupConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.S3BackupMode": {
        "Allowed values": "Disabled | Enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.S3BackupMode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.hivejsonserde.TimestampFormats": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.hivejsonserde.TimestampFormats",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointcommonattribute.AttributeName": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^(?!\\s*$).+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointcommonattribute.AttributeName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointcommonattribute.AttributeValue": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointcommonattribute.AttributeValue",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointconfiguration.AccessKey": {
        "Maximum": "4096",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointconfiguration.AccessKey",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointconfiguration.Name": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^(?!\\s*$).+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointconfiguration.Name",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointconfiguration.Url": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "https://.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointconfiguration.Url",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.BufferingHints": {
        "Required": "No",
        "Type": "BufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.BufferingHints",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.CloudWatchLoggingOptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.CloudWatchLoggingOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.EndpointConfiguration": {
        "Required": "Yes",
        "Type": "HttpEndpointConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.EndpointConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.ProcessingConfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.ProcessingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.RequestConfiguration": {
        "Required": "No",
        "Type": "HttpEndpointRequestConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.RequestConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.RetryOptions": {
        "Required": "No",
        "Type": "RetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.RetryOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.RoleARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.S3BackupMode": {
        "Allowed values": "AllData | FailedDataOnly",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.S3BackupMode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.S3Configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.S3Configuration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointrequestconfiguration.CommonAttributes": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [HttpEndpointCommonAttribute",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointrequestconfiguration.CommonAttributes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointrequestconfiguration.ContentEncoding": {
        "Allowed values": "GZIP | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointrequestconfiguration.ContentEncoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.inputformatconfiguration.Deserializer": {
        "Required": "No",
        "Type": "Deserializer",
        "UniqueKey": "kinesisfirehose.deliverystream.inputformatconfiguration.Deserializer",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.KinesisStreamARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.KinesisStreamARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.RoleARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.kmsencryptionconfig.AWSKMSKeyARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kmsencryptionconfig.AWSKMSKeyARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.openxjsonserde.CaseInsensitive": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.CaseInsensitive",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.openxjsonserde.ColumnToJsonKeyMappings": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.ColumnToJsonKeyMappings",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.openxjsonserde.ConvertDotsInJsonKeysToUnderscores": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.ConvertDotsInJsonKeysToUnderscores",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.BlockSizeBytes": {
        "Minimum": "67108864",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.BlockSizeBytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.BloomFilterColumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.BloomFilterColumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.BloomFilterFalsePositiveProbability": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.BloomFilterFalsePositiveProbability",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.Compression": {
        "Allowed values": "NONE | SNAPPY | ZLIB",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.Compression",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.DictionaryKeyThreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.DictionaryKeyThreshold",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.EnablePadding": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.EnablePadding",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.FormatVersion": {
        "Allowed values": "V0_11 | V0_12",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.FormatVersion",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.PaddingTolerance": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.PaddingTolerance",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.RowIndexStride": {
        "Minimum": "1000",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.RowIndexStride",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.StripeSizeBytes": {
        "Minimum": "8388608",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.StripeSizeBytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.outputformatconfiguration.Serializer": {
        "Required": "No",
        "Type": "Serializer",
        "UniqueKey": "kinesisfirehose.deliverystream.outputformatconfiguration.Serializer",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.BlockSizeBytes": {
        "Minimum": "67108864",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.BlockSizeBytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.Compression": {
        "Allowed values": "GZIP | SNAPPY | UNCOMPRESSED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.Compression",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.EnableDictionaryCompression": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.EnableDictionaryCompression",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.MaxPaddingBytes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.MaxPaddingBytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.PageSizeBytes": {
        "Minimum": "65536",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.PageSizeBytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.WriterVersion": {
        "Allowed values": "V1 | V2",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.WriterVersion",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processingconfiguration.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.processingconfiguration.Enabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processingconfiguration.Processors": {
        "Required": "No",
        "Type": "List of [Processor",
        "UniqueKey": "kinesisfirehose.deliverystream.processingconfiguration.Processors",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processor.Parameters": {
        "Required": "No",
        "Type": "List of [ProcessorParameter",
        "UniqueKey": "kinesisfirehose.deliverystream.processor.Parameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processor.Type": {
        "Allowed values": "Lambda",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processor.Type",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processorparameter.ParameterName": {
        "Allowed values": "BufferIntervalInSeconds | BufferSizeInMBs | LambdaArn | NumberOfRetries | RoleArn",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processorparameter.ParameterName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processorparameter.ParameterValue": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "^(?!\\s*$).+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processorparameter.ParameterValue",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.CloudWatchLoggingOptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.CloudWatchLoggingOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.ClusterJDBCURL": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.([a-zA-Z0-9\\.]+):\\d{1,5}/[a-zA-Z0-9_$]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.ClusterJDBCURL",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.CopyCommand": {
        "Required": "Yes",
        "Type": "CopyCommand",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.CopyCommand",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.Password": {
        "Maximum": "512",
        "Minimum": "6",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.Password",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.ProcessingConfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.ProcessingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.RetryOptions": {
        "Required": "No",
        "Type": "RedshiftRetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.RetryOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.RoleARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3BackupConfiguration": {
        "Required": "No",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3BackupConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3BackupMode": {
        "Allowed values": "Disabled | Enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3BackupMode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3Configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3Configuration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.Username": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.Username",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftretryoptions.DurationInSeconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Pattern": "^[0,7200]}$",
        "Required": "No",
        "SampleValue": "0...7200",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftretryoptions.DurationInSeconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.retryoptions.DurationInSeconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Pattern": "^[0,7200]}$",
        "Required": "No",
        "SampleValue": "0...7200",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.retryoptions.DurationInSeconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.BucketARN": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.BucketARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.BufferingHints": {
        "Required": "No",
        "Type": "BufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.BufferingHints",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.CloudWatchLoggingOptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.CloudWatchLoggingOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.CompressionFormat": {
        "Required": "No",
        "SampleValue": "TODO-CompressionFormat",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.CompressionFormat",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.EncryptionConfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.EncryptionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.ErrorOutputPrefix": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.ErrorOutputPrefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.Prefix": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.Prefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.RoleARN": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.CatalogId": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.CatalogId",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.DatabaseName": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.Region": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.Region",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.RoleARN": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.TableName": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.TableName",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.VersionId": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.VersionId",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.serializer.OrcSerDe": {
        "Required": "No",
        "Type": "OrcSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.serializer.OrcSerDe",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.serializer.ParquetSerDe": {
        "Required": "No",
        "Type": "ParquetSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.serializer.ParquetSerDe",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.CloudWatchLoggingOptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.CloudWatchLoggingOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECAcknowledgmentTimeoutInSeconds": {
        "Maximum": "600",
        "Minimum": "180",
        "Pattern": "^[180,600]}$",
        "Required": "No",
        "SampleValue": "180...600",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECAcknowledgmentTimeoutInSeconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECEndpoint": {
        "Maximum": "2048",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECEndpoint",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECEndpointType": {
        "Allowed values": "Event | Raw",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECEndpointType",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECToken": {
        "Maximum": "2048",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECToken",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.ProcessingConfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.ProcessingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.RetryOptions": {
        "Required": "No",
        "Type": "SplunkRetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.RetryOptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.S3BackupMode": {
        "Allowed values": "AllEvents | FailedEventsOnly",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.S3BackupMode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.S3Configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.S3Configuration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkretryoptions.DurationInSeconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Pattern": "^[0,7200]}$",
        "Required": "No",
        "SampleValue": "0...7200",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkretryoptions.DurationInSeconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.vpcconfiguration.RoleARN": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.vpcconfiguration.RoleARN",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.vpcconfiguration.SecurityGroupIds": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.vpcconfiguration.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.vpcconfiguration.SubnetIds": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.vpcconfiguration.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.datalakesettings.datalakeprincipal.DataLakePrincipalIdentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.datalakesettings.datalakeprincipal.DataLakePrincipalIdentifier",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.columnwildcard.ExcludedColumnNames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lakeformation.permissions.columnwildcard.ExcludedColumnNames",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.databaseresource.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.databaseresource.Name",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.datalakeprincipal.DataLakePrincipalIdentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.datalakeprincipal.DataLakePrincipalIdentifier",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.datalocationresource.S3Resource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.datalocationresource.S3Resource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.resource.DataLocationResource": {
        "Required": "No",
        "Type": "DataLocationResource",
        "UniqueKey": "lakeformation.permissions.resource.DataLocationResource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.resource.DatabaseResource": {
        "Required": "No",
        "Type": "DatabaseResource",
        "UniqueKey": "lakeformation.permissions.resource.DatabaseResource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.resource.TableResource": {
        "Required": "No",
        "Type": "TableResource",
        "UniqueKey": "lakeformation.permissions.resource.TableResource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.resource.TableWithColumnsResource": {
        "Required": "No",
        "Type": "TableWithColumnsResource",
        "UniqueKey": "lakeformation.permissions.resource.TableWithColumnsResource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tableresource.DatabaseName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tableresource.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tableresource.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tableresource.Name",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.ColumnNames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.ColumnNames",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.ColumnWildcard": {
        "Required": "No",
        "Type": "ColumnWildcard",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.ColumnWildcard",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.DatabaseName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.Name",
        "UpdateRequires": "Replacement"
    },
    "lambda.alias.aliasroutingconfiguration.AdditionalVersionWeights": {
        "Required": "Yes",
        "Type": "List of [VersionWeight",
        "UniqueKey": "lambda.alias.aliasroutingconfiguration.AdditionalVersionWeights",
        "UpdateRequires": "Replacement"
    },
    "lambda.alias.provisionedconcurrencyconfiguration.ProvisionedConcurrentExecutions": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "lambda.alias.provisionedconcurrencyconfiguration.ProvisionedConcurrentExecutions",
        "UpdateRequires": "Replacement"
    },
    "lambda.alias.versionweight.FunctionVersion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.alias.versionweight.FunctionVersion",
        "UpdateRequires": "Replacement"
    },
    "lambda.alias.versionweight.FunctionWeight": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "lambda.alias.versionweight.FunctionWeight",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventinvokeconfig.destinationconfig.OnFailure": {
        "Required": "No",
        "Type": "OnFailure",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.OnFailure",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventinvokeconfig.destinationconfig.OnSuccess": {
        "Required": "No",
        "Type": "OnSuccess",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.OnSuccess",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventinvokeconfig.destinationconfig.onfailure.Destination": {
        "Maximum": "350",
        "Minimum": "0",
        "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onfailure.Destination",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventinvokeconfig.destinationconfig.onsuccess.Destination": {
        "Maximum": "350",
        "Minimum": "0",
        "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onsuccess.Destination",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventsourcemapping.destinationconfig.OnFailure": {
        "Required": "No",
        "Type": "OnFailure",
        "UniqueKey": "lambda.eventsourcemapping.destinationconfig.OnFailure",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventsourcemapping.onfailure.Destination": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.eventsourcemapping.onfailure.Destination",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.S3Bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "lambda.function.code.S3Bucket",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.S3Key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-lambda.function.code.S3Key",
        "Type": "String",
        "UniqueKey": "lambda.function.code.S3Key",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.S3ObjectVersion": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-lambda.function.code.S3ObjectVersion",
        "Type": "String",
        "UniqueKey": "lambda.function.code.S3ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.ZipFile": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "lambda.function.code.ZipFile",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.deadletterconfig.TargetArn": {
        "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.function.deadletterconfig.TargetArn",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.environment.Variables": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "lambda.function.environment.Variables",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.filesystemconfig.Arn": {
        "Maximum": "200",
        "Pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.function.filesystemconfig.Arn",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.filesystemconfig.LocalMountPath": {
        "Maximum": "160",
        "Pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.function.filesystemconfig.LocalMountPath",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.tracingconfig.Mode": {
        "Allowed values": "Active | PassThrough",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.function.tracingconfig.Mode",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.vpcconfig.SecurityGroupIds": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "lambda.function.vpcconfig.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.vpcconfig.SubnetIds": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "lambda.function.vpcconfig.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "lambda.layerversion.content.S3Bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.S3Bucket",
        "UpdateRequires": "Replacement"
    },
    "lambda.layerversion.content.S3Key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-lambda.layerversion.content.S3Key",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.S3Key",
        "UpdateRequires": "Replacement"
    },
    "lambda.layerversion.content.S3ObjectVersion": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-lambda.layerversion.content.S3ObjectVersion",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.S3ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "lambda.version.provisionedconcurrencyconfiguration.ProvisionedConcurrentExecutions": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "lambda.version.provisionedconcurrencyconfiguration.ProvisionedConcurrentExecutions",
        "UpdateRequires": "Replacement"
    },
    "logs.metricfilter.metrictransformation.DefaultValue": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "logs.metricfilter.metrictransformation.DefaultValue",
        "UpdateRequires": "Replacement"
    },
    "logs.metricfilter.metrictransformation.MetricName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.MetricName",
        "UpdateRequires": "Replacement"
    },
    "logs.metricfilter.metrictransformation.MetricNamespace": {
        "Maximum": "255",
        "Pattern": "[^:*$]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.MetricNamespace",
        "UpdateRequires": "Replacement"
    },
    "logs.metricfilter.metrictransformation.MetricValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.MetricValue",
        "UpdateRequires": "Replacement"
    },
    "macie.findingsfilter.findingcriteria.Criterion": {
        "Required": "No",
        "Type": "Criterion",
        "UniqueKey": "macie.findingsfilter.findingcriteria.Criterion",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.approvalthresholdpolicy.ProposalDurationInHours": {
        "Maximum": "168",
        "Minimum": "1",
        "Pattern": "^[1,168]}$",
        "Required": "No",
        "SampleValue": "1...168",
        "Type": "Integer",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.ProposalDurationInHours",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.approvalthresholdpolicy.ThresholdComparator": {
        "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL_TO",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.ThresholdComparator",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.approvalthresholdpolicy.ThresholdPercentage": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "No",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.ThresholdPercentage",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberconfiguration.Description": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberconfiguration.Description",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberconfiguration.MemberFrameworkConfiguration": {
        "Required": "No",
        "Type": "MemberFrameworkConfiguration",
        "UniqueKey": "managedblockchain.member.memberconfiguration.MemberFrameworkConfiguration",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberconfiguration.Name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^(?!-)^[^0-9](?!.*--)[A-Za-z0-9-]+[^- ]$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberconfiguration.Name",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberfabricconfiguration.AdminPassword": {
        "Maximum": "32",
        "Minimum": "8",
        "Pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?!.*[@'\\\\\"/])[a-zA-Z0-9\\S]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberfabricconfiguration.AdminPassword",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberfabricconfiguration.AdminUsername": {
        "Maximum": "16",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberfabricconfiguration.AdminUsername",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberframeworkconfiguration.MemberFabricConfiguration": {
        "Required": "No",
        "Type": "MemberFabricConfiguration",
        "UniqueKey": "managedblockchain.member.memberframeworkconfiguration.MemberFabricConfiguration",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.Description": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.Description",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.Framework": {
        "Allowed values": "HYPERLEDGER_FABRIC",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.Framework",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.FrameworkVersion": {
        "Maximum": "8",
        "Minimum": "1",
        "Pattern": "^.{1,8}$",
        "Required": "Yes",
        "SampleValue": "TODO-managedblockchain.member.networkconfiguration.FrameworkVersion",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.FrameworkVersion",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.Name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.Name",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.NetworkFrameworkConfiguration": {
        "Required": "No",
        "Type": "NetworkFrameworkConfiguration",
        "UniqueKey": "managedblockchain.member.networkconfiguration.NetworkFrameworkConfiguration",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.VotingPolicy": {
        "Required": "Yes",
        "Type": "VotingPolicy",
        "UniqueKey": "managedblockchain.member.networkconfiguration.VotingPolicy",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkfabricconfiguration.Edition": {
        "Allowed values": "STANDARD | STARTER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkfabricconfiguration.Edition",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkframeworkconfiguration.NetworkFabricConfiguration": {
        "Required": "No",
        "Type": "NetworkFabricConfiguration",
        "UniqueKey": "managedblockchain.member.networkframeworkconfiguration.NetworkFabricConfiguration",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.votingpolicy.ApprovalThresholdPolicy": {
        "Required": "No",
        "Type": "ApprovalThresholdPolicy",
        "UniqueKey": "managedblockchain.member.votingpolicy.ApprovalThresholdPolicy",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.node.nodeconfiguration.AvailabilityZone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.node.nodeconfiguration.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.node.nodeconfiguration.InstanceType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.node.nodeconfiguration.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "mediaconvert.jobtemplate.accelerationsettings.Mode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconvert.jobtemplate.accelerationsettings.Mode",
        "UpdateRequires": "Replacement"
    },
    "mediaconvert.jobtemplate.hopdestination.Priority": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediaconvert.jobtemplate.hopdestination.Priority",
        "UpdateRequires": "Replacement"
    },
    "mediaconvert.jobtemplate.hopdestination.Queue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconvert.jobtemplate.hopdestination.Queue",
        "UpdateRequires": "Replacement"
    },
    "mediaconvert.jobtemplate.hopdestination.WaitMinutes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediaconvert.jobtemplate.hopdestination.WaitMinutes",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiolanguageselection.LanguageCode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiolanguageselection.LanguageCode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiolanguageselection.LanguageSelectionPolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiolanguageselection.LanguageSelectionPolicy",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiopidselection.Pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.audiopidselection.Pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselector.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audioselector.Name",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselector.SelectorSettings": {
        "Required": "No",
        "Type": "AudioSelectorSettings",
        "UniqueKey": "medialive.channel.audioselector.SelectorSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselectorsettings.AudioLanguageSelection": {
        "Required": "No",
        "Type": "AudioLanguageSelection",
        "UniqueKey": "medialive.channel.audioselectorsettings.AudioLanguageSelection",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselectorsettings.AudioPidSelection": {
        "Required": "No",
        "Type": "AudioPidSelection",
        "UniqueKey": "medialive.channel.audioselectorsettings.AudioPidSelection",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselector.LanguageCode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captionselector.LanguageCode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselector.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captionselector.Name",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselector.SelectorSettings": {
        "Required": "No",
        "Type": "CaptionSelectorSettings",
        "UniqueKey": "medialive.channel.captionselector.SelectorSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.AribSourceSettings": {
        "Required": "No",
        "Type": "AribSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.AribSourceSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.DvbSubSourceSettings": {
        "Required": "No",
        "Type": "DvbSubSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.DvbSubSourceSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.EmbeddedSourceSettings": {
        "Required": "No",
        "Type": "EmbeddedSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.EmbeddedSourceSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.Scte20SourceSettings": {
        "Required": "No",
        "Type": "Scte20SourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.Scte20SourceSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.Scte27SourceSettings": {
        "Required": "No",
        "Type": "Scte27SourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.Scte27SourceSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.TeletextSourceSettings": {
        "Required": "No",
        "Type": "TeletextSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.TeletextSourceSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubsourcesettings.Pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubsourcesettings.Pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.embeddedsourcesettings.Convert608To708": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.Convert608To708",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.embeddedsourcesettings.Scte20Detection": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.Scte20Detection",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.embeddedsourcesettings.Source608ChannelNumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.Source608ChannelNumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.embeddedsourcesettings.Source608TrackNumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.Source608TrackNumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsinputsettings.Bandwidth": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.Bandwidth",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsinputsettings.BufferSegments": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.BufferSegments",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsinputsettings.Retries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.Retries",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsinputsettings.RetryInterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.RetryInterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputattachment.InputAttachmentName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputattachment.InputAttachmentName",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputattachment.InputId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputattachment.InputId",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputattachment.InputSettings": {
        "Required": "No",
        "Type": "InputSettings",
        "UniqueKey": "medialive.channel.inputattachment.InputSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.AudioSelectors": {
        "Required": "No",
        "Type": "List of [AudioSelector",
        "UniqueKey": "medialive.channel.inputsettings.AudioSelectors",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.CaptionSelectors": {
        "Required": "No",
        "Type": "List of [CaptionSelector",
        "UniqueKey": "medialive.channel.inputsettings.CaptionSelectors",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.DeblockFilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.DeblockFilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.DenoiseFilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.DenoiseFilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.FilterStrength": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.inputsettings.FilterStrength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.InputFilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.InputFilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.NetworkInputSettings": {
        "Required": "No",
        "Type": "NetworkInputSettings",
        "UniqueKey": "medialive.channel.inputsettings.NetworkInputSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.SourceEndBehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.SourceEndBehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.VideoSelector": {
        "Required": "No",
        "Type": "VideoSelector",
        "UniqueKey": "medialive.channel.inputsettings.VideoSelector",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputspecification.Codec": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.Codec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputspecification.MaximumBitrate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.MaximumBitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputspecification.Resolution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.Resolution",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mediapackageoutputdestinationsettings.ChannelId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mediapackageoutputdestinationsettings.ChannelId",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.multiplexprogramchanneldestinationsettings.MultiplexId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.multiplexprogramchanneldestinationsettings.MultiplexId",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.multiplexprogramchanneldestinationsettings.ProgramName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.multiplexprogramchanneldestinationsettings.ProgramName",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.networkinputsettings.HlsInputSettings": {
        "Required": "No",
        "Type": "HlsInputSettings",
        "UniqueKey": "medialive.channel.networkinputsettings.HlsInputSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.networkinputsettings.ServerValidation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.networkinputsettings.ServerValidation",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestination.Id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestination.Id",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestination.MediaPackageSettings": {
        "Required": "No",
        "Type": "List of [MediaPackageOutputDestinationSettings",
        "UniqueKey": "medialive.channel.outputdestination.MediaPackageSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestination.MultiplexSettings": {
        "Required": "No",
        "Type": "MultiplexProgramChannelDestinationSettings",
        "UniqueKey": "medialive.channel.outputdestination.MultiplexSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestination.Settings": {
        "Required": "No",
        "Type": "List of [OutputDestinationSettings",
        "UniqueKey": "medialive.channel.outputdestination.Settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestinationsettings.PasswordParam": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.PasswordParam",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestinationsettings.StreamName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.StreamName",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestinationsettings.Url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.Url",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestinationsettings.Username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.Username",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte20sourcesettings.Convert608To708": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.scte20sourcesettings.Convert608To708",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte20sourcesettings.Source608ChannelNumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.scte20sourcesettings.Source608ChannelNumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte27sourcesettings.Pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.scte27sourcesettings.Pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.teletextsourcesettings.PageNumber": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.teletextsourcesettings.PageNumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselector.ColorSpace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videoselector.ColorSpace",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselector.ColorSpaceUsage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videoselector.ColorSpaceUsage",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselector.SelectorSettings": {
        "Required": "No",
        "Type": "VideoSelectorSettings",
        "UniqueKey": "medialive.channel.videoselector.SelectorSettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselectorpid.Pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videoselectorpid.Pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselectorprogramid.ProgramId": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videoselectorprogramid.ProgramId",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselectorsettings.VideoSelectorPid": {
        "Required": "No",
        "Type": "VideoSelectorPid",
        "UniqueKey": "medialive.channel.videoselectorsettings.VideoSelectorPid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselectorsettings.VideoSelectorProgramId": {
        "Required": "No",
        "Type": "VideoSelectorProgramId",
        "UniqueKey": "medialive.channel.videoselectorsettings.VideoSelectorProgramId",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputdestinationrequest.StreamName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputdestinationrequest.StreamName",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputsourcerequest.PasswordParam": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.PasswordParam",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputsourcerequest.Url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.Url",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputsourcerequest.Username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.Username",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputvpcrequest.SecurityGroupIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.input.inputvpcrequest.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputvpcrequest.SubnetIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.input.inputvpcrequest.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.mediaconnectflowrequest.FlowArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.mediaconnectflowrequest.FlowArn",
        "UpdateRequires": "Replacement"
    },
    "medialive.inputsecuritygroup.inputwhitelistrulecidr.Cidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.inputsecuritygroup.inputwhitelistrulecidr.Cidr",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.AllowedHeaders": {
        "Maximum": "100",
        "Required": "No",
        "UniqueKey": "mediastore.container.corsrule.AllowedHeaders",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.AllowedMethods": {
        "Maximum": "4",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "mediastore.container.corsrule.AllowedMethods",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.AllowedOrigins": {
        "Maximum": "100",
        "Required": "No",
        "UniqueKey": "mediastore.container.corsrule.AllowedOrigins",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.ExposeHeaders": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "mediastore.container.corsrule.ExposeHeaders",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.MaxAgeSeconds": {
        "Maximum": "2147483647",
        "Minimum": "0",
        "Pattern": "^[0,2147483647]}$",
        "Required": "No",
        "SampleValue": "0...2147483647",
        "Type": "Integer",
        "UniqueKey": "mediastore.container.corsrule.MaxAgeSeconds",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.metricpolicy.ContainerLevelMetrics": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediastore.container.metricpolicy.ContainerLevelMetrics",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.metricpolicy.MetricPolicyRules": {
        "Maximum": "300",
        "Required": "No",
        "Type": "List of [MetricPolicyRule",
        "UniqueKey": "mediastore.container.metricpolicy.MetricPolicyRules",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.metricpolicyrule.ObjectGroup": {
        "Maximum": "900",
        "Minimum": "1",
        "Pattern": "/?(?:[A-Za-z0-9_=:\\.\\-\\~\\*]+/){0,10}(?:[A-Za-z0-9_=:\\.\\-\\~\\*]+)?/?",
        "Required": "Yes",
        "UniqueKey": "mediastore.container.metricpolicyrule.ObjectGroup",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.metricpolicyrule.ObjectGroupName": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediastore.container.metricpolicyrule.ObjectGroupName",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokerlogs.CloudWatchLogs": {
        "Required": "No",
        "Type": "CloudWatchLogs",
        "UniqueKey": "msk.cluster.brokerlogs.CloudWatchLogs",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokerlogs.Firehose": {
        "Required": "No",
        "Type": "Firehose",
        "UniqueKey": "msk.cluster.brokerlogs.Firehose",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokerlogs.S3": {
        "Required": "No",
        "Type": "S3",
        "UniqueKey": "msk.cluster.brokerlogs.S3",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.BrokerAZDistribution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.BrokerAZDistribution",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.ClientSubnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.ClientSubnets",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.InstanceType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.SecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.SecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.StorageInfo": {
        "Required": "No",
        "Type": "StorageInfo",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.StorageInfo",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.clientauthentication.Tls": {
        "Required": "No",
        "Type": "Tls",
        "UniqueKey": "msk.cluster.clientauthentication.Tls",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.cloudwatchlogs.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.cloudwatchlogs.Enabled",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.cloudwatchlogs.LogGroup": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.cloudwatchlogs.LogGroup",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.configurationinfo.Arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.configurationinfo.Arn",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.configurationinfo.Revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "msk.cluster.configurationinfo.Revision",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.ebsstorageinfo.VolumeSize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "msk.cluster.ebsstorageinfo.VolumeSize",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionatrest.DataVolumeKMSKeyId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.encryptionatrest.DataVolumeKMSKeyId",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptioninfo.EncryptionAtRest": {
        "Required": "No",
        "Type": "EncryptionAtRest",
        "UniqueKey": "msk.cluster.encryptioninfo.EncryptionAtRest",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptioninfo.EncryptionInTransit": {
        "Required": "No",
        "Type": "EncryptionInTransit",
        "UniqueKey": "msk.cluster.encryptioninfo.EncryptionInTransit",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionintransit.ClientBroker": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.encryptionintransit.ClientBroker",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionintransit.InCluster": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.encryptionintransit.InCluster",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.firehose.DeliveryStream": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.firehose.DeliveryStream",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.firehose.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.firehose.Enabled",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.jmxexporter.EnabledInBroker": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.jmxexporter.EnabledInBroker",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.logginginfo.BrokerLogs": {
        "Required": "Yes",
        "Type": "BrokerLogs",
        "UniqueKey": "msk.cluster.logginginfo.BrokerLogs",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.nodeexporter.EnabledInBroker": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.nodeexporter.EnabledInBroker",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.openmonitoring.Prometheus": {
        "Required": "Yes",
        "Type": "Prometheus",
        "UniqueKey": "msk.cluster.openmonitoring.Prometheus",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.prometheus.JmxExporter": {
        "Required": "No",
        "Type": "JmxExporter",
        "UniqueKey": "msk.cluster.prometheus.JmxExporter",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.prometheus.NodeExporter": {
        "Required": "No",
        "Type": "NodeExporter",
        "UniqueKey": "msk.cluster.prometheus.NodeExporter",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.s3.Bucket": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.s3.Bucket",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.s3.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.s3.Enabled",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.s3.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.s3.Prefix",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.storageinfo.EBSStorageInfo": {
        "Required": "No",
        "Type": "EBSStorageInfo",
        "UniqueKey": "msk.cluster.storageinfo.EBSStorageInfo",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.tls.CertificateAuthorityArnList": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.tls.CertificateAuthorityArnList",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.device.location.Address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.device.location.Address",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.device.location.Latitude": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.device.location.Latitude",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.device.location.Longitude": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.device.location.Longitude",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.link.bandwidth.DownloadSpeed": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "networkmanager.link.bandwidth.DownloadSpeed",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.link.bandwidth.UploadSpeed": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "networkmanager.link.bandwidth.UploadSpeed",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.site.location.Address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.site.location.Address",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.site.location.Latitude": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.site.location.Latitude",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.site.location.Longitude": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.site.location.Longitude",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.datasource.Arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.Arn",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.datasource.DatabaseName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.DatabaseName",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.datasource.Type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.Type",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.environment.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.app.environment.Key",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.environment.Secure": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "opsworks.app.environment.Secure",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.environment.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.app.environment.Value",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.sslconfiguration.Certificate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.Certificate",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.sslconfiguration.Chain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.Chain",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.sslconfiguration.PrivateKey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.PrivateKey",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.blockdevicemapping.DeviceName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.DeviceName",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.blockdevicemapping.Ebs": {
        "Required": "Conditional",
        "Type": "EbsBlockDevice",
        "UniqueKey": "opsworks.instance.blockdevicemapping.Ebs",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.blockdevicemapping.NoDevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.NoDevice",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.blockdevicemapping.VirtualName": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.VirtualName",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.DeleteOnTermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.instance.ebsblockdevice.DeleteOnTermination",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.Iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.instance.ebsblockdevice.Iops",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.SnapshotId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.ebsblockdevice.SnapshotId",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.VolumeSize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.instance.ebsblockdevice.VolumeSize",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.VolumeType": {
        "Allowed values": "gp2 | io1 | standard",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.ebsblockdevice.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.Friday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.Friday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.Monday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.Monday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.Saturday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.Saturday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.Sunday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.Sunday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.Thursday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.Thursday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.Tuesday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.Tuesday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.Wednesday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.Wednesday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.lifecycleeventconfiguration.ShutdownEventConfiguration": {
        "Required": "No",
        "Type": "ShutdownEventConfiguration",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.ShutdownEventConfiguration",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.DelayUntilElbConnectionsDrained": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.DelayUntilElbConnectionsDrained",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.ExecutionTimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.ExecutionTimeout",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.DownScaling": {
        "Required": "No",
        "Type": "AutoScalingThresholds",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.DownScaling",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.Enable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.Enable",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.UpScaling": {
        "Required": "No",
        "Type": "AutoScalingThresholds",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.UpScaling",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.CpuThreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.CpuThreshold",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.IgnoreMetricsTime": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.IgnoreMetricsTime",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.InstanceCount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.InstanceCount",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.LoadThreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.LoadThreshold",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.MemoryThreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.MemoryThreshold",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.ThresholdsWaitTime": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.ThresholdsWaitTime",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.Configure": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.Configure",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.Deploy": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.Deploy",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.Setup": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.Setup",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.Shutdown": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.Shutdown",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.Undeploy": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.Undeploy",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.Encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.volumeconfiguration.Encrypted",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.Iops": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.Iops",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.MountPoint": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.layer.volumeconfiguration.MountPoint",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.NumberOfDisks": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.NumberOfDisks",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.RaidLevel": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.RaidLevel",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.Size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.Size",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.VolumeType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.layer.volumeconfiguration.VolumeType",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.chefconfiguration.BerkshelfVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.chefconfiguration.BerkshelfVersion",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.chefconfiguration.ManageBerkshelf": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.stack.chefconfiguration.ManageBerkshelf",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.elasticip.Ip": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.elasticip.Ip",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.elasticip.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.elasticip.Name",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.rdsdbinstance.DbPassword": {
        "Required": "Yes",
        "SampleValue": "TODO-DbPassword",
        "UniqueKey": "opsworks.stack.rdsdbinstance.DbPassword",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.rdsdbinstance.DbUser": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.rdsdbinstance.DbUser",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.rdsdbinstance.RdsDbInstanceArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.rdsdbinstance.RdsDbInstanceArn",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.Password": {
        "Required": "No",
        "SampleValue": "TODO-Password",
        "UniqueKey": "opsworks.stack.source.1.Password",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.Revision": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.Revision",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.SshKey": {
        "Required": "No",
        "SampleValue": "TODO-SshKey",
        "UniqueKey": "opsworks.stack.source.1.SshKey",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.Type": {
        "Allowed values": "archive | git | s3 | svn",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.Type",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.Url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.Url",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.Username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.Username",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.Password": {
        "Required": "No",
        "SampleValue": "TODO-Password",
        "UniqueKey": "opsworks.stack.source.Password",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.Revision": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.Revision",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.SshKey": {
        "Required": "No",
        "SampleValue": "TODO-SshKey",
        "UniqueKey": "opsworks.stack.source.SshKey",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.Type": {
        "Allowed values": "archive | git | s3 | svn",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.Type",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.Url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.Url",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.Username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.Username",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.stackconfigmanager.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.stackconfigmanager.Name",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.stackconfigmanager.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.stackconfigmanager.Version",
        "UpdateRequires": "Replacement"
    },
    "opsworkscm.server.engineattribute.Name": {
        "Maximum": "10000",
        "Pattern": "(?s).*",
        "Required": "No",
        "UniqueKey": "opsworkscm.server.engineattribute.Name",
        "UpdateRequires": "Replacement"
    },
    "opsworkscm.server.engineattribute.Value": {
        "Maximum": "10000",
        "Pattern": "(?s).*",
        "Required": "No",
        "UniqueKey": "opsworkscm.server.engineattribute.Value",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.campaignhook.LambdaFunctionName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.LambdaFunctionName",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.campaignhook.Mode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.Mode",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.campaignhook.WebUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.WebUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.limits.Daily": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.Daily",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.limits.MaximumDuration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.MaximumDuration",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.limits.MessagesPerSecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.MessagesPerSecond",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.limits.Total": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.Total",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.quiettime.End": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.quiettime.End",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.quiettime.Start": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.quiettime.Start",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.attributedimension.AttributeType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.attributedimension.AttributeType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.attributedimension.Values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.campaign.attributedimension.Values",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignemailmessage.Body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.Body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignemailmessage.FromAddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.FromAddress",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignemailmessage.HtmlBody": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.HtmlBody",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignemailmessage.Title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.Title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaigneventfilter.Dimensions": {
        "Required": "No",
        "Type": "EventDimensions",
        "UniqueKey": "pinpoint.campaign.campaigneventfilter.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaigneventfilter.FilterType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaigneventfilter.FilterType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignhook.LambdaFunctionName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.LambdaFunctionName",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignhook.Mode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.Mode",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignhook.WebUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.WebUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignsmsmessage.Body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.Body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignsmsmessage.MessageType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.MessageType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignsmsmessage.SenderId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.SenderId",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.eventdimensions.Attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.campaign.eventdimensions.Attributes",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.eventdimensions.EventType": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.campaign.eventdimensions.EventType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.eventdimensions.Metrics": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.campaign.eventdimensions.Metrics",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.limits.Daily": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.Daily",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.limits.MaximumDuration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.MaximumDuration",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.limits.MessagesPerSecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.MessagesPerSecond",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.limits.Total": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.Total",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.Action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.Action",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.Body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.Body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.ImageIconUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.ImageIconUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.ImageSmallIconUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.ImageSmallIconUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.ImageUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.ImageUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.JsonBody": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.JsonBody",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.MediaUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.MediaUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.RawContent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.RawContent",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.SilentPush": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpoint.campaign.message.SilentPush",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.TimeToLive": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.message.TimeToLive",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.Title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.Title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.Url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.Url",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.ADMMessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.ADMMessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.APNSMessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.APNSMessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.BaiduMessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.BaiduMessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.DefaultMessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.DefaultMessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.EmailMessage": {
        "Required": "No",
        "Type": "CampaignEmailMessage",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.EmailMessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.GCMMessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.GCMMessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.SMSMessage": {
        "Required": "No",
        "Type": "CampaignSmsMessage",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.SMSMessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.metricdimension.ComparisonOperator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.metricdimension.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.metricdimension.Value": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "pinpoint.campaign.metricdimension.Value",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.EndTime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.EndTime",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.EventFilter": {
        "Required": "No",
        "Type": "CampaignEventFilter",
        "UniqueKey": "pinpoint.campaign.schedule.EventFilter",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.Frequency": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.Frequency",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.IsLocalTime": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpoint.campaign.schedule.IsLocalTime",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.QuietTime": {
        "Required": "No",
        "Type": "QuietTime",
        "UniqueKey": "pinpoint.campaign.schedule.QuietTime",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.StartTime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.StartTime",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.TimeZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.TimeZone",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.quiettime.End": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.quiettime.End",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.quiettime.Start": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.quiettime.Start",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.setdimension.DimensionType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.setdimension.DimensionType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.setdimension.Values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.campaign.setdimension.Values",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.MessageConfiguration": {
        "Required": "No",
        "Type": "MessageConfiguration",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.MessageConfiguration",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.Schedule": {
        "Required": "No",
        "Type": "Schedule",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.Schedule",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.SizePercent": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.SizePercent",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.TreatmentDescription": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.TreatmentDescription",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.TreatmentName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.TreatmentName",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.Action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.Action",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.Body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.Body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.ImageIconUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.ImageIconUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.ImageUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.ImageUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.SmallImageIconUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.SmallImageIconUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.Sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.Sound",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.Title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.Title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.Url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.Url",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.Action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.Action",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.Body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.Body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.MediaUrl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.MediaUrl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.Sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.Sound",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.Title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.Title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.Url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.Url",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.Action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.Action",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.Body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.Body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.Sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.Sound",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.Title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.Title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.Url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.Url",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.attributedimension.AttributeType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.attributedimension.AttributeType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.attributedimension.Values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.segment.attributedimension.Values",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.Attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.Attributes",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.Behavior": {
        "Required": "No",
        "Type": "Behavior",
        "UniqueKey": "pinpoint.segment.segmentdimensions.Behavior",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.Demographic": {
        "Required": "No",
        "Type": "Demographic",
        "UniqueKey": "pinpoint.segment.segmentdimensions.Demographic",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.Location": {
        "Required": "No",
        "Type": "Location",
        "UniqueKey": "pinpoint.segment.segmentdimensions.Location",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.Metrics": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.Metrics",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.UserAttributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.UserAttributes",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.behavior.Recency": {
        "Required": "No",
        "Type": "Recency",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.Recency",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.behavior.recency.Duration": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.recency.Duration",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.behavior.recency.RecencyType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.recency.RecencyType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.AppVersion": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.AppVersion",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.Channel": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.Channel",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.DeviceType": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.DeviceType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.Make": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.Make",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.Model": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.Model",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.Platform": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.Platform",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.Country": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.Country",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.GPSPoint": {
        "Required": "No",
        "Type": "GPSPoint",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.GPSPoint",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.Coordinates": {
        "Required": "Yes",
        "Type": "Coordinates",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.Coordinates",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.RangeInKilometers": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.RangeInKilometers",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.Latitude": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.Latitude",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.Longitude": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.Longitude",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.Groups": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "pinpoint.segment.segmentgroups.Groups",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.Include": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.Include",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.Dimensions": {
        "Required": "No",
        "Type": "List of [SegmentDimensions",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.Dimensions",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.SourceSegments": {
        "Required": "No",
        "SampleValue": "TODO-SourceSegments",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.SourceSegments",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.SourceType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.SourceType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.Type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.Type",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.sourcesegments.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcesegments.Id",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.sourcesegments.Version": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcesegments.Version",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.setdimension.DimensionType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.setdimension.DimensionType",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.setdimension.Values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.segment.setdimension.Values",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.deliveryoptions.SendingPoolName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.deliveryoptions.SendingPoolName",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.reputationoptions.ReputationMetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationset.reputationoptions.ReputationMetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.sendingoptions.SendingEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationset.sendingoptions.SendingEnabled",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.tags.Key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.tags.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.trackingoptions.CustomRedirectDomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.trackingoptions.CustomRedirectDomain",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.cloudwatchdestination.DimensionConfigurations": {
        "Required": "No",
        "Type": "List of [DimensionConfiguration",
        "UniqueKey": "pinpointemail.configurationseteventdestination.cloudwatchdestination.DimensionConfigurations",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.DefaultDimensionValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.DefaultDimensionValue",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.DimensionName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.DimensionName",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.DimensionValueSource": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.DimensionValueSource",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.CloudWatchDestination": {
        "Required": "No",
        "Type": "CloudWatchDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.CloudWatchDestination",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.Enabled",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.KinesisFirehoseDestination": {
        "Required": "No",
        "Type": "KinesisFirehoseDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.KinesisFirehoseDestination",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.MatchingEventTypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.MatchingEventTypes",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.PinpointDestination": {
        "Required": "No",
        "Type": "PinpointDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.PinpointDestination",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.SnsDestination": {
        "Required": "No",
        "Type": "SnsDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.SnsDestination",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.DeliveryStreamArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.DeliveryStreamArn",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.IamRoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.IamRoleArn",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.pinpointdestination.ApplicationArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.pinpointdestination.ApplicationArn",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.snsdestination.TopicArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.snsdestination.TopicArn",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.dedicatedippool.tags.Key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.dedicatedippool.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.dedicatedippool.tags.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.dedicatedippool.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.identity.mailfromattributes.BehaviorOnMxFailure": {
        "Required": "No",
        "SampleValue": "TODO-BehaviorOnMxFailure",
        "UniqueKey": "pinpointemail.identity.mailfromattributes.BehaviorOnMxFailure",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.identity.mailfromattributes.MailFromDomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.mailfromattributes.MailFromDomain",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.identity.tags.Key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.tags.Key",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.identity.tags.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.tags.Value",
        "UpdateRequires": "Replacement"
    },
    "qldb.stream.kinesisconfiguration.AggregationEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "qldb.stream.kinesisconfiguration.AggregationEnabled",
        "UpdateRequires": "Replacement"
    },
    "qldb.stream.kinesisconfiguration.StreamArn": {
        "Maximum": "1600",
        "Minimum": "20",
        "Pattern": "^.{20,1600}$",
        "Required": "No",
        "SampleValue": "TODO-qldb.stream.kinesisconfiguration.StreamArn",
        "Type": "String",
        "UniqueKey": "qldb.stream.kinesisconfiguration.StreamArn",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.AllocatedStorage": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "rds.database.instance.AllocatedStorage",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.AllowMajorVersionUpgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.AllowMajorVersionUpgrade",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.AssociatedRoles": {
        "Required": "No",
        "Type": "List of [DBInstanceRole",
        "UniqueKey": "rds.database.instance.AssociatedRoles",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.AutoMinorVersionUpgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.AutoMinorVersionUpgrade",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.AvailabilityZone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.AvailabilityZone",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.BackupRetentionPeriod": {
        "Required": "No",
        "SampleValue": "TODO-BackupRetentionPeriod",
        "UniqueKey": "rds.database.instance.BackupRetentionPeriod",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.CACertificateIdentifier": {
        "Required": "No",
        "SampleValue": "TODO-CACertificateIdentifier",
        "UniqueKey": "rds.database.instance.CACertificateIdentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.CharacterSetName": {
        "Required": "No",
        "SampleValue": "TODO-CharacterSetName",
        "UniqueKey": "rds.database.instance.CharacterSetName",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.CopyTagsToSnapshot": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.CopyTagsToSnapshot",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DBClusterIdentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.DBClusterIdentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DBInstanceClass": {
        "Required": "Yes",
        "SampleValue": "TODO-DBInstanceClass",
        "UniqueKey": "rds.database.instance.DBInstanceClass",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DBInstanceIdentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.DBInstanceIdentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DBName": {
        "Required": "No",
        "SampleValue": "TODO-DBName",
        "UniqueKey": "rds.database.instance.DBName",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DBParameterGroupName": {
        "UniqueKey": "rds.database.instance.DBParameterGroupName"
    },
    "rds.database.instance.DBSecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.database.instance.DBSecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DBSnapshotIdentifier": {
        "Required": "No",
        "SampleValue": "TODO-DBSnapshotIdentifier",
        "UniqueKey": "rds.database.instance.DBSnapshotIdentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DBSubnetGroupName": {
        "Required": "No",
        "SampleValue": "TODO-DBSubnetGroupName",
        "UniqueKey": "rds.database.instance.DBSubnetGroupName",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DeleteAutomatedBackups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.DeleteAutomatedBackups",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DeletionProtection": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.DeletionProtection",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.Domain": {
        "Required": "No",
        "SampleValue": "TODO-Domain",
        "UniqueKey": "rds.database.instance.Domain",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.DomainIAMRoleName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.DomainIAMRoleName",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.EnableCloudwatchLogsExports": {
        "Required": "No",
        "SampleValue": "TODO-EnableCloudwatchLogsExports",
        "UniqueKey": "rds.database.instance.EnableCloudwatchLogsExports",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.EnableIAMDatabaseAuthentication": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.EnableIAMDatabaseAuthentication",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.EnablePerformanceInsights": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.EnablePerformanceInsights",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.Engine": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.Engine",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.EngineVersion": {
        "Required": "No",
        "SampleValue": "TODO-EngineVersion",
        "UniqueKey": "rds.database.instance.EngineVersion",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.Iops": {
        "Required": "No",
        "SampleValue": "TODO-Iops",
        "UniqueKey": "rds.database.instance.Iops",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.KmsKeyId": {
        "Required": "No",
        "SampleValue": "TODO-KmsKeyId",
        "UniqueKey": "rds.database.instance.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.LicenseModel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.LicenseModel",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.MasterUserPassword": {
        "Required": "No",
        "SampleValue": "TODO-MasterUserPassword",
        "UniqueKey": "rds.database.instance.MasterUserPassword",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.MasterUsername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.MasterUsername",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.MaxAllocatedStorage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.database.instance.MaxAllocatedStorage",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.MonitoringInterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.database.instance.MonitoringInterval",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.MonitoringRoleArn": {
        "Required": "No",
        "SampleValue": "TODO-MonitoringRoleArn",
        "UniqueKey": "rds.database.instance.MonitoringRoleArn",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.MultiAZ": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.MultiAZ",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.OptionGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.OptionGroupName",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.PerformanceInsightsKMSKeyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.PerformanceInsightsKMSKeyId",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.PerformanceInsightsRetentionPeriod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.database.instance.PerformanceInsightsRetentionPeriod",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.Port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.Port",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.PreferredBackupWindow": {
        "Required": "No",
        "SampleValue": "TODO-PreferredBackupWindow",
        "UniqueKey": "rds.database.instance.PreferredBackupWindow",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.PreferredMaintenanceWindow": {
        "Required": "No",
        "SampleValue": "TODO-PreferredMaintenanceWindow",
        "UniqueKey": "rds.database.instance.PreferredMaintenanceWindow",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.ProcessorFeatures": {
        "Required": "No",
        "Type": "List of [ProcessorFeature",
        "UniqueKey": "rds.database.instance.ProcessorFeatures",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.PromotionTier": {
        "Required": "No",
        "SampleValue": "TODO-PromotionTier",
        "UniqueKey": "rds.database.instance.PromotionTier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.PubliclyAccessible": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.PubliclyAccessible",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.SourceDBInstanceIdentifier": {
        "Required": "No",
        "SampleValue": "TODO-SourceDBInstanceIdentifier",
        "UniqueKey": "rds.database.instance.SourceDBInstanceIdentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.SourceRegion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.SourceRegion",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.StorageEncrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.StorageEncrypted",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.StorageType": {
        "Required": "No",
        "SampleValue": "TODO-StorageType",
        "UniqueKey": "rds.database.instance.StorageType",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.database.instance.Tags",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.Timezone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.Timezone",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.UseDefaultProcessorFeatures": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.UseDefaultProcessorFeatures",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.VPCSecurityGroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.database.instance.VPCSecurityGroups",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.aws rds describe-db-parameter-groups --query \"DBParameterGroups[].DBParameterGroupName\" --output text": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.aws rds describe-db-parameter-groups --query \"DBParameterGroups[].DBParameterGroupName\" --output text",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.dbclusterrole.FeatureName": {
        "Required": "No",
        "SampleValue": "TODO-FeatureName",
        "UniqueKey": "rds.dbcluster.dbclusterrole.FeatureName",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.dbclusterrole.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbcluster.dbclusterrole.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.scalingconfiguration.AutoPause": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.AutoPause",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.scalingconfiguration.MaxCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.MaxCapacity",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.scalingconfiguration.MinCapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.MinCapacity",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.scalingconfiguration.SecondsUntilAutoPause": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.SecondsUntilAutoPause",
        "UpdateRequires": "Replacement"
    },
    "rds.dbinstance.dbinstancerole.FeatureName": {
        "Required": "Yes",
        "SampleValue": "TODO-FeatureName",
        "UniqueKey": "rds.dbinstance.dbinstancerole.FeatureName",
        "UpdateRequires": "Replacement"
    },
    "rds.dbinstance.dbinstancerole.RoleArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.dbinstancerole.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "rds.dbinstance.processorfeature.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.processorfeature.Name",
        "UpdateRequires": "Replacement"
    },
    "rds.dbinstance.processorfeature.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.processorfeature.Value",
        "UpdateRequires": "Replacement"
    },
    "rds.dbparametergroup.Description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbparametergroup.Description",
        "UpdateRequires": "Replacement"
    },
    "rds.dbparametergroup.Family": {
        "UniqueKey": "rds.dbparametergroup.Family"
    },
    "rds.dbparametergroup.Parameters": {
        "Required": "No",
        "SampleValue": "TODO-Parameters",
        "UniqueKey": "rds.dbparametergroup.Parameters",
        "UpdateRequires": "Replacement"
    },
    "rds.dbparametergroup.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.dbparametergroup.Tags",
        "UpdateRequires": "Replacement"
    },
    "rds.dbparametergroup.aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\"": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbparametergroup.aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\"",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.AuthScheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.AuthScheme",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.Description",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.IAMAuth": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.IAMAuth",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.SecretArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.SecretArn",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.UserName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.UserName",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.tagformat.Key": {
        "Required": "No",
        "SampleValue": "TODO-Key",
        "UniqueKey": "rds.dbproxy.tagformat.Key",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.tagformat.Value": {
        "Required": "No",
        "SampleValue": "TODO-Value",
        "UniqueKey": "rds.dbproxy.tagformat.Value",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.ConnectionBorrowTimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.ConnectionBorrowTimeout",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.InitQuery": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.InitQuery",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.MaxConnectionsPercent": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.MaxConnectionsPercent",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.MaxIdleConnectionsPercent": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.MaxIdleConnectionsPercent",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.SessionPinningFilters": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.SessionPinningFilters",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.DBSecurityGroupMemberships": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.DBSecurityGroupMemberships",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.OptionName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.OptionName",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.OptionSettings": {
        "Required": "No",
        "Type": "List of [OptionSetting",
        "UniqueKey": "rds.optiongroup.optionconfigurations.OptionSettings",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.OptionVersion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.OptionVersion",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.Port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.optiongroup.optionconfigurations.Port",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.VpcSecurityGroupMemberships": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.VpcSecurityGroupMemberships",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.optionsettings.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionsettings.Name",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.optionsettings.Value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionsettings.Value",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.DBSecurityGroupIngress": {
        "Required": "Yes",
        "Type": "List of [Ingress",
        "UniqueKey": "rds.security.group.DBSecurityGroupIngress",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.EC2VpcId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.EC2VpcId",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.GroupDescription": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.security.group.GroupDescription",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.security.group.Tags",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.CIDRIP": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.CIDRIP",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.EC2SecurityGroupId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.EC2SecurityGroupId",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.EC2SecurityGroupName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.EC2SecurityGroupName",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.EC2SecurityGroupOwnerId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.EC2SecurityGroupOwnerId",
        "UpdateRequires": "Replacement"
    },
    "redshift.cluster.loggingproperties.BucketName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "redshift.cluster.loggingproperties.BucketName",
        "UpdateRequires": "Replacement"
    },
    "redshift.cluster.loggingproperties.S3KeyPrefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "redshift.cluster.loggingproperties.S3KeyPrefix",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.query.ResourceTypeFilters": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "resourcegroups.group.query.ResourceTypeFilters",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.query.StackIdentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "resourcegroups.group.query.StackIdentifier",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.query.TagFilter": {
        "Required": "Conditional",
        "Type": "List of [TagFilter",
        "UniqueKey": "resourcegroups.group.query.TagFilter",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.query.TagFilters": {
        "UniqueKey": "resourcegroups.group.query.TagFilters"
    },
    "resourcegroups.group.resourcequery.Query": {
        "Required": "Conditional",
        "Type": "Query",
        "UniqueKey": "resourcegroups.group.resourcequery.Query",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.resourcequery.Type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "resourcegroups.group.resourcequery.Type",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.tagfilter.Key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "resourcegroups.group.tagfilter.Key",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.tagfilter.Values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "resourcegroups.group.tagfilter.Values",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.robotsoftwaresuite.Name": {
        "Allowed values": "ROS | ROS2",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.robotsoftwaresuite.Name",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.robotsoftwaresuite.Version": {
        "Allowed values": "Dashing | Kinetic | Melodic",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.robotsoftwaresuite.Version",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.sourceconfig.Architecture": {
        "Allowed values": "ARM64 | ARMHF | X86_64",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.Architecture",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.sourceconfig.S3Bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.S3Bucket",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.sourceconfig.S3Key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.S3Key",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.renderingengine.Name": {
        "Allowed values": "OGRE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.renderingengine.Name",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.renderingengine.Version": {
        "Maximum": "4",
        "Minimum": "1",
        "Pattern": "1.x",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.renderingengine.Version",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.robotsoftwaresuite.Name": {
        "Allowed values": "ROS | ROS2",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.robotsoftwaresuite.Name",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.robotsoftwaresuite.Version": {
        "Allowed values": "Dashing | Kinetic | Melodic",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.robotsoftwaresuite.Version",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.simulationsoftwaresuite.Name": {
        "Allowed values": "Gazebo | RosbagPlay",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.simulationsoftwaresuite.Name",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.simulationsoftwaresuite.Version": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "7|9|Kinetic|Melodic|Dashing",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.simulationsoftwaresuite.Version",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.sourceconfig.Architecture": {
        "Allowed values": "ARM64 | ARMHF | X86_64",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.Architecture",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.sourceconfig.S3Bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.S3Bucket",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.sourceconfig.S3Key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.S3Key",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.1.DNSName": {
        "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.1.DNSName",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.1.EvaluateTargetHealth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "EvaluateTargetHealth`  <a name=\"cfn-route53-aliastarget-evaluatetargethealth\"></a>\n *Applies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets:* When `EvaluateTargetHealth` is `true`, an alias resource record set inherits the health of the referenced AWS resource, such as an ELB load balancer or another resource record set in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+  **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+  **Application and Network Load Balancers*",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.aliastarget.1.EvaluateTargetHealth",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.1.HostedZoneId": {
        "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/elb.html) table in the \"Elastic Load Balancing Endpoints and Quotas\" topic in the *Amazon Web Services General Reference",
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.1.HostedZoneId",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.DNSName": {
        "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.DNSName",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.EvaluateTargetHealth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Applies only to alias records with any routing policy:* When `EvaluateTargetHealth` is `true`, an alias record inherits the health of the referenced AWS resource, such as an ELB load balancer or another record in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+ **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+ **Application and Network Load Balancers*",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.aliastarget.EvaluateTargetHealth",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.HostedZoneId": {
        "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/elb.html) table in the \"Elastic Load Balancing Endpoints and Quotas\" topic in the *Amazon Web Services General Reference",
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.HostedZoneId",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.alarmidentifier.Name": {
        "Maximum": "256",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "route53.healthcheck.alarmidentifier.Name",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.alarmidentifier.Region": {
        "Required": "Yes",
        "SampleValue": "TODO-Region",
        "UniqueKey": "route53.healthcheck.alarmidentifier.Region",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.AlarmIdentifier": {
        "Required": "No",
        "Type": "AlarmIdentifier",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.AlarmIdentifier",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.ChildHealthChecks": {
        "Maximum": "256",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.ChildHealthChecks",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.EnableSNI": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.EnableSNI",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.FailureThreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.FailureThreshold",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.FullyQualifiedDomainName": {
        "FullyQualifiedDomainName`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname\"></a>\nAmazon Route 53 behavior depends on whether you specify a value for `IPAddress`\\.  \n **If you specify a value for** `IPAddress`:  \nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of `FullyQualifiedDomainName` in the `Host` header for all health checks except TCP health checks\\. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks\\.  \nWhen Route 53 checks the health of an endpoint, here is how it constructs the `Host` header:  \n+ If you specify a value of `80` for `Port` and `HTTP` or `HTTP_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the Host header\\. \n+ If you specify a value of `443` for `Port` and `HTTPS` or `HTTPS_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the `Host` header\\.\n+ If you specify another value for `Port` and any value except `TCP` for `Type`, Route 53 passes `FullyQualifiedDomainName:Port` to the endpoint in the `Host` header\\.\nIf you don't specify a value for `FullyQualifiedDomainName`, Route 53 substitutes the value of `IPAddress` in the `Host` header in each of the preceding cases\\.  \n **If you don't specify a value for `IPAddress` *": "Route 53 sends a DNS request to the domain that you specify for `FullyQualifiedDomainName` at the interval that you specify for `RequestInterval`\\. Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint\\.  \nIf you don't specify a value for `IPAddress`, Route 53 uses only IPv4 to send health checks to the endpoint\\. If there's no record with a type of A for the name that you specify for `FullyQualifiedDomainName`, the health check fails with a \"DNS resolution failed\" error\\.\nIf you want to check the health of multiple records that have the same name and type, such as multiple weighted records, and if you choose to specify the endpoint only by `FullyQualifiedDomainName`, we recommend that you create a separate health check for each endpoint\\. For example, create a health check for each HTTP server that is serving content for www\\.example\\.com\\. For the value of `FullyQualifiedDomainName`, specify the domain name of the server \\(such as us\\-east\\-2\\-www\\.example\\.com\\), not the name of the records \\(www\\.example\\.com\\)\\.  \nIn this configuration, if you create a health check for which the value of `FullyQualifiedDomainName` matches the name of the records and you then associate the health check with those records, health check results will be unpredictable\\.\nIn addition, if the value that you specify for `Type` is `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, or `HTTPS_STR_MATCH`, Route 53 passes the value of `FullyQualifiedDomainName` in the `Host` header, as it does when you specify a value for `IPAddress`\\. If the value of `Type` is `TCP`, Route 53 doesn't pass a `Host` header\\.",
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.FullyQualifiedDomainName",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.HealthThreshold": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^[0,256]}$",
        "Required": "No",
        "SampleValue": "0...256",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.HealthThreshold",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.IPAddress": {
        "IPAddress`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-ipaddress\"></a>\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on\\. If you don't specify a value for `IPAddress`, Route 53 sends a DNS request to resolve the domain name that you specify in `FullyQualifiedDomainName` at the interval that you specify in `RequestInterval`\\. Using an IP address returned by DNS, Route 53 then checks the health of the endpoint\\.  \nUse one of the following formats for the value of `IPAddress`:   \n+  **IPv4 address*": "four values between 0 and 255, separated by periods \\(\\.\\), for example, `192.0.2.44`\\.\n+  **IPv6 address*",
        "Maximum": "45",
        "Pattern": "(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.IPAddress",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.InsufficientDataHealthStatus": {
        "Allowed values": "Healthy | LastKnownStatus | Unhealthy",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.InsufficientDataHealthStatus",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.Inverted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.Inverted",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.MeasureLatency": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.MeasureLatency",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.Port": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.Port",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.Regions": {
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.Regions",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.RequestInterval": {
        "Maximum": "30",
        "Minimum": "10",
        "Pattern": "^[10,30]}$",
        "Required": "No",
        "SampleValue": "10...30",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.RequestInterval",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.ResourcePath": {
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.ResourcePath",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.SearchString": {
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.SearchString",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.Type": {
        "*Important**  \nIf you specify `HTTPS` for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **HTTP\\_STR\\_MATCH*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in `SearchString`\\.\n+  **HTTPS\\_STR\\_MATCH*",
        "Allowed values": "CALCULATED | CLOUDWATCH_METRIC | HTTP | HTTP_STR_MATCH | HTTPS | HTTPS_STR_MATCH | TCP",
        "Required": "Yes",
        "Type": "String",
        "Type`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.Type",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthchecktag.Key": {
        "Key`  <a name=\"cfn-route53-healthcheck-healthchecktag-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
        "Maximum": "128",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthchecktag.Key",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthchecktag.Value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthchecktag.Value",
        "UpdateRequires": "Replacement",
        "Value`  <a name=\"cfn-route53-healthcheck-healthchecktag-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*"
    },
    "route53.hostedzone.hostedzoneconfig.Comment": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzoneconfig.Comment",
        "UpdateRequires": "Replacement"
    },
    "route53.hostedzone.hostedzonetags.Key": {
        "Key`  <a name=\"cfn-route53-hostedzonetags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
        "Maximum": "128",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzonetags.Key",
        "UpdateRequires": "Replacement"
    },
    "route53.hostedzone.hostedzonetags.Value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzonetags.Value",
        "UpdateRequires": "Replacement",
        "Value`  <a name=\"cfn-route53-hostedzonetags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*"
    },
    "route53.hostedzone.queryloggingconfig.CloudWatchLogsLogGroupArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.queryloggingconfig.CloudWatchLogsLogGroupArn",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.AliasTarget": {
        "Required": "No",
        "SampleValue": "TODO-AliasTarget",
        "UniqueKey": "route53.recordset.1.AliasTarget",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.Comment": {
        "Maximum": "256",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.Comment",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.Failover": {
        "Allowed values": "PRIMARY | SECONDARY",
        "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.Failover",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.GeoLocation": {
        "Required": "No",
        "SampleValue": "TODO-GeoLocation",
        "UniqueKey": "route53.recordset.1.GeoLocation",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.HealthCheckId": {
        "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*",
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.HealthCheckId",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.HostedZoneId": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.HostedZoneId",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.HostedZoneName": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.HostedZoneName",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.MultiValueAnswer": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.recordset.1.MultiValueAnswer",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.Name": {
        "Maximum": "1024",
        "Required": "Yes",
        "UniqueKey": "route53.recordset.1.Name",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.Region": {
        "Required": "No",
        "SampleValue": "TODO-Region",
        "UniqueKey": "route53.recordset.1.Region",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.ResourceRecords": {
        "Required": "No",
        "SampleValue": "TODO-ResourceRecords",
        "UniqueKey": "route53.recordset.1.ResourceRecords",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.SetIdentifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.SetIdentifier",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.TTL": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.TTL",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.Type": {
        "Required": "Yes",
        "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
        "UniqueKey": "route53.recordset.1.Type",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.Weight": {
        "Required": "No",
        "SampleValue": "TODO-Weight",
        "UniqueKey": "route53.recordset.1.Weight",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.AliasTarget": {
        "Required": "No",
        "SampleValue": "TODO-AliasTarget",
        "UniqueKey": "route53.recordset.AliasTarget",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.Comment": {
        "Maximum": "256",
        "Required": "No",
        "UniqueKey": "route53.recordset.Comment",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.Failover": {
        "Allowed values": "PRIMARY | SECONDARY",
        "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.Failover",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.GeoLocation": {
        "Required": "No",
        "SampleValue": "TODO-GeoLocation",
        "UniqueKey": "route53.recordset.GeoLocation",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.HealthCheckId": {
        "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*",
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.recordset.HealthCheckId",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.HostedZoneId": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.HostedZoneId",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.HostedZoneName": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.HostedZoneName",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.MultiValueAnswer": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.recordset.MultiValueAnswer",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.Name": {
        "Maximum": "1024",
        "Required": "Yes",
        "UniqueKey": "route53.recordset.Name",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.Region": {
        "Required": "No",
        "SampleValue": "TODO-Region",
        "UniqueKey": "route53.recordset.Region",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.ResourceRecords": {
        "Required": "No",
        "SampleValue": "TODO-ResourceRecords",
        "UniqueKey": "route53.recordset.ResourceRecords",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.SetIdentifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.recordset.SetIdentifier",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.TTL": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.TTL",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.Type": {
        "Required": "Yes",
        "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
        "UniqueKey": "route53.recordset.Type",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.Weight": {
        "Required": "No",
        "SampleValue": "TODO-Weight",
        "UniqueKey": "route53.recordset.Weight",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.1.ContinentCode": {
        "ContinentCode`  <a name=\"cfn-route53-recordset-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
        "Maximum": "2",
        "Minimum": "2",
        "Pattern": "^.{2,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.ContinentCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.ContinentCode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.1.CountryCode": {
        "Maximum": "2",
        "Minimum": "1",
        "Pattern": "^.{1,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.CountryCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.CountryCode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.1.SubdivisionCode": {
        "Maximum": "3",
        "Minimum": "1",
        "Pattern": "^.{1,3}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.SubdivisionCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.SubdivisionCode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.ContinentCode": {
        "ContinentCode`  <a name=\"cfn-route53-recordsetgroup-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
        "Maximum": "2",
        "Minimum": "2",
        "Pattern": "^.{2,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.ContinentCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.ContinentCode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.CountryCode": {
        "Maximum": "2",
        "Minimum": "1",
        "Pattern": "^.{1,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.CountryCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.CountryCode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.SubdivisionCode": {
        "Maximum": "3",
        "Minimum": "1",
        "Pattern": "^.{1,3}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.SubdivisionCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.SubdivisionCode",
        "UpdateRequires": "Replacement"
    },
    "route53resolver.resolverendpoint.ipaddressrequest.Ip": {
        "Maximum": "36",
        "Minimum": "7",
        "Pattern": "^.{7,36}$",
        "Required": "No",
        "SampleValue": "TODO-route53resolver.resolverendpoint.ipaddressrequest.Ip",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverendpoint.ipaddressrequest.Ip",
        "UpdateRequires": "Replacement"
    },
    "route53resolver.resolverendpoint.ipaddressrequest.SubnetId": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "Yes",
        "SampleValue": "TODO-route53resolver.resolverendpoint.ipaddressrequest.SubnetId",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverendpoint.ipaddressrequest.SubnetId",
        "UpdateRequires": "Replacement"
    },
    "route53resolver.resolverrule.targetaddress.Ip": {
        "Maximum": "36",
        "Minimum": "7",
        "Pattern": "^.{7,36}$",
        "Required": "Yes",
        "SampleValue": "TODO-route53resolver.resolverrule.targetaddress.Ip",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverrule.targetaddress.Ip",
        "UpdateRequires": "Replacement"
    },
    "route53resolver.resolverrule.targetaddress.Port": {
        "Maximum": "65535",
        "Minimum": "0",
        "Pattern": "^.{0,65535}$",
        "Required": "No",
        "SampleValue": "TODO-route53resolver.resolverrule.targetaddress.Port",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverrule.targetaddress.Port",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.BlockPublicAcls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.BlockPublicAcls",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.BlockPublicPolicy": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.BlockPublicPolicy",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.IgnorePublicAcls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.IgnorePublicAcls",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.RestrictPublicBuckets": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.RestrictPublicBuckets",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.vpcconfiguration.VpcId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.accesspoint.vpcconfiguration.VpcId",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.AccelerateConfiguration": {
        "Required": "No",
        "SampleValue": "TODO-AccelerateConfiguration",
        "UniqueKey": "s3.bucket.AccelerateConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.AccessControl": {
        "Required": "No",
        "SampleValue": "TODO-AccessControl",
        "UniqueKey": "s3.bucket.AccessControl",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.AnalyticsConfigurations": {
        "Required": "No",
        "Type": "List of [AnalyticsConfiguration",
        "UniqueKey": "s3.bucket.AnalyticsConfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.BucketEncryption": {
        "Required": "No",
        "SampleValue": "TODO-BucketEncryption",
        "UniqueKey": "s3.bucket.BucketEncryption",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.BucketName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.BucketName",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.CorsConfiguration": {
        "Required": "No",
        "SampleValue": "TODO-CorsConfiguration",
        "UniqueKey": "s3.bucket.CorsConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.InventoryConfigurations": {
        "Required": "No",
        "SampleValue": "TODO-InventoryConfigurations",
        "UniqueKey": "s3.bucket.InventoryConfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.LifecycleConfiguration": {
        "Required": "No",
        "SampleValue": "TODO-LifecycleConfiguration",
        "UniqueKey": "s3.bucket.LifecycleConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.LoggingConfiguration": {
        "Required": "No",
        "Type": "LoggingConfiguration",
        "UniqueKey": "s3.bucket.LoggingConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.MetricsConfigurations": {
        "Required": "No",
        "SampleValue": "TODO-MetricsConfigurations",
        "UniqueKey": "s3.bucket.MetricsConfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.NotificationConfiguration": {
        "Required": "No",
        "Type": "NotificationConfiguration",
        "UniqueKey": "s3.bucket.NotificationConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.ObjectLockConfiguration": {
        "Required": "No",
        "SampleValue": "TODO-ObjectLockConfiguration",
        "UniqueKey": "s3.bucket.ObjectLockConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.ObjectLockEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.ObjectLockEnabled",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.PublicAccessBlockConfiguration": {
        "Required": "No",
        "Type": "PublicAccessBlockConfiguration",
        "UniqueKey": "s3.bucket.PublicAccessBlockConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.ReplicationConfiguration": {
        "Required": "No",
        "Type": "ReplicationConfiguration",
        "UniqueKey": "s3.bucket.ReplicationConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "s3.bucket.Tags",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.VersioningConfiguration": {
        "Required": "No",
        "Type": "VersioningConfiguration",
        "UniqueKey": "s3.bucket.VersioningConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.WebsiteConfiguration": {
        "Required": "No",
        "Type": "WebsiteConfiguration",
        "UniqueKey": "s3.bucket.WebsiteConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.abortincompletemultipartupload.DaysAfterInitiation": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.abortincompletemultipartupload.DaysAfterInitiation",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.accelerateconfiguration.AccelerationStatus": {
        "Allowed values": "Enabled | Suspended",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.accelerateconfiguration.AccelerationStatus",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.accesscontroltranslation.Owner": {
        "Required": "Yes",
        "SampleValue": "TODO-Owner",
        "UniqueKey": "s3.bucket.accesscontroltranslation.Owner",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfiguration.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.analyticsconfiguration.Id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfiguration.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.analyticsconfiguration.Prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfiguration.StorageClassAnalysis": {
        "Required": "Yes",
        "Type": "StorageClassAnalysis",
        "UniqueKey": "s3.bucket.analyticsconfiguration.StorageClassAnalysis",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfiguration.TagFilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.analyticsconfiguration.TagFilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.bucketencryption.ServerSideEncryptionConfiguration": {
        "Required": "Yes",
        "Type": "List of [ServerSideEncryptionRule",
        "UniqueKey": "s3.bucket.bucketencryption.ServerSideEncryptionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.CorsRules": {
        "Required": "Yes",
        "Type": "List of [CorsRule",
        "UniqueKey": "s3.bucket.cors.CorsRules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.AllowedHeaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.AllowedHeaders",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.AllowedMethods": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.AllowedMethods",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.AllowedOrigins": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.AllowedOrigins",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.ExposedHeaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.ExposedHeaders",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.Id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.cors.corsrule.Id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.MaxAge": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.cors.corsrule.MaxAge",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.dataexport.Destination": {
        "Required": "Yes",
        "Type": "Destination",
        "UniqueKey": "s3.bucket.dataexport.Destination",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.dataexport.OutputSchemaVersion": {
        "Allowed values": "V_1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.dataexport.OutputSchemaVersion",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.defaultretention.Days": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.defaultretention.Days",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.defaultretention.Mode": {
        "Allowed values": "COMPLIANCE | GOVERNANCE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.defaultretention.Mode",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.defaultretention.Years": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.defaultretention.Years",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.deletemarkerreplication.Status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.deletemarkerreplication.Status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.destination.BucketAccountId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.BucketAccountId",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.destination.BucketArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.BucketArn",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.destination.Format": {
        "Allowed values": "CSV",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.Format",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.destination.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.Prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.encryptionconfiguration.ReplicaKmsKeyID": {
        "Required": "Yes",
        "SampleValue": "TODO-ReplicaKmsKeyID",
        "UniqueKey": "s3.bucket.encryptionconfiguration.ReplicaKmsKeyID",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.Destination": {
        "Required": "Yes",
        "Type": "Destination",
        "UniqueKey": "s3.bucket.inventoryconfiguration.Destination",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.inventoryconfiguration.Enabled",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.Id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.IncludedObjectVersions": {
        "Allowed values": "All | Current",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.IncludedObjectVersions",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.OptionalFields": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.OptionalFields",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.Prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.ScheduleFrequency": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.ScheduleFrequency",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.Rules": {
        "Required": "Yes",
        "Type": "List of [Rule",
        "UniqueKey": "s3.bucket.lifecycleconfig.Rules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.AbortIncompleteMultipartUpload": {
        "Required": "Conditional",
        "Type": "AbortIncompleteMultipartUpload",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.AbortIncompleteMultipartUpload",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.ExpirationDate": {
        "Required": "Conditional",
        "Type": "Timestamp",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.ExpirationDate",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.ExpirationInDays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.ExpirationInDays",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.Id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.Id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.NoncurrentVersionExpirationInDays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.NoncurrentVersionExpirationInDays",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.NoncurrentVersionTransition": {
        "Required": "Conditional",
        "Type": "NoncurrentVersionTransition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.NoncurrentVersionTransition",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.NoncurrentVersionTransitions": {
        "Required": "Conditional",
        "Type": "List of [NoncurrentVersionTransition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.NoncurrentVersionTransitions",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.Prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.Status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.Status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.TagFilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.TagFilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.Transition": {
        "Required": "Conditional",
        "Type": "Transition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.Transition",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.Transitions": {
        "Required": "Conditional",
        "Type": "List of [Transition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.Transitions",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.StorageClass": {
        "Allowed values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.StorageClass",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.TransitionInDays": {
        "Required": "Yes",
        "SampleValue": "TODO-TransitionInDays",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.TransitionInDays",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.transition.StorageClass": {
        "Allowed values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.StorageClass",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.transition.TransitionDate": {
        "Required": "Conditional",
        "Type": "Timestamp",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.TransitionDate",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.transition.TransitionInDays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.TransitionInDays",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.loggingconfig.DestinationBucketName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.loggingconfig.DestinationBucketName",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.loggingconfig.LogFilePrefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.loggingconfig.LogFilePrefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metrics.EventThreshold": {
        "Required": "Yes",
        "Type": "ReplicationTimeValue",
        "UniqueKey": "s3.bucket.metrics.EventThreshold",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metrics.Status": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.metrics.Status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metricsconfiguration.Id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.metricsconfiguration.Id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metricsconfiguration.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.metricsconfiguration.Prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metricsconfiguration.TagFilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.metricsconfiguration.TagFilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.LambdaConfigurations": {
        "Required": "No",
        "Type": "List of [LambdaConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.LambdaConfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.QueueConfigurations": {
        "Required": "No",
        "Type": "List of [QueueConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.QueueConfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.TopicConfigurations": {
        "Required": "No",
        "Type": "List of [TopicConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.TopicConfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.lambdaconfig.Event": {
        "Required": "Yes",
        "SampleValue": "TODO-Event",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.Event",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.lambdaconfig.Filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.Filter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.lambdaconfig.Function": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.Function",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.queueconfig.Event": {
        "Required": "Yes",
        "SampleValue": "TODO-Event",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.Event",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.queueconfig.Filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.Filter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.queueconfig.Queue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.Queue",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.topicconfig.Event": {
        "Required": "Yes",
        "SampleValue": "TODO-Event",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.Event",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.topicconfig.Filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.Filter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.topicconfig.Topic": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.Topic",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration.config.filter.S3Key": {
        "Required": "Yes",
        "Type": "S3KeyFilter",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.S3Key",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.Rules": {
        "Required": "Yes",
        "Type": "List of [FilterRule",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.Rules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules.Name": {
        "Required": "Yes",
        "SampleValue": "TODO-Name",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.rules.Name",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.rules.Value",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockconfiguration.ObjectLockEnabled": {
        "Allowed values": "Enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.objectlockconfiguration.ObjectLockEnabled",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockconfiguration.Rule": {
        "Required": "No",
        "Type": "ObjectLockRule",
        "UniqueKey": "s3.bucket.objectlockconfiguration.Rule",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockrule.DefaultRetention": {
        "Required": "No",
        "Type": "DefaultRetention",
        "UniqueKey": "s3.bucket.objectlockrule.DefaultRetention",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration.BlockPublicAcls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.BlockPublicAcls",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration.BlockPublicPolicy": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.BlockPublicPolicy",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration.IgnorePublicAcls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.IgnorePublicAcls",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration.RestrictPublicBuckets": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.RestrictPublicBuckets",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.Role": {
        "Required": "Yes",
        "SampleValue": "TODO-Role",
        "UniqueKey": "s3.bucket.replicationconfiguration.Role",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.Rules": {
        "Required": "Yes",
        "Type": "List of [ReplicationRule",
        "UniqueKey": "s3.bucket.replicationconfiguration.Rules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.DeleteMarkerReplication": {
        "Required": "No",
        "Type": "DeleteMarkerReplication",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.DeleteMarkerReplication",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.Destination": {
        "Required": "Yes",
        "Type": "ReplicationDestination",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.Destination",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.Filter": {
        "Required": "No",
        "Type": "ReplicationRuleFilter",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.Filter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.Id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.Id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.Prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.Priority": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.Priority",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.SourceSelectionCriteria": {
        "Required": "No",
        "Type": "SourceSelectionCriteria",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.SourceSelectionCriteria",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.Status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.Status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.AccessControlTranslation": {
        "Required": "No",
        "Type": "AccessControlTranslation",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.AccessControlTranslation",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.Account": {
        "Required": "Conditional",
        "SampleValue": "TODO-Account",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.Account",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.Bucket",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.EncryptionConfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.EncryptionConfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.Metrics": {
        "Required": "No",
        "Type": "Metrics",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.Metrics",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.ReplicationTime": {
        "Required": "No",
        "Type": "ReplicationTime",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.ReplicationTime",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.StorageClass": {
        "Required": "No",
        "SampleValue": "TODO-StorageClass",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.StorageClass",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationruleandoperator.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationruleandoperator.Prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationruleandoperator.TagFilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.replicationruleandoperator.TagFilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationrulefilter.And": {
        "Required": "No",
        "Type": "ReplicationRuleAndOperator",
        "UniqueKey": "s3.bucket.replicationrulefilter.And",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationrulefilter.Prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationrulefilter.Prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationrulefilter.TagFilter": {
        "Required": "No",
        "Type": "TagFilter",
        "UniqueKey": "s3.bucket.replicationrulefilter.TagFilter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationtime.Status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationtime.Status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationtime.Time": {
        "Required": "Yes",
        "Type": "ReplicationTimeValue",
        "UniqueKey": "s3.bucket.replicationtime.Time",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationtimevalue.Minutes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.replicationtimevalue.Minutes",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.serversideencryptionbydefault.KMSMasterKeyID": {
        "Required": "No",
        "SampleValue": "TODO-KMSMasterKeyID",
        "UniqueKey": "s3.bucket.serversideencryptionbydefault.KMSMasterKeyID",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.serversideencryptionbydefault.SSEAlgorithm": {
        "Allowed values": "AES256 | aws:kms",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.serversideencryptionbydefault.SSEAlgorithm",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.serversideencryptionrule.ServerSideEncryptionByDefault": {
        "Required": "No",
        "Type": "ServerSideEncryptionByDefault",
        "UniqueKey": "s3.bucket.serversideencryptionrule.ServerSideEncryptionByDefault",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.sourceselectioncriteria.SseKmsEncryptedObjects": {
        "Required": "Yes",
        "Type": "SseKmsEncryptedObjects",
        "UniqueKey": "s3.bucket.sourceselectioncriteria.SseKmsEncryptedObjects",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.ssekmsencryptedobjects.Status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.ssekmsencryptedobjects.Status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.storageclassanalysis.DataExport": {
        "Required": "No",
        "Type": "DataExport",
        "UniqueKey": "s3.bucket.storageclassanalysis.DataExport",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.tagfilter.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.tagfilter.Key",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.tagfilter.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.tagfilter.Value",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.versioningconfig.Status": {
        "Allowed values": "Enabled | Suspended",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.versioningconfig.Status",
        "UpdateRequires": "Replacement"
    },
    "s3.policy.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.policy.Bucket",
        "UpdateRequires": "Replacement"
    },
    "s3.policy.PolicyDocument": {
        "Required": "Yes",
        "SampleValue": "TODO-PolicyDocument",
        "UniqueKey": "s3.policy.PolicyDocument",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.ErrorDocument": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.ErrorDocument",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.IndexDocument": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.IndexDocument",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.RedirectAllRequestsTo": {
        "Required": "No",
        "Type": "RedirectAllRequestsTo",
        "UniqueKey": "s3.websiteconfiguration.RedirectAllRequestsTo",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.RoutingRules": {
        "Required": "No",
        "Type": "List of [RoutingRule",
        "UniqueKey": "s3.websiteconfiguration.RoutingRules",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.redirectallrequeststo.HostName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.redirectallrequeststo.HostName",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.redirectallrequeststo.Protocol": {
        "Allowed values": "http | https",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.redirectallrequeststo.Protocol",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.RedirectRule": {
        "Required": "Yes",
        "Type": "RedirectRule",
        "UniqueKey": "s3.websiteconfiguration.routingrules.RedirectRule",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.RoutingRuleCondition": {
        "Required": "No",
        "Type": "RoutingRuleCondition",
        "UniqueKey": "s3.websiteconfiguration.routingrules.RoutingRuleCondition",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.HostName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.HostName",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.HttpRedirectCode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.HttpRedirectCode",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.Protocol": {
        "Allowed values": "http | https",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.Protocol",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.ReplaceKeyPrefixWith": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.ReplaceKeyPrefixWith",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.ReplaceKeyWith": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.ReplaceKeyWith",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.routingrulecondition.HttpErrorCodeReturnedEquals": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.routingrulecondition.HttpErrorCodeReturnedEquals",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.routingrulecondition.KeyPrefixEquals": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.routingrulecondition.KeyPrefixEquals",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.coderepository.gitconfig.Branch": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[^ ~^:?*\\[]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.Branch",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.coderepository.gitconfig.RepositoryUrl": {
        "Pattern": "^https://([^/]+)/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.RepositoryUrl",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.coderepository.gitconfig.SecretArn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.SecretArn",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.variantproperty.VariantPropertyType": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.endpoint.variantproperty.VariantPropertyType",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.captureoption.CaptureMode": {
        "Allowed values": "Input | Output",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.captureoption.CaptureMode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.CaptureContentTypeHeader": {
        "Required": "No",
        "Type": "CaptureContentTypeHeader",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.CaptureContentTypeHeader",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.CaptureOptions": {
        "Maximum": "2",
        "Required": "Yes",
        "Type": "List of [CaptureOption",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.CaptureOptions",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.DestinationS3Uri": {
        "Maximum": "512",
        "Pattern": "^(https|s3)://([^/])/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.DestinationS3Uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.EnableCapture": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.EnableCapture",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.InitialSamplingPercentage": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "Yes",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.InitialSamplingPercentage",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.KmsKeyId": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader.CsvContentTypes": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader.CsvContentTypes",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader.JsonContentTypes": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader.JsonContentTypes",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.AcceleratorType": {
        "Allowed values": "ml.eia1.large | ml.eia1.medium | ml.eia1.xlarge | ml.eia2.large | ml.eia2.medium | ml.eia2.xlarge",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.AcceleratorType",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.InitialInstanceCount": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.InitialInstanceCount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.InitialVariantWeight": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.InitialVariantWeight",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.InstanceType": {
        "Allowed values": "ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.large | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.c5d.18xlarge | ml.c5d.2xlarge | ml.c5d.4xlarge | ml.c5d.9xlarge | ml.c5d.large | ml.c5d.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.inf1.24xlarge | ml.inf1.2xlarge | ml.inf1.6xlarge | ml.inf1.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.r5.12xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.large | ml.r5.xlarge | ml.r5d.12xlarge | ml.r5d.24xlarge | ml.r5d.2xlarge | ml.r5d.4xlarge | ml.r5d.large | ml.r5d.xlarge | ml.t2.2xlarge | ml.t2.large | ml.t2.medium | ml.t2.xlarge",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.ModelName": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.ModelName",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.VariantName": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.VariantName",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.ContainerHostname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.ContainerHostname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.Environment": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "sagemaker.model.containerdefinition.Environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.Image": {
        "Maximum": "255",
        "Pattern": "[\\S]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.Image",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.Mode": {
        "Allowed values": "MultiModel | SingleModel",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.Mode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.ModelDataUrl": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "UniqueKey": "sagemaker.model.containerdefinition.ModelDataUrl",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.ModelPackageName": {
        "Maximum": "170",
        "Minimum": "1",
        "Pattern": "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:[a-z\\-]*\\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.ModelPackageName",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.vpcconfig.SecurityGroupIds": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.model.vpcconfig.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.vpcconfig.Subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.model.vpcconfig.Subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.baselineconfig.ConstraintsResource": {
        "Required": "No",
        "Type": "ConstraintsResource",
        "UniqueKey": "sagemaker.monitoringschedule.baselineconfig.ConstraintsResource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.baselineconfig.StatisticsResource": {
        "Required": "No",
        "Type": "StatisticsResource",
        "UniqueKey": "sagemaker.monitoringschedule.baselineconfig.StatisticsResource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.clusterconfig.InstanceCount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.monitoringschedule.clusterconfig.InstanceCount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.clusterconfig.InstanceType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.clusterconfig.InstanceType",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.clusterconfig.VolumeKmsKeyId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.clusterconfig.VolumeKmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.clusterconfig.VolumeSizeInGB": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.monitoringschedule.clusterconfig.VolumeSizeInGB",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.constraintsresource.S3Uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.constraintsresource.S3Uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.endpointinput.EndpointName": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.endpointinput.EndpointName",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.endpointinput.LocalPath": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.endpointinput.LocalPath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.endpointinput.S3DataDistributionType": {
        "Allowed values": "FullyReplicated | ShardedByS3Key",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.endpointinput.S3DataDistributionType",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.endpointinput.S3InputMode": {
        "Allowed values": "File | Pipe",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.endpointinput.S3InputMode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.ContainerArguments": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.ContainerArguments",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.ContainerEntrypoint": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.ContainerEntrypoint",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.ImageUri": {
        "Maximum": "255",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.ImageUri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.PostAnalyticsProcessorSourceUri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.PostAnalyticsProcessorSourceUri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.RecordPreprocessorSourceUri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.RecordPreprocessorSourceUri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.CreationTime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.CreationTime",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.EndpointName": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.EndpointName",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.FailureReason": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.FailureReason",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.LastModifiedTime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.LastModifiedTime",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.MonitoringExecutionStatus": {
        "Allowed values": "Completed | CompletedWithViolations | Failed | InProgress | Pending | Stopped | Stopping",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.MonitoringExecutionStatus",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.MonitoringScheduleName": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.MonitoringScheduleName",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.ProcessingJobArn": {
        "Maximum": "256",
        "Pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:processing-job/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.ProcessingJobArn",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.ScheduledTime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.ScheduledTime",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringinput.EndpointInput": {
        "Required": "Yes",
        "Type": "EndpointInput",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringinput.EndpointInput",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringinputs.MonitoringInputs": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringinputs.MonitoringInputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.BaselineConfig": {
        "Required": "No",
        "Type": "BaselineConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.BaselineConfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.Environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.Environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.MonitoringAppSpecification": {
        "Required": "Yes",
        "Type": "MonitoringAppSpecification",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.MonitoringAppSpecification",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.MonitoringInputs": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "MonitoringInputs",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.MonitoringInputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.MonitoringOutputConfig": {
        "Required": "Yes",
        "Type": "MonitoringOutputConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.MonitoringOutputConfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.MonitoringResources": {
        "Required": "Yes",
        "Type": "MonitoringResources",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.MonitoringResources",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.NetworkConfig": {
        "Required": "No",
        "Type": "NetworkConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.NetworkConfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.RoleArn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.RoleArn",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.StoppingCondition": {
        "Required": "No",
        "Type": "StoppingCondition",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.StoppingCondition",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringoutput.S3Output": {
        "Required": "Yes",
        "Type": "S3Output",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringoutput.S3Output",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringoutputconfig.KmsKeyId": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringoutputconfig.KmsKeyId",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringoutputconfig.MonitoringOutputs": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [MonitoringOutput",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringoutputconfig.MonitoringOutputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringresources.ClusterConfig": {
        "Required": "Yes",
        "Type": "ClusterConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringresources.ClusterConfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringscheduleconfig.MonitoringJobDefinition": {
        "Required": "Yes",
        "Type": "MonitoringJobDefinition",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringscheduleconfig.MonitoringJobDefinition",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringscheduleconfig.ScheduleConfig": {
        "Required": "No",
        "Type": "ScheduleConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringscheduleconfig.ScheduleConfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.networkconfig.EnableInterContainerTrafficEncryption": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.monitoringschedule.networkconfig.EnableInterContainerTrafficEncryption",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.networkconfig.EnableNetworkIsolation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.monitoringschedule.networkconfig.EnableNetworkIsolation",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.networkconfig.VpcConfig": {
        "Required": "No",
        "Type": "VpcConfig",
        "UniqueKey": "sagemaker.monitoringschedule.networkconfig.VpcConfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.s3output.LocalPath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.s3output.LocalPath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.s3output.S3UploadMode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.s3output.S3UploadMode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.s3output.S3Uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.s3output.S3Uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.scheduleconfig.ScheduleExpression": {
        "Maximum": "256",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "sagemaker.monitoringschedule.scheduleconfig.ScheduleExpression",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.statisticsresource.S3Uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.statisticsresource.S3Uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.stoppingcondition.MaxRuntimeInSeconds": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.monitoringschedule.stoppingcondition.MaxRuntimeInSeconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.vpcconfig.SecurityGroupIds": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.monitoringschedule.vpcconfig.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.vpcconfig.Subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.monitoringschedule.vpcconfig.Subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.Content": {
        "Maximum": "16384",
        "Minimum": "1",
        "Pattern": "[\\S\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.Content",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.cognitomemberdefinition.CognitoClientId": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.CognitoClientId",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.cognitomemberdefinition.CognitoUserGroup": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.CognitoUserGroup",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.cognitomemberdefinition.CognitoUserPool": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.CognitoUserPool",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.memberdefinition.CognitoMemberDefinition": {
        "Required": "Yes",
        "Type": "CognitoMemberDefinition",
        "UniqueKey": "sagemaker.workteam.memberdefinition.CognitoMemberDefinition",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.notificationconfiguration.NotificationTopicArn": {
        "Pattern": "arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.notificationconfiguration.NotificationTopicArn",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.KmsKeyArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.KmsKeyArn",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.MasterSecretArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.MasterSecretArn",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.MasterSecretKmsKeyArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.MasterSecretKmsKeyArn",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.RotationLambdaName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.RotationLambdaName",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.RotationType": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.RotationType",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.VpcSecurityGroupIds": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.VpcSecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.VpcSubnetIds": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.VpcSubnetIds",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.rotationrules.AutomaticallyAfterDays": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "secretsmanager.rotationschedule.rotationrules.AutomaticallyAfterDays",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.secret.generatesecretstring.ExcludeCharacters": {
        "Maximum": "4096",
        "Minimum": "0",
        "Pattern": "^.{0,4096}$",
        "Required": "No",
        "SampleValue": "TODO-secretsmanager.secret.generatesecretstring.ExcludeCharacters",
        "Type": "String",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.ExcludeCharacters",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.secret.generatesecretstring.ExcludeLowercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.ExcludeLowercase",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.secret.generatesecretstring.ExcludeNumbers": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.ExcludeNumbers",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.secret.generatesecretstring.ExcludePunctuation": {
        "UniqueKey": "secretsmanager.secret.generatesecretstring.ExcludePunctuation"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.Description": {
        "Maximum": "8192",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.Description",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.DisableTemplateValidation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.DisableTemplateValidation",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.Info": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.Info",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.Name": {
        "Maximum": "8192",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.Name",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.Key": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^.{1,1000}$",
        "Required": "Yes",
        "SampleValue": "TODO-servicecatalog.cloudformationprovisionedproduct.provisioningparameter.Key",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.Key",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.Value": {
        "Maximum": "4096",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.Value",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetAccounts": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetAccounts",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetFailureToleranceCount": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetFailureToleranceCount",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetFailureTolerancePercentage": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "No",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetFailureTolerancePercentage",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetMaxConcurrencyCount": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetMaxConcurrencyCount",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetMaxConcurrencyPercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetMaxConcurrencyPercentage",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetOperationType": {
        "Allowed values": "CREATE | DELETE | UPDATE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetOperationType",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetRegions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetRegions",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsconfig.DnsRecords": {
        "Required": "Yes",
        "Type": "List of [DnsRecord",
        "UniqueKey": "servicediscovery.service.dnsconfig.DnsRecords",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsconfig.NamespaceId": {
        "Maximum": "64",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicediscovery.service.dnsconfig.NamespaceId",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsconfig.RoutingPolicy": {
        "Required": "No",
        "SampleValue": "TODO-RoutingPolicy",
        "UniqueKey": "servicediscovery.service.dnsconfig.RoutingPolicy",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsrecord.TTL": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "servicediscovery.service.dnsrecord.TTL",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsrecord.Type": {
        "UniqueKey": "servicediscovery.service.dnsrecord.Type"
    },
    "servicediscovery.service.dnsrecord.priority weight port service-hostname": {
        "Allowed values": "A | AAAA | CNAME | SRV",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "servicediscovery.service.dnsrecord.priority weight port service-hostname",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.healthcheckconfig.FailureThreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.FailureThreshold",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.healthcheckconfig.ResourcePath": {
        "Maximum": "255",
        "Required": "No",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.ResourcePath",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.healthcheckconfig.Type": {
        "*Important**  \nIf you specify HTTPS for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **TCP*": "Route\u00a053 tries to establish a TCP connection\\.\n\n  If you specify `TCP` for `Type`, don't specify a value for `ResourcePath`\\.\nFor more information, see [How Route\u00a053 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) in the *Route\u00a053 Developer Guide*\\.",
        "Allowed values": "HTTP | HTTPS | TCP",
        "Required": "Yes",
        "Type": "String",
        "Type`  <a name=\"cfn-servicediscovery-service-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Route\u00a053 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route\u00a053 tries to establish a TCP connection\\. If successful, Route\u00a053 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.Type",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.healthcheckcustomconfig.FailureThreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "servicediscovery.service.healthcheckcustomconfig.FailureThreshold",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.cloudwatchdestination.DimensionConfigurations": {
        "Required": "No",
        "Type": "List of [DimensionConfiguration",
        "UniqueKey": "ses.configurationseteventdestination.cloudwatchdestination.DimensionConfigurations",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.DefaultDimensionValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.DefaultDimensionValue",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.DimensionName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.DimensionName",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.DimensionValueSource": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.DimensionValueSource",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.CloudWatchDestination": {
        "Required": "No",
        "Type": "CloudWatchDestination",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.CloudWatchDestination",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.Enabled",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.KinesisFirehoseDestination": {
        "Required": "No",
        "Type": "KinesisFirehoseDestination",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.KinesisFirehoseDestination",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.MatchingEventTypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.MatchingEventTypes",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.Name",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.kinesisfirehosedestination.DeliveryStreamARN": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.kinesisfirehosedestination.DeliveryStreamARN",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.kinesisfirehosedestination.IAMRoleARN": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.kinesisfirehosedestination.IAMRoleARN",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptfilter.filter.IpFilter": {
        "Required": "Yes",
        "Type": "IpFilter",
        "UniqueKey": "ses.receiptfilter.filter.IpFilter",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptfilter.filter.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.filter.Name",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptfilter.ipfilter.Cidr": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.ipfilter.Cidr",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptfilter.ipfilter.Policy": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.ipfilter.Policy",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.AddHeaderAction": {
        "Required": "No",
        "Type": "AddHeaderAction",
        "UniqueKey": "ses.receiptrule.action.AddHeaderAction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.BounceAction": {
        "Required": "No",
        "Type": "BounceAction",
        "UniqueKey": "ses.receiptrule.action.BounceAction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.LambdaAction": {
        "Required": "No",
        "Type": "LambdaAction",
        "UniqueKey": "ses.receiptrule.action.LambdaAction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.S3Action": {
        "Required": "No",
        "Type": "S3Action",
        "UniqueKey": "ses.receiptrule.action.S3Action",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.SNSAction": {
        "Required": "No",
        "Type": "SNSAction",
        "UniqueKey": "ses.receiptrule.action.SNSAction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.StopAction": {
        "Required": "No",
        "Type": "StopAction",
        "UniqueKey": "ses.receiptrule.action.StopAction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.WorkmailAction": {
        "Required": "No",
        "Type": "WorkmailAction",
        "UniqueKey": "ses.receiptrule.action.WorkmailAction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.addheaderaction.HeaderName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.addheaderaction.HeaderName",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.addheaderaction.HeaderValue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.addheaderaction.HeaderValue",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.Message": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.Message",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.Sender": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.Sender",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.SmtpReplyCode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.SmtpReplyCode",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.StatusCode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.StatusCode",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.TopicArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.TopicArn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.lambdaaction.FunctionArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.FunctionArn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.lambdaaction.InvocationType": {
        "Allowed values": "Event | RequestResponse",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.InvocationType",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.lambdaaction.TopicArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.TopicArn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.Actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "ses.receiptrule.rule.Actions",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.receiptrule.rule.Enabled",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.Name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.rule.Name",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.Recipients": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ses.receiptrule.rule.Recipients",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.ScanEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.receiptrule.rule.ScanEnabled",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.TlsPolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.rule.TlsPolicy",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.s3action.BucketName": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.BucketName",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.s3action.KmsKeyArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.KmsKeyArn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.s3action.ObjectKeyPrefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.ObjectKeyPrefix",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.s3action.TopicArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.TopicArn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.snsaction.Encoding": {
        "Allowed values": "Base64 | UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.snsaction.Encoding",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.snsaction.TopicArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.snsaction.TopicArn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.stopaction.Scope": {
        "Allowed values": "RuleSet",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.stopaction.Scope",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.stopaction.TopicArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.stopaction.TopicArn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.workmailaction.OrganizationArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.workmailaction.OrganizationArn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.workmailaction.TopicArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.workmailaction.TopicArn",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.HtmlPart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.HtmlPart",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.SubjectPart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.SubjectPart",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.TemplateName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.TemplateName",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.TextPart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.TextPart",
        "UpdateRequires": "Replacement"
    },
    "simpledb.Description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "simpledb.Description",
        "UpdateRequires": "Replacement"
    },
    "sns.policy.PolicyDocument": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "sns.policy.PolicyDocument",
        "UpdateRequires": "Replacement"
    },
    "sns.policy.Topics": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sns.policy.Topics",
        "UpdateRequires": "Replacement"
    },
    "sns.subscription.Endpoint": {
        "Required": "Yes",
        "SampleValue": "TODO-Endpoint",
        "UniqueKey": "sns.subscription.Endpoint",
        "UpdateRequires": "Replacement"
    },
    "sns.subscription.Protocol": {
        "Required": "Yes",
        "SampleValue": "TODO-Protocol",
        "UniqueKey": "sns.subscription.Protocol",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.ContentBasedDeduplication": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sns.topic.ContentBasedDeduplication",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.DisplayName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sns.topic.DisplayName",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.KmsMasterKeyId": {
        "Required": "No",
        "SampleValue": "TODO-KmsMasterKeyId",
        "UniqueKey": "sns.topic.KmsMasterKeyId",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.Subscription": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "sns.topic.Subscription",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.Tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "sns.topic.Tags",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.TopicName": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sns.topic.TopicName",
        "UpdateRequires": "Replacement"
    },
    "sqs.policy.PolicyDocument": {
        "Required": "Yes",
        "SampleValue": "TODO-PolicyDocument",
        "UniqueKey": "sqs.policy.PolicyDocument",
        "UpdateRequires": "Replacement"
    },
    "sqs.policy.Queues": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sqs.policy.Queues",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.ContentBasedDeduplication": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "sqs.queues.ContentBasedDeduplication",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.DelaySeconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.DelaySeconds",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.FifoQueue": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "sqs.queues.FifoQueue",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.KmsDataKeyReusePeriodSeconds": {
        "Required": "No",
        "SampleValue": "TODO-KmsDataKeyReusePeriodSeconds",
        "UniqueKey": "sqs.queues.KmsDataKeyReusePeriodSeconds",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.KmsMasterKeyId": {
        "Required": "No",
        "SampleValue": "TODO-KmsMasterKeyId",
        "UniqueKey": "sqs.queues.KmsMasterKeyId",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.MaximumMessageSize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.MaximumMessageSize",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.MessageRetentionPeriod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.MessageRetentionPeriod",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.QueueName": {
        "Required": "No",
        "SampleValue": "TODO-QueueName",
        "UniqueKey": "sqs.queues.QueueName",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.ReceiveMessageWaitTimeSeconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.ReceiveMessageWaitTimeSeconds",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.RedrivePolicy": {
        "Required": "No",
        "SampleValue": "TODO-RedrivePolicy",
        "UniqueKey": "sqs.queues.RedrivePolicy",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.Tags": {
        "Required": "No",
        "SampleValue": "TODO-Tags",
        "UniqueKey": "sqs.queues.Tags",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.VisibilityTimeout": {
        "Required": "No",
        "SampleValue": "TODO-VisibilityTimeout",
        "UniqueKey": "sqs.queues.VisibilityTimeout",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.instanceassociationoutputlocation.S3Location": {
        "Required": "No",
        "Type": "S3OutputLocation",
        "UniqueKey": "ssm.association.instanceassociationoutputlocation.S3Location",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.parametervalues.ParameterValues": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "ssm.association.parametervalues.ParameterValues",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.s3outputlocation.OutputS3BucketName": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.association.s3outputlocation.OutputS3BucketName",
        "Type": "String",
        "UniqueKey": "ssm.association.s3outputlocation.OutputS3BucketName",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.s3outputlocation.OutputS3KeyPrefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.association.s3outputlocation.OutputS3KeyPrefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.s3outputlocation.OutputS3Region": {
        "Maximum": "20",
        "Minimum": "3",
        "Pattern": "^.{3,20}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.association.s3outputlocation.OutputS3Region",
        "Type": "String",
        "UniqueKey": "ssm.association.s3outputlocation.OutputS3Region",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.target.Key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.association.target.Key",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.target.Values": {
        "Maximum": "50",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ssm.association.target.Values",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtarget.targets.Key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtarget.targets.Key",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtarget.targets.Values": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ssm.maintenancewindowtarget.targets.Values",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.logginginfo.Region": {
        "Maximum": "20",
        "Minimum": "3",
        "Pattern": "^.{3,20}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.maintenancewindowtask.logginginfo.Region",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.Region",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.logginginfo.S3Bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.maintenancewindowtask.logginginfo.S3Bucket",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.S3Bucket",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.logginginfo.S3Prefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.S3Prefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowautomationparameters.DocumentVersion": {
        "Pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowautomationparameters.DocumentVersion",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowautomationparameters.Parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowautomationparameters.Parameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.ClientContext": {
        "Maximum": "8000",
        "Minimum": "1",
        "Pattern": "^.{1,8000}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowlambdaparameters.ClientContext",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.ClientContext",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.Payload": {
        "Required": "No",
        "SampleValue": "TODO-Payload",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.Payload",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.Qualifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowlambdaparameters.Qualifier",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.Qualifier",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.Comment": {
        "Maximum": "100",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.Comment",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.DocumentHash": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.DocumentHash",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.DocumentHashType": {
        "Allowed values": "Sha1 | Sha256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.DocumentHashType",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.NotificationConfig": {
        "Required": "No",
        "Type": "NotificationConfig",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.NotificationConfig",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.OutputS3BucketName": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowruncommandparameters.OutputS3BucketName",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.OutputS3BucketName",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.OutputS3KeyPrefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.OutputS3KeyPrefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.Parameters": {
        "Required": "No",
        "SampleValue": "TODO-Parameters",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.Parameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.ServiceRoleArn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.ServiceRoleArn",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.TimeoutSeconds": {
        "Maximum": "2592000",
        "Minimum": "30",
        "Pattern": "^[30,2592000]}$",
        "Required": "No",
        "SampleValue": "30...2592000",
        "Type": "Integer",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.TimeoutSeconds",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.Input": {
        "Maximum": "4096",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.Input",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.Name": {
        "Maximum": "80",
        "Minimum": "1",
        "Pattern": "^.{1,80}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.Name",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.Name",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.notificationconfig.NotificationArn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.NotificationArn",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.notificationconfig.NotificationEvents": {
        "Required": "No",
        "SampleValue": "TODO-NotificationEvents",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.NotificationEvents",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.notificationconfig.NotificationType": {
        "Allowed values": "Command | Invocation",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.NotificationType",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.target.Key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "UniqueKey": "ssm.maintenancewindowtask.target.Key",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.target.Values": {
        "Maximum": "50",
        "Required": "No",
        "UniqueKey": "ssm.maintenancewindowtask.target.Values",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowAutomationParameters": {
        "Required": "No",
        "Type": "MaintenanceWindowAutomationParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowAutomationParameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowLambdaParameters": {
        "Required": "No",
        "Type": "MaintenanceWindowLambdaParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowLambdaParameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowRunCommandParameters": {
        "Required": "No",
        "Type": "MaintenanceWindowRunCommandParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowRunCommandParameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowStepFunctionsParameters": {
        "Required": "No",
        "Type": "MaintenanceWindowStepFunctionsParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowStepFunctionsParameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchfilter.Key": {
        "Required": "No",
        "SampleValue": "TODO-Key",
        "UniqueKey": "ssm.patchbaseline.patchfilter.Key",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchfilter.Values": {
        "Maximum": "20",
        "Required": "No",
        "UniqueKey": "ssm.patchbaseline.patchfilter.Values",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchfiltergroup.PatchFilters": {
        "Maximum": "4",
        "Required": "No",
        "Type": "List of [PatchFilter",
        "UniqueKey": "ssm.patchbaseline.patchfiltergroup.PatchFilters",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchsource.Configuration": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.patchbaseline.patchsource.Configuration",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.patchsource.Configuration",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchsource.Name": {
        "Pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.patchsource.Name",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchsource.Products": {
        "Maximum": "20",
        "Required": "No",
        "UniqueKey": "ssm.patchbaseline.patchsource.Products",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.ApproveAfterDays": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "Conditional",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "ssm.patchbaseline.rule.ApproveAfterDays",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.ApproveUntilDate": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "Type": "PatchStringDate",
        "UniqueKey": "ssm.patchbaseline.rule.ApproveUntilDate",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.ComplianceLevel": {
        "Allowed values": "CRITICAL | HIGH | INFORMATIONAL | LOW | MEDIUM | UNSPECIFIED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.rule.ComplianceLevel",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.EnableNonSecurity": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ssm.patchbaseline.rule.EnableNonSecurity",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.PatchFilterGroup": {
        "Required": "No",
        "Type": "PatchFilterGroup",
        "UniqueKey": "ssm.patchbaseline.rule.PatchFilterGroup",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rulegroup.PatchRules": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Rule",
        "UniqueKey": "ssm.patchbaseline.rulegroup.PatchRules",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.awsorganizationssource.OrganizationSourceType": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.awsorganizationssource.OrganizationSourceType",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.awsorganizationssource.OrganizationSourceType",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.awsorganizationssource.OrganizationalUnits": {
        "Maximum": "1000",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ssm.resourcedatasync.awsorganizationssource.OrganizationalUnits",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.BucketName": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.BucketName",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.BucketName",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.BucketPrefix": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.BucketPrefix",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.BucketPrefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.BucketRegion": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.BucketRegion",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.BucketRegion",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.KMSKeyArn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.KMSKeyArn",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.SyncFormat": {
        "Allowed values": "JsonSerDe",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.SyncFormat",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.AwsOrganizationsSource": {
        "Required": "No",
        "Type": "AwsOrganizationsSource",
        "UniqueKey": "ssm.resourcedatasync.syncsource.AwsOrganizationsSource",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.IncludeFutureRegions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ssm.resourcedatasync.syncsource.IncludeFutureRegions",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.SourceRegions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ssm.resourcedatasync.syncsource.SourceRegions",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.SourceType": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.syncsource.SourceType",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.syncsource.SourceType",
        "UpdateRequires": "Replacement"
    },
    "stack.NotificationARNs": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "stack.NotificationARNs",
        "UpdateRequires": "Replacement"
    },
    "stack.Parameters": {
        "Required": "Conditional",
        "Type": "Map of String",
        "UniqueKey": "stack.Parameters",
        "UpdateRequires": "Replacement"
    },
    "stack.Tags": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "stack.Tags",
        "UpdateRequires": "Replacement"
    },
    "stack.TemplateURL": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-stack.TemplateURL",
        "Type": "String",
        "UniqueKey": "stack.TemplateURL",
        "UpdateRequires": "Replacement"
    },
    "stack.TimeoutInMinutes": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "stack.TimeoutInMinutes",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.activity.tagsentry.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.activity.tagsentry.Key",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.activity.tagsentry.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.activity.tagsentry.Value",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.cloudwatchlogsloggroup.LogGroupArn": {
        "Required": "No",
        "SampleValue": "TODO-LogGroupArn",
        "UniqueKey": "stepfunctions.statemachine.cloudwatchlogsloggroup.LogGroupArn",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.logdestination.CloudWatchLogsLogGroup": {
        "Required": "No",
        "Type": "CloudWatchLogsLogGroup",
        "UniqueKey": "stepfunctions.statemachine.logdestination.CloudWatchLogsLogGroup",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.LogGroupArn": {
        "Required": "Yes",
        "SampleValue": "TODO-LogGroupArn",
        "UniqueKey": "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.LogGroupArn",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.loggingconfiguration.Destinations": {
        "Required": "No",
        "Type": "List of [LogDestination",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.Destinations",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.loggingconfiguration.IncludeExecutionData": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.IncludeExecutionData",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.loggingconfiguration.Level": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.Level",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.s3location.Bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.s3location.Bucket",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.s3location.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.s3location.Key",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.s3location.Version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.s3location.Version",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.tagsentry.Key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.tagsentry.Key",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.tagsentry.Value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.tagsentry.Value",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.tracingconfiguration.Enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "stepfunctions.statemachine.tracingconfiguration.Enabled",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.Handler": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-synthetics.canary.code.Handler",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.Handler",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.S3Bucket": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-synthetics.canary.code.S3Bucket",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.S3Bucket",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.S3Key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-synthetics.canary.code.S3Key",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.S3Key",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.S3ObjectVersion": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-synthetics.canary.code.S3ObjectVersion",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.S3ObjectVersion",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.Script": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.Script",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.runconfig.MemoryInMB": {
        "Maximum": "3008",
        "Minimum": "960",
        "Pattern": "^[960,3008]}$",
        "Required": "No",
        "SampleValue": "960...3008",
        "Type": "Integer",
        "UniqueKey": "synthetics.canary.runconfig.MemoryInMB",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.runconfig.TimeoutInSeconds": {
        "Maximum": "900",
        "Minimum": "60",
        "Pattern": "^[60,900]}$",
        "Required": "Yes",
        "SampleValue": "60...900",
        "Type": "Integer",
        "UniqueKey": "synthetics.canary.runconfig.TimeoutInSeconds",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.schedule.DurationInSeconds": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "synthetics.canary.schedule.DurationInSeconds",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.schedule.Expression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "synthetics.canary.schedule.Expression",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.vpcconfig.SecurityGroupIds": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "synthetics.canary.vpcconfig.SecurityGroupIds",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.vpcconfig.SubnetIds": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "synthetics.canary.vpcconfig.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.vpcconfig.VpcId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "synthetics.canary.vpcconfig.VpcId",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.AddressAllocationIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "transfer.server.endpointdetails.AddressAllocationIds",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.SubnetIds": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "transfer.server.endpointdetails.SubnetIds",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.VpcEndpointId": {
        "Maximum": "22",
        "Minimum": "22",
        "Pattern": "^vpce-[0-9a-f]{17}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "transfer.server.endpointdetails.VpcEndpointId",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.VpcId": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "transfer.server.endpointdetails.VpcId",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.identityproviderdetails.InvocationRole": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:.*role/.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.server.identityproviderdetails.InvocationRole",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.identityproviderdetails.Url": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.server.identityproviderdetails.Url",
        "UpdateRequires": "Replacement"
    },
    "transfer.user.homedirectorymapentry.Entry": {
        "Maximum": "1024",
        "Pattern": "^/.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.user.homedirectorymapentry.Entry",
        "UpdateRequires": "Replacement"
    },
    "transfer.user.homedirectorymapentry.Target": {
        "Maximum": "1024",
        "Pattern": "^/.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.user.homedirectorymapentry.Target",
        "UpdateRequires": "Replacement"
    },
    "w6640ab1c19c15c15c27c19b7.default": {
        "Required": "No",
        "SampleValue": "TODO-default",
        "Type": "String",
        "UniqueKey": "w6640ab1c19c15c15c27c19b7.default"
    },
    "w6640ab1c19c15c15c27c23b7.Label": {
        "Required": "No",
        "SampleValue": "TODO-Label",
        "Type": "AWS CloudFormation interface label",
        "UniqueKey": "w6640ab1c19c15c15c27c23b7.Label"
    },
    "w6640ab1c19c15c15c27c23b7.Parameters": {
        "Required": "No",
        "SampleValue": "TODO-Parameters",
        "Type": "List of String values",
        "UniqueKey": "w6640ab1c19c15c15c27c23b7.Parameters"
    },
    "w6640ab1c19c15c15c27c27b7.ParameterLogicalID": {
        "Required": "No",
        "UniqueKey": "w6640ab1c19c15c15c27c27b7.ParameterLogicalID"
    },
    "w6640ab1c25c10d256c13c17.Key": {
        "Required": "Yes",
        "SampleValue": "TODO-Key",
        "Type": "String",
        "UniqueKey": "w6640ab1c25c10d256c13c17.Key"
    },
    "w6640ab1c25c10d256c13c17.Value": {
        "Required": "Yes",
        "SampleValue": "TODO-Value",
        "Type": "String\n\n#",
        "UniqueKey": "w6640ab1c25c10d256c13c17.Value"
    },
    "waf.bytematchset.bytematchtuples.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.bytematchset.bytematchtuples.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.PositionalConstraint": {
        "Required": "Yes",
        "SampleValue": "TODO-PositionalConstraint",
        "UniqueKey": "waf.bytematchset.bytematchtuples.PositionalConstraint",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.TargetString": {
        "Required": "Conditional",
        "SampleValue": "TODO-TargetString",
        "UniqueKey": "waf.bytematchset.bytematchtuples.TargetString",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.TargetStringBase64": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.TargetStringBase64",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.TextTransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "waf.bytematchset.bytematchtuples.TextTransformation",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.1.Data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.1.Data",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.1.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.1.Type",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.Data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.Data",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.Type",
        "UpdateRequires": "Replacement"
    },
    "waf.ipset.ipsetdescriptors.Type": {
        "Allowed values": "IPV4 | IPV6",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.ipset.ipsetdescriptors.Type",
        "UpdateRequires": "Replacement"
    },
    "waf.ipset.ipsetdescriptors.Value": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.ipset.ipsetdescriptors.Value",
        "UpdateRequires": "Replacement"
    },
    "waf.rule.predicates.DataId": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.rule.predicates.DataId",
        "UpdateRequires": "Replacement"
    },
    "waf.rule.predicates.Negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "waf.rule.predicates.Negated",
        "UpdateRequires": "Replacement"
    },
    "waf.rule.predicates.Type": {
        "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.rule.predicates.Type",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.ComparisonOperator": {
        "Allowed values": "EQ | GE | GT | LE | LT | NE",
        "ComparisonOperator`  <a name=\"cfn-waf-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.Size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.Size",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.TextTransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.TextTransformation",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch.Data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.fieldtomatch.Data",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.fieldtomatch.Type",
        "UpdateRequires": "Replacement"
    },
    "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.TextTransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.TextTransformation",
        "UpdateRequires": "Replacement"
    },
    "waf.webacl.action.Type": {
        "Allowed values": "ALLOW | BLOCK | COUNT",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.webacl.action.Type",
        "UpdateRequires": "Replacement"
    },
    "waf.webacl.rules.Action": {
        "Required": "No",
        "Type": "WafAction",
        "UniqueKey": "waf.webacl.rules.Action",
        "UpdateRequires": "Replacement"
    },
    "waf.webacl.rules.Priority": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "waf.webacl.rules.Priority",
        "UpdateRequires": "Replacement"
    },
    "waf.webacl.rules.RuleId": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.webacl.rules.RuleId",
        "UpdateRequires": "Replacement"
    },
    "waf.xssmatchset.xssmatchtuple.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "waf.xssmatchset.xssmatchtuple.TextTransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.TextTransformation",
        "UpdateRequires": "Replacement"
    },
    "waf.xssmatchset.xssmatchtuple.fieldtomatch.Data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.fieldtomatch.Data",
        "UpdateRequires": "Replacement"
    },
    "waf.xssmatchset.xssmatchtuple.fieldtomatch.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.fieldtomatch.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.PositionalConstraint": {
        "Required": "Yes",
        "SampleValue": "TODO-PositionalConstraint",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.PositionalConstraint",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.TargetString": {
        "Required": "Conditional",
        "SampleValue": "TODO-TargetString",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.TargetString",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.TargetStringBase64": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.TargetStringBase64",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.TextTransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.TextTransformation",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.fieldtomatch.Data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafregional.bytematchset.fieldtomatch.Data",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.fieldtomatch.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "wafregional.bytematchset.fieldtomatch.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.geomatchset.geomatchconstraint.Type": {
        "Allowed values": "Country",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.geomatchset.geomatchconstraint.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.geomatchset.geomatchconstraint.Value": {
        "Allowed values": "AD | AE | AF | AG | AI | AL | AM | AO | AQ | AR | AS | AT | AU | AW | AX | AZ | BA | BB | BD | BE | BF | BG | BH | BI | BJ | BL | BM | BN | BO | BQ | BR | BS | BT | BV | BW | BY | BZ | CA | CC | CD | CF | CG | CH | CI | CK | CL | CM | CN | CO | CR | CU | CV | CW | CX | CY | CZ | DE | DJ | DK | DM | DO | DZ | EC | EE | EG | EH | ER | ES | ET | FI | FJ | FK | FM | FO | FR | GA | GB | GD | GE | GF | GG | GH | GI | GL | GM | GN | GP | GQ | GR | GS | GT | GU | GW | GY | HK | HM | HN | HR | HT | HU | ID | IE | IL | IM | IN | IO | IQ | IR | IS | IT | JE | JM | JO | JP | KE | KG | KH | KI | KM | KN | KP | KR | KW | KY | KZ | LA | LB | LC | LI | LK | LR | LS | LT | LU | LV | LY | MA | MC | MD | ME | MF | MG | MH | MK | ML | MM | MN | MO | MP | MQ | MR | MS | MT | MU | MV | MW | MX | MY | MZ | NA | NC | NE | NF | NG | NI | NL | NO | NP | NR | NU | NZ | OM | PA | PE | PF | PG | PH | PK | PL | PM | PN | PR | PS | PT | PW | PY | QA | RE | RO | RS | RU | RW | SA | SB | SC | SD | SE | SG | SH | SI | SJ | SK | SL | SM | SN | SO | SR | SS | ST | SV | SX | SY | SZ | TC | TD | TF | TG | TH | TJ | TK | TL | TM | TN | TO | TR | TT | TV | TW | TZ | UA | UG | UM | US | UY | UZ | VA | VC | VE | VG | VI | VN | VU | WF | WS | YE | YT | ZA | ZM | ZW",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.geomatchset.geomatchconstraint.Value",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ipset.ipsetdescriptor.Type": {
        "Allowed values": "IPV4 | IPV6",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ipset.ipsetdescriptor.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ipset.ipsetdescriptor.Value": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ipset.ipsetdescriptor.Value",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ratebasedrule.predicate.DataId": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ratebasedrule.predicate.DataId",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ratebasedrule.predicate.Negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "wafregional.ratebasedrule.predicate.Negated",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ratebasedrule.predicate.Type": {
        "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ratebasedrule.predicate.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.rule.predicate.DataId": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.rule.predicate.DataId",
        "UpdateRequires": "Replacement"
    },
    "wafregional.rule.predicate.Negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "wafregional.rule.predicate.Negated",
        "UpdateRequires": "Replacement"
    },
    "wafregional.rule.predicate.Type": {
        "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.rule.predicate.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.fieldtomatch.Data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.sizeconstraintset.fieldtomatch.Data",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.fieldtomatch.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "wafregional.sizeconstraintset.fieldtomatch.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.sizeconstraint.ComparisonOperator": {
        "Allowed values": "EQ | GE | GT | LE | LT | NE",
        "ComparisonOperator`  <a name=\"cfn-wafregional-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.sizeconstraint.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.sizeconstraint.Size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.Size",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.sizeconstraint.TextTransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.TextTransformation",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sqlinjectionmatchset.fieldtomatch.Data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.sqlinjectionmatchset.fieldtomatch.Data",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sqlinjectionmatchset.fieldtomatch.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "wafregional.sqlinjectionmatchset.fieldtomatch.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.TextTransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.TextTransformation",
        "UpdateRequires": "Replacement"
    },
    "wafregional.webacl.action.Type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.webacl.action.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.webacl.rule.Action": {
        "Required": "Yes",
        "Type": "Action",
        "UniqueKey": "wafregional.webacl.rule.Action",
        "UpdateRequires": "Replacement"
    },
    "wafregional.webacl.rule.Priority": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafregional.webacl.rule.Priority",
        "UpdateRequires": "Replacement"
    },
    "wafregional.webacl.rule.RuleId": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.webacl.rule.RuleId",
        "UpdateRequires": "Replacement"
    },
    "wafregional.xssmatchset.fieldtomatch.Data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.xssmatchset.fieldtomatch.Data",
        "UpdateRequires": "Replacement"
    },
    "wafregional.xssmatchset.fieldtomatch.Type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "wafregional.xssmatchset.fieldtomatch.Type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.xssmatchset.xssmatchtuple.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.xssmatchset.xssmatchtuple.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafregional.xssmatchset.xssmatchtuple.TextTransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "wafregional.xssmatchset.xssmatchtuple.TextTransformation",
        "UpdateRequires": "Replacement"
    },
    "wafv2.ipset.ipaddresses.cfnproperties": [
        "IPAddresses",
        "UniqueKey"
    ],
    "wafv2.ipset.ipaddresses.ipaddresses": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.ipset.ipaddresses.ipaddresses",
        "UpdateRequires": "Replacement"
    },
    "wafv2.ipset.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.ipset.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.ipset.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.regexpatternset.regex.cfnproperties": [
        "RegexString",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.regex.regexstring": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.regexpatternset.regex.regexstring",
        "UpdateRequires": "Replacement"
    },
    "wafv2.regexpatternset.regularexpressionlist.cfnproperties": [
        "RegularExpressionList",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.regularexpressionlist.regularexpressionlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.regexpatternset.regularexpressionlist.regularexpressionlist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.regexpatternset.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.regexpatternset.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.andstatementone.Statements": {
        "Required": "Yes",
        "Type": "List of [StatementTwo",
        "UniqueKey": "wafv2.rulegroup.andstatementone.Statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.andstatementtwo.Statements": {
        "Required": "Yes",
        "Type": "List of [StatementThree",
        "UniqueKey": "wafv2.rulegroup.andstatementtwo.Statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.PositionalConstraint": {
        "Required": "Yes",
        "SampleValue": "TODO-PositionalConstraint",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.PositionalConstraint",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.SearchString": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.SearchString",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.SearchStringBase64": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.SearchStringBase64",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.countrycodes.cfnproperties": [
        "CountryCodes",
        "UniqueKey"
    ],
    "wafv2.rulegroup.countrycodes.countrycodes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.countrycodes.countrycodes",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.AllQueryArguments": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.AllQueryArguments",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.Body": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.Body",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.Method": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.Method",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.QueryString": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.QueryString",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.SingleHeader": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.SingleHeader",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.SingleQueryArgument": {
        "Required": "No",
        "SampleValue": "TODO-SingleQueryArgument",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.SingleQueryArgument",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.UriPath": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.UriPath",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.forwardedipconfiguration.FallbackBehavior": {
        "Allowed values": "MATCH | NO_MATCH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.forwardedipconfiguration.FallbackBehavior",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.forwardedipconfiguration.HeaderName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.forwardedipconfiguration.HeaderName",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.geomatchstatement.CountryCodes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "wafv2.rulegroup.geomatchstatement.CountryCodes",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.geomatchstatement.ForwardedIPConfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.rulegroup.geomatchstatement.ForwardedIPConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetforwardedipconfiguration.FallbackBehavior": {
        "Allowed values": "MATCH | NO_MATCH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetforwardedipconfiguration.FallbackBehavior",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetforwardedipconfiguration.HeaderName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetforwardedipconfiguration.HeaderName",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetforwardedipconfiguration.Position": {
        "Allowed values": "ANY | FIRST | LAST",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetforwardedipconfiguration.Position",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetreferencestatement.Arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetreferencestatement.Arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetreferencestatement.IPSetForwardedIPConfig": {
        "Required": "No",
        "Type": "IPSetForwardedIPConfiguration",
        "UniqueKey": "wafv2.rulegroup.ipsetreferencestatement.IPSetForwardedIPConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.notstatementone.Statement": {
        "Required": "Yes",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.rulegroup.notstatementone.Statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.notstatementtwo.Statement": {
        "Required": "Yes",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.rulegroup.notstatementtwo.Statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.orstatementone.Statements": {
        "Required": "Yes",
        "Type": "List of [StatementTwo",
        "UniqueKey": "wafv2.rulegroup.orstatementone.Statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.orstatementtwo.Statements": {
        "Required": "Yes",
        "Type": "List of [StatementThree",
        "UniqueKey": "wafv2.rulegroup.orstatementtwo.Statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementone.AggregateKeyType": {
        "Allowed values": "FORWARDED_IP | IP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.AggregateKeyType",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementone.ForwardedIPConfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.ForwardedIPConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementone.Limit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.Limit",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementone.ScopeDownStatement": {
        "Required": "No",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.ScopeDownStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.AggregateKeyType": {
        "Allowed values": "FORWARDED_IP | IP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.AggregateKeyType",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.ForwardedIPConfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.ForwardedIPConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.Limit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.Limit",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.ScopeDownStatement": {
        "Required": "No",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.ScopeDownStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.Arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.Arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.Action": {
        "Required": "No",
        "Type": "RuleAction",
        "UniqueKey": "wafv2.rulegroup.rule.Action",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.rule.Name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.Priority": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.rule.Priority",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.Statement": {
        "Required": "Yes",
        "Type": "StatementOne",
        "UniqueKey": "wafv2.rulegroup.rule.Statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.VisibilityConfig": {
        "Required": "Yes",
        "Type": "VisibilityConfig",
        "UniqueKey": "wafv2.rulegroup.rule.VisibilityConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ruleaction.Allow": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.ruleaction.Allow",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ruleaction.Block": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.ruleaction.Block",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ruleaction.Count": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.ruleaction.Count",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rules.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "wafv2.rulegroup.rules.rules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.rules.rules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.singleheader.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.rulegroup.singleheader.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.singleheader.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.singlequeryargument.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.rulegroup.singlequeryargument.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.singlequeryargument.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sizeconstraintstatement.ComparisonOperator": {
        "Allowed values": "EQ | GE | GT | LE | LT | NE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sizeconstraintstatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sizeconstraintstatement.Size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.Size",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sizeconstraintstatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sqlimatchstatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.sqlimatchstatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sqlimatchstatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.sqlimatchstatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.AndStatement": {
        "Required": "No",
        "Type": "AndStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.AndStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.ByteMatchStatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.ByteMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.GeoMatchStatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.GeoMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.IPSetReferenceStatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.IPSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.NotStatement": {
        "Required": "No",
        "Type": "NotStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.NotStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.OrStatement": {
        "Required": "No",
        "Type": "OrStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.OrStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.RateBasedStatement": {
        "Required": "No",
        "Type": "RateBasedStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.RateBasedStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.RegexPatternSetReferenceStatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.RegexPatternSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.SizeConstraintStatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.SizeConstraintStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.SqliMatchStatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.SqliMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.XssMatchStatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.XssMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.ByteMatchStatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.ByteMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.GeoMatchStatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.GeoMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.IPSetReferenceStatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.IPSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.RegexPatternSetReferenceStatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.RegexPatternSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.SizeConstraintStatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.SizeConstraintStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.SqliMatchStatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.SqliMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.XssMatchStatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.XssMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthrees.cfnproperties": [
        "StatementThrees",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementthrees.statementthrees": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.statementthrees.statementthrees",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.AndStatement": {
        "Required": "No",
        "Type": "AndStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.AndStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.ByteMatchStatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.ByteMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.GeoMatchStatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.GeoMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.IPSetReferenceStatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.IPSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.NotStatement": {
        "Required": "No",
        "Type": "NotStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.NotStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.OrStatement": {
        "Required": "No",
        "Type": "OrStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.OrStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.RateBasedStatement": {
        "Required": "No",
        "Type": "RateBasedStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.RateBasedStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.RegexPatternSetReferenceStatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.RegexPatternSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.SizeConstraintStatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.SizeConstraintStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.SqliMatchStatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.SqliMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.XssMatchStatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.XssMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwos.cfnproperties": [
        "StatementTwos",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementtwos.statementtwos": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.statementtwos.statementtwos",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.rulegroup.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.texttransformation.COMPRESS_WHITE_SPACE": {
        "Required": "Yes",
        "SampleValue": "TODO-COMPRESS_WHITE_SPACE",
        "UniqueKey": "wafv2.rulegroup.texttransformation.COMPRESS_WHITE_SPACE",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.texttransformation.Priority": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.texttransformation.Priority",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.texttransformation.Type": {
        "UniqueKey": "wafv2.rulegroup.texttransformation.Type"
    },
    "wafv2.rulegroup.texttransformations.cfnproperties": [
        "TextTransformations",
        "UniqueKey"
    ],
    "wafv2.rulegroup.texttransformations.texttransformations": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.texttransformations.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.visibilityconfig.CloudWatchMetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.CloudWatchMetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.visibilityconfig.MetricName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[\\w#:\\.\\-/]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.MetricName",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.visibilityconfig.SampledRequestsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.SampledRequestsEnabled",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.xssmatchstatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.xssmatchstatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.xssmatchstatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.xssmatchstatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.andstatementone.Statements": {
        "Required": "Yes",
        "Type": "List of [StatementTwo",
        "UniqueKey": "wafv2.webacl.andstatementone.Statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.andstatementtwo.Statements": {
        "Required": "Yes",
        "Type": "List of [StatementThree",
        "UniqueKey": "wafv2.webacl.andstatementtwo.Statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.bytematchstatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.PositionalConstraint": {
        "Required": "Yes",
        "SampleValue": "TODO-PositionalConstraint",
        "UniqueKey": "wafv2.webacl.bytematchstatement.PositionalConstraint",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.SearchString": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.bytematchstatement.SearchString",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.SearchStringBase64": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.bytematchstatement.SearchStringBase64",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.bytematchstatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.countrycodes.cfnproperties": [
        "CountryCodes",
        "UniqueKey"
    ],
    "wafv2.webacl.countrycodes.countrycodes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.countrycodes.countrycodes",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.defaultaction.Allow": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.defaultaction.Allow",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.defaultaction.Block": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.defaultaction.Block",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.excludedrule.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.excludedrule.Name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.excludedrules.cfnproperties": [
        "ExcludedRules",
        "UniqueKey"
    ],
    "wafv2.webacl.excludedrules.excludedrules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.excludedrules.excludedrules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.AllQueryArguments": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.AllQueryArguments",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.Body": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.Body",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.Method": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.Method",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.QueryString": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.QueryString",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.SingleHeader": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.SingleHeader",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.SingleQueryArgument": {
        "Required": "No",
        "SampleValue": "TODO-SingleQueryArgument",
        "UniqueKey": "wafv2.webacl.fieldtomatch.SingleQueryArgument",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.UriPath": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.UriPath",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.forwardedipconfiguration.FallbackBehavior": {
        "Allowed values": "MATCH | NO_MATCH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.forwardedipconfiguration.FallbackBehavior",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.forwardedipconfiguration.HeaderName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.forwardedipconfiguration.HeaderName",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.geomatchstatement.CountryCodes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "wafv2.webacl.geomatchstatement.CountryCodes",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.geomatchstatement.ForwardedIPConfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.webacl.geomatchstatement.ForwardedIPConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetforwardedipconfiguration.FallbackBehavior": {
        "Allowed values": "MATCH | NO_MATCH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetforwardedipconfiguration.FallbackBehavior",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetforwardedipconfiguration.HeaderName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetforwardedipconfiguration.HeaderName",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetforwardedipconfiguration.Position": {
        "Allowed values": "ANY | FIRST | LAST",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetforwardedipconfiguration.Position",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetreferencestatement.Arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetreferencestatement.Arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetreferencestatement.IPSetForwardedIPConfig": {
        "Required": "No",
        "Type": "IPSetForwardedIPConfiguration",
        "UniqueKey": "wafv2.webacl.ipsetreferencestatement.IPSetForwardedIPConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.managedrulegroupstatement.ExcludedRules": {
        "Required": "No",
        "Type": "List of [ExcludedRule",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.ExcludedRules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.managedrulegroupstatement.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.Name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.managedrulegroupstatement.VendorName": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.VendorName",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.notstatementone.Statement": {
        "Required": "Yes",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.webacl.notstatementone.Statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.notstatementtwo.Statement": {
        "Required": "Yes",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.webacl.notstatementtwo.Statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.orstatementone.Statements": {
        "Required": "Yes",
        "Type": "List of [StatementTwo",
        "UniqueKey": "wafv2.webacl.orstatementone.Statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.orstatementtwo.Statements": {
        "Required": "Yes",
        "Type": "List of [StatementThree",
        "UniqueKey": "wafv2.webacl.orstatementtwo.Statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.overrideaction.Count": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.overrideaction.Count",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.overrideaction.None": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.overrideaction.None",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementone.AggregateKeyType": {
        "Allowed values": "FORWARDED_IP | IP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.AggregateKeyType",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementone.ForwardedIPConfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.ForwardedIPConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementone.Limit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.Limit",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementone.ScopeDownStatement": {
        "Required": "No",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.ScopeDownStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementtwo.AggregateKeyType": {
        "Allowed values": "FORWARDED_IP | IP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.AggregateKeyType",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementtwo.ForwardedIPConfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.ForwardedIPConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementtwo.Limit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.Limit",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementtwo.ScopeDownStatement": {
        "Required": "No",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.ScopeDownStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.Arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.Arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.Action": {
        "Required": "Conditional",
        "Type": "RuleAction",
        "UniqueKey": "wafv2.webacl.rule.Action",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.Name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.rule.Name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.OverrideAction": {
        "Required": "Conditional",
        "Type": "OverrideAction",
        "UniqueKey": "wafv2.webacl.rule.OverrideAction",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.Priority": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.rule.Priority",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.Statement": {
        "Required": "Yes",
        "Type": "StatementOne",
        "UniqueKey": "wafv2.webacl.rule.Statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.VisibilityConfig": {
        "Required": "Yes",
        "Type": "VisibilityConfig",
        "UniqueKey": "wafv2.webacl.rule.VisibilityConfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ruleaction.Allow": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.ruleaction.Allow",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ruleaction.Block": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.ruleaction.Block",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ruleaction.Count": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.ruleaction.Count",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rulegroupreferencestatement.Arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.rulegroupreferencestatement.Arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rulegroupreferencestatement.ExcludedRules": {
        "Required": "No",
        "Type": "List of [ExcludedRule",
        "UniqueKey": "wafv2.webacl.rulegroupreferencestatement.ExcludedRules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rules.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "wafv2.webacl.rules.rules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.rules.rules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.singleheader.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.webacl.singleheader.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.singleheader.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.singlequeryargument.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.webacl.singlequeryargument.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.singlequeryargument.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sizeconstraintstatement.ComparisonOperator": {
        "Allowed values": "EQ | GE | GT | LE | LT | NE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.ComparisonOperator",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sizeconstraintstatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sizeconstraintstatement.Size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.Size",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sizeconstraintstatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sqlimatchstatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.sqlimatchstatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sqlimatchstatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.sqlimatchstatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.AndStatement": {
        "Required": "No",
        "Type": "AndStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.AndStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.ByteMatchStatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.ByteMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.GeoMatchStatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.GeoMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.IPSetReferenceStatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.IPSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.ManagedRuleGroupStatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementone.ManagedRuleGroupStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.NotStatement": {
        "Required": "No",
        "Type": "NotStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.NotStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.OrStatement": {
        "Required": "No",
        "Type": "OrStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.OrStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.RateBasedStatement": {
        "Required": "No",
        "Type": "RateBasedStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.RateBasedStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.RegexPatternSetReferenceStatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.RegexPatternSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.RuleGroupReferenceStatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.RuleGroupReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.SizeConstraintStatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementone.SizeConstraintStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.SqliMatchStatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.SqliMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.XssMatchStatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.XssMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.ByteMatchStatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.ByteMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.GeoMatchStatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.GeoMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.IPSetReferenceStatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.IPSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.ManagedRuleGroupStatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementthree.ManagedRuleGroupStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.RegexPatternSetReferenceStatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.RegexPatternSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.RuleGroupReferenceStatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.RuleGroupReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.SizeConstraintStatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementthree.SizeConstraintStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.SqliMatchStatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.SqliMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.XssMatchStatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.XssMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthrees.cfnproperties": [
        "StatementThrees",
        "UniqueKey"
    ],
    "wafv2.webacl.statementthrees.statementthrees": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.statementthrees.statementthrees",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.AndStatement": {
        "Required": "No",
        "Type": "AndStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.AndStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.ByteMatchStatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.ByteMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.GeoMatchStatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.GeoMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.IPSetReferenceStatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.IPSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.ManagedRuleGroupStatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.ManagedRuleGroupStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.NotStatement": {
        "Required": "No",
        "Type": "NotStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.NotStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.OrStatement": {
        "Required": "No",
        "Type": "OrStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.OrStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.RateBasedStatement": {
        "Required": "No",
        "Type": "RateBasedStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.RateBasedStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.RegexPatternSetReferenceStatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.RegexPatternSetReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.RuleGroupReferenceStatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.RuleGroupReferenceStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.SizeConstraintStatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.SizeConstraintStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.SqliMatchStatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.SqliMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.XssMatchStatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.XssMatchStatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwos.cfnproperties": [
        "StatementTwos",
        "UniqueKey"
    ],
    "wafv2.webacl.statementtwos.statementtwos": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.statementtwos.statementtwos",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.webacl.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.texttransformation.COMPRESS_WHITE_SPACE": {
        "Required": "Yes",
        "SampleValue": "TODO-COMPRESS_WHITE_SPACE",
        "UniqueKey": "wafv2.webacl.texttransformation.COMPRESS_WHITE_SPACE",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.texttransformation.Priority": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.texttransformation.Priority",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.texttransformation.Type": {
        "UniqueKey": "wafv2.webacl.texttransformation.Type"
    },
    "wafv2.webacl.texttransformations.cfnproperties": [
        "TextTransformations",
        "UniqueKey"
    ],
    "wafv2.webacl.texttransformations.texttransformations": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.texttransformations.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.visibilityconfig.CloudWatchMetricsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.webacl.visibilityconfig.CloudWatchMetricsEnabled",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.visibilityconfig.MetricName": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[\\w#:\\.\\-/]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.visibilityconfig.MetricName",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.visibilityconfig.SampledRequestsEnabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.webacl.visibilityconfig.SampledRequestsEnabled",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.xssmatchstatement.FieldToMatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.xssmatchstatement.FieldToMatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.xssmatchstatement.TextTransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.xssmatchstatement.TextTransformations",
        "UpdateRequires": "Replacement"
    },
    "waitcondition.Count": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "waitcondition.Count",
        "UpdateRequires": "Replacement"
    },
    "waitcondition.Handle": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waitcondition.Handle",
        "UpdateRequires": "Replacement"
    },
    "waitcondition.Timeout": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waitcondition.Timeout",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.ComputeTypeName": {
        "Allowed values": "GRAPHICS | GRAPHICSPRO | PERFORMANCE | POWER | POWERPRO | STANDARD | VALUE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "workspaces.workspace.workspaceproperties.ComputeTypeName",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.RootVolumeSizeGib": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.RootVolumeSizeGib",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.RunningMode": {
        "Allowed values": "ALWAYS_ON | AUTO_STOP",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "workspaces.workspace.workspaceproperties.RunningMode",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.RunningModeAutoStopTimeoutInMinutes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.RunningModeAutoStopTimeoutInMinutes",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.UserVolumeSizeGib": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.UserVolumeSizeGib",
        "UpdateRequires": "Replacement"
    }
}