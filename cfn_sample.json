{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Conditions": {},
    "Description": "CFNGuardGoat",
    "Mappings": {},
    "Metadata": {},
    "Outputs": {},
    "Parameters": {},
    "Resources": {
        "alexa-ask-skill": {
            "Metadata": {},
            "Properties": {
                "AuthenticationConfiguration": "",
                "SkillPackage": "",
                "VendorId": ""
            },
            "Type:": "Alexa::ASK::Skill"
        },
        "aws-accessanalyzer-analyzer": {
            "Metadata": {},
            "Properties": {
                "AnalyzerName": "",
                "ArchiveRules": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::AccessAnalyzer::Analyzer"
        },
        "aws-acmpca-certificate": {
            "Metadata": {},
            "Properties": {
                "ApiPassthrough": "",
                "CertificateAuthorityArn": "",
                "CertificateSigningRequest": "",
                "SigningAlgorithm": "",
                "TemplateArn": "",
                "Validity": "",
                "ValidityNotBefore": ""
            },
            "Type:": "AWS::ACMPCA::Certificate"
        },
        "aws-acmpca-certificateauthority": {
            "Metadata": {},
            "Properties": {
                "CsrExtensions": "",
                "KeyAlgorithm": "",
                "KeyStorageSecurityStandard": "",
                "RevocationConfiguration": "",
                "SigningAlgorithm": "",
                "Subject": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::ACMPCA::CertificateAuthority"
        },
        "aws-acmpca-certificateauthorityactivation": {
            "Metadata": {},
            "Properties": {
                "Certificate": "",
                "CertificateAuthorityArn": "",
                "CertificateChain": "",
                "Status": ""
            },
            "Type:": "AWS::ACMPCA::CertificateAuthorityActivation"
        },
        "aws-amazonmq-broker": {
            "Metadata": {},
            "Properties": {
                "AuthenticationStrategy": "",
                "AutoMinorVersionUpgrade": "",
                "BrokerName": "",
                "Configuration": "",
                "DeploymentMode": "",
                "EncryptionOptions": "",
                "EngineType": "",
                "EngineVersion": "",
                "HostInstanceType": "",
                "LdapServerMetadata": "",
                "Logs": "",
                "MaintenanceWindowStartTime": "",
                "PubliclyAccessible": "",
                "SecurityGroups": "",
                "StorageType": "",
                "SubnetIds": "",
                "Tags": "",
                "Users": ""
            },
            "Type:": "AWS::AmazonMQ::Broker"
        },
        "aws-amazonmq-configuration": {
            "Metadata": {},
            "Properties": {
                "AuthenticationStrategy": "",
                "Data": "",
                "Description": "",
                "EngineType": "",
                "EngineVersion": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::AmazonMQ::Configuration"
        },
        "aws-amazonmq-configurationassociation": {
            "Metadata": {},
            "Properties": {
                "Broker": "",
                "Configuration": ""
            },
            "Type:": "AWS::AmazonMQ::ConfigurationAssociation"
        },
        "aws-amplify-app": {
            "Metadata": {},
            "Properties": {
                "AccessToken": "",
                "AutoBranchCreationConfig": "",
                "BasicAuthConfig": "",
                "BuildSpec": "",
                "CustomHeaders": "",
                "CustomRules": "",
                "Description": "",
                "EnableBranchAutoDeletion": "",
                "EnvironmentVariables": "",
                "IAMServiceRole": "",
                "Name": "",
                "OauthToken": "",
                "Repository": "",
                "Tags": ""
            },
            "Type:": "AWS::Amplify::App"
        },
        "aws-amplify-branch": {
            "Metadata": {},
            "Properties": {
                "AppId": "",
                "BasicAuthConfig": "",
                "BranchName": "",
                "BuildSpec": "",
                "Description": "",
                "EnableAutoBuild": "",
                "EnablePerformanceMode": "",
                "EnablePullRequestPreview": "",
                "EnvironmentVariables": "",
                "PullRequestEnvironmentName": "",
                "Stage": "",
                "Tags": ""
            },
            "Type:": "AWS::Amplify::Branch"
        },
        "aws-amplify-domain": {
            "Metadata": {},
            "Properties": {
                "AppId": "",
                "AutoSubDomainCreationPatterns": "",
                "AutoSubDomainIAMRole": "",
                "DomainName": "",
                "EnableAutoSubDomain": "",
                "SubDomainSettings": ""
            },
            "Type:": "AWS::Amplify::Domain"
        },
        "aws-apigateway-account": {
            "Metadata": {},
            "Properties": {
                "CloudWatchRoleArn": ""
            },
            "Type:": "AWS::ApiGateway::Account"
        },
        "aws-apigateway-apikey": {
            "Metadata": {},
            "Properties": {
                "CustomerId": "",
                "Description": "",
                "Enabled": "",
                "GenerateDistinctId": "",
                "Name": "",
                "StageKeys": "",
                "Tags": "",
                "Value": ""
            },
            "Type:": "AWS::ApiGateway::ApiKey"
        },
        "aws-apigateway-authorizer": {
            "Metadata": {},
            "Properties": {
                "AuthType": "",
                "AuthorizerCredentials": "",
                "AuthorizerResultTtlInSeconds": "",
                "AuthorizerUri": "",
                "IdentitySource": "",
                "IdentityValidationExpression": "",
                "Name": "",
                "ProviderARNs": "",
                "RestApiId": "",
                "Type": ""
            },
            "Type:": "AWS::ApiGateway::Authorizer"
        },
        "aws-apigateway-basepathmapping": {
            "Metadata": {},
            "Properties": {
                "BasePath": "",
                "DomainName": "",
                "RestApiId": "",
                "Stage": ""
            },
            "Type:": "AWS::ApiGateway::BasePathMapping"
        },
        "aws-apigateway-clientcertificate": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Tags": ""
            },
            "Type:": "AWS::ApiGateway::ClientCertificate"
        },
        "aws-apigateway-deployment": {
            "Metadata": {},
            "Properties": {
                "DeploymentCanarySettings": "",
                "Description": "",
                "RestApiId": "",
                "StageDescription": "",
                "StageName": ""
            },
            "Type:": "AWS::ApiGateway::Deployment"
        },
        "aws-apigateway-documentationpart": {
            "Metadata": {},
            "Properties": {
                "Location": "",
                "Properties": "",
                "RestApiId": ""
            },
            "Type:": "AWS::ApiGateway::DocumentationPart"
        },
        "aws-apigateway-documentationversion": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "DocumentationVersion": "",
                "RestApiId": ""
            },
            "Type:": "AWS::ApiGateway::DocumentationVersion"
        },
        "aws-apigateway-domainname": {
            "Metadata": {},
            "Properties": {
                "CertificateArn": "",
                "DomainName": "",
                "EndpointConfiguration": "",
                "MutualTlsAuthentication": "",
                "RegionalCertificateArn": "",
                "SecurityPolicy": "",
                "Tags": ""
            },
            "Type:": "AWS::ApiGateway::DomainName"
        },
        "aws-apigateway-gatewayresponse": {
            "Metadata": {},
            "Properties": {
                "ResponseParameters": "",
                "ResponseTemplates": "",
                "ResponseType": "",
                "RestApiId": "",
                "StatusCode": ""
            },
            "Type:": "AWS::ApiGateway::GatewayResponse"
        },
        "aws-apigateway-method": {
            "Metadata": {},
            "Properties": {
                "ApiKeyRequired": "",
                "AuthorizationScopes": "",
                "AuthorizationType": "",
                "AuthorizerId": "",
                "HttpMethod": "",
                "Integration": "",
                "MethodResponses": "",
                "OperationName": "",
                "RequestModels": "",
                "RequestParameters": "",
                "RequestValidatorId": "",
                "ResourceId": "",
                "RestApiId": ""
            },
            "Type:": "AWS::ApiGateway::Method"
        },
        "aws-apigateway-model": {
            "Metadata": {},
            "Properties": {
                "ContentType": "",
                "Description": "",
                "Name": "",
                "RestApiId": "",
                "Schema": ""
            },
            "Type:": "AWS::ApiGateway::Model"
        },
        "aws-apigateway-requestvalidator": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "RestApiId": "",
                "ValidateRequestBody": "",
                "ValidateRequestParameters": ""
            },
            "Type:": "AWS::ApiGateway::RequestValidator"
        },
        "aws-apigateway-resource": {
            "Metadata": {},
            "Properties": {
                "ParentId": "",
                "PathPart": "",
                "RestApiId": ""
            },
            "Type:": "AWS::ApiGateway::Resource"
        },
        "aws-apigateway-restapi": {
            "Metadata": {},
            "Properties": {
                "ApiKeySourceType": "",
                "BinaryMediaTypes": "",
                "Body": "",
                "BodyS3Location": "",
                "CloneFrom": "",
                "Description": "",
                "DisableExecuteApiEndpoint": "",
                "EndpointConfiguration": "",
                "FailOnWarnings": "",
                "MinimumCompressionSize": "",
                "Name": "",
                "Parameters": "",
                "Policy": "",
                "Tags": ""
            },
            "Type:": "AWS::ApiGateway::RestApi"
        },
        "aws-apigateway-stage": {
            "Metadata": {},
            "Properties": {
                "AccessLogSetting": "",
                "CacheClusterEnabled": "",
                "CacheClusterSize": "",
                "CanarySetting": "",
                "ClientCertificateId": "",
                "DeploymentId": "",
                "Description": "",
                "DocumentationVersion": "",
                "MethodSettings": "",
                "RestApiId": "",
                "StageName": "",
                "Tags": "",
                "TracingEnabled": "",
                "Variables": ""
            },
            "Type:": "AWS::ApiGateway::Stage"
        },
        "aws-apigateway-usageplan": {
            "Metadata": {},
            "Properties": {
                "ApiStages": "",
                "Description": "",
                "Quota": "",
                "Tags": "",
                "Throttle": "",
                "UsagePlanName": ""
            },
            "Type:": "AWS::ApiGateway::UsagePlan"
        },
        "aws-apigateway-usageplankey": {
            "Metadata": {},
            "Properties": {
                "KeyId": "",
                "KeyType": "",
                "UsagePlanId": ""
            },
            "Type:": "AWS::ApiGateway::UsagePlanKey"
        },
        "aws-apigateway-vpclink": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "TargetArns": ""
            },
            "Type:": "AWS::ApiGateway::VpcLink"
        },
        "aws-apigatewayv2-api": {
            "Metadata": {},
            "Properties": {
                "ApiKeySelectionExpression": "",
                "BasePath": "",
                "Body": "",
                "BodyS3Location": "",
                "CorsConfiguration": "",
                "CredentialsArn": "",
                "Description": "",
                "DisableExecuteApiEndpoint": "",
                "DisableSchemaValidation": "",
                "FailOnWarnings": "",
                "Name": "",
                "ProtocolType": "",
                "RouteKey": "",
                "RouteSelectionExpression": "",
                "Tags": "",
                "Target": "",
                "Version": ""
            },
            "Type:": "AWS::ApiGatewayV2::Api"
        },
        "aws-apigatewayv2-apigatewaymanagedoverrides": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "Integration": "",
                "Route": "",
                "Stage": ""
            },
            "Type:": "AWS::ApiGatewayV2::ApiGatewayManagedOverrides"
        },
        "aws-apigatewayv2-apimapping": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "ApiMappingKey": "",
                "DomainName": "",
                "Stage": ""
            },
            "Type:": "AWS::ApiGatewayV2::ApiMapping"
        },
        "aws-apigatewayv2-authorizer": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "AuthorizerCredentialsArn": "",
                "AuthorizerPayloadFormatVersion": "",
                "AuthorizerResultTtlInSeconds": "",
                "AuthorizerType": "",
                "AuthorizerUri": "",
                "EnableSimpleResponses": "",
                "IdentitySource": "",
                "IdentityValidationExpression": "",
                "JwtConfiguration": "",
                "Name": ""
            },
            "Type:": "AWS::ApiGatewayV2::Authorizer"
        },
        "aws-apigatewayv2-deployment": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "Description": "",
                "StageName": ""
            },
            "Type:": "AWS::ApiGatewayV2::Deployment"
        },
        "aws-apigatewayv2-domainname": {
            "Metadata": {},
            "Properties": {
                "DomainName": "",
                "DomainNameConfigurations": "",
                "MutualTlsAuthentication": "",
                "Tags": ""
            },
            "Type:": "AWS::ApiGatewayV2::DomainName"
        },
        "aws-apigatewayv2-integration": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "ConnectionId": "",
                "ConnectionType": "",
                "ContentHandlingStrategy": "",
                "CredentialsArn": "",
                "Description": "",
                "IntegrationMethod": "",
                "IntegrationSubtype": "",
                "IntegrationType": "",
                "IntegrationUri": "",
                "PassthroughBehavior": "",
                "PayloadFormatVersion": "",
                "RequestParameters": "",
                "RequestTemplates": "",
                "ResponseParameters": "",
                "TemplateSelectionExpression": "",
                "TimeoutInMillis": "",
                "TlsConfig": ""
            },
            "Type:": "AWS::ApiGatewayV2::Integration"
        },
        "aws-apigatewayv2-integrationresponse": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "ContentHandlingStrategy": "",
                "IntegrationId": "",
                "IntegrationResponseKey": "",
                "ResponseParameters": "",
                "ResponseTemplates": "",
                "TemplateSelectionExpression": ""
            },
            "Type:": "AWS::ApiGatewayV2::IntegrationResponse"
        },
        "aws-apigatewayv2-model": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "ContentType": "",
                "Description": "",
                "Name": "",
                "Schema": ""
            },
            "Type:": "AWS::ApiGatewayV2::Model"
        },
        "aws-apigatewayv2-route": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "ApiKeyRequired": "",
                "AuthorizationScopes": "",
                "AuthorizationType": "",
                "AuthorizerId": "",
                "ModelSelectionExpression": "",
                "OperationName": "",
                "RequestModels": "",
                "RequestParameters": "",
                "RouteKey": "",
                "RouteResponseSelectionExpression": "",
                "Target": ""
            },
            "Type:": "AWS::ApiGatewayV2::Route"
        },
        "aws-apigatewayv2-routeresponse": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "ModelSelectionExpression": "",
                "ResponseModels": "",
                "ResponseParameters": "",
                "RouteId": "",
                "RouteResponseKey": ""
            },
            "Type:": "AWS::ApiGatewayV2::RouteResponse"
        },
        "aws-apigatewayv2-stage": {
            "Metadata": {},
            "Properties": {
                "AccessLogSettings": "",
                "AccessPolicyId": "",
                "ApiId": "",
                "AutoDeploy": "",
                "ClientCertificateId": "",
                "DefaultRouteSettings": "",
                "DeploymentId": "",
                "Description": "",
                "RouteSettings": "",
                "StageName": "",
                "StageVariables": "",
                "Tags": ""
            },
            "Type:": "AWS::ApiGatewayV2::Stage"
        },
        "aws-apigatewayv2-vpclink": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "SecurityGroupIds": "",
                "SubnetIds": "",
                "Tags": ""
            },
            "Type:": "AWS::ApiGatewayV2::VpcLink"
        },
        "aws-appconfig-application": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::AppConfig::Application"
        },
        "aws-appconfig-configurationprofile": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "Description": "",
                "LocationUri": "",
                "Name": "",
                "RetrievalRoleArn": "",
                "Tags": "",
                "Validators": ""
            },
            "Type:": "AWS::AppConfig::ConfigurationProfile"
        },
        "aws-appconfig-deployment": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "ConfigurationProfileId": "",
                "ConfigurationVersion": "",
                "DeploymentStrategyId": "",
                "Description": "",
                "EnvironmentId": "",
                "Tags": ""
            },
            "Type:": "AWS::AppConfig::Deployment"
        },
        "aws-appconfig-deploymentstrategy": {
            "Metadata": {},
            "Properties": {
                "DeploymentDurationInMinutes": "",
                "Description": "",
                "FinalBakeTimeInMinutes": "",
                "GrowthFactor": "",
                "GrowthType": "",
                "Name": "",
                "ReplicateTo": "",
                "Tags": ""
            },
            "Type:": "AWS::AppConfig::DeploymentStrategy"
        },
        "aws-appconfig-environment": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "Description": "",
                "Monitors": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::AppConfig::Environment"
        },
        "aws-appconfig-hostedconfigurationversion": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "ConfigurationProfileId": "",
                "Content": "",
                "ContentType": "",
                "Description": "",
                "LatestVersionNumber": ""
            },
            "Type:": "AWS::AppConfig::HostedConfigurationVersion"
        },
        "aws-appflow-connectorprofile": {
            "Metadata": {},
            "Properties": {
                "ConnectionMode": "",
                "ConnectorProfileConfig": "",
                "ConnectorProfileName": "",
                "ConnectorType": "",
                "KMSArn": ""
            },
            "Type:": "AWS::AppFlow::ConnectorProfile"
        },
        "aws-appflow-flow": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "DestinationFlowConfigList": "",
                "FlowName": "",
                "KMSArn": "",
                "SourceFlowConfig": "",
                "Tags": "",
                "Tasks": "",
                "TriggerConfig": ""
            },
            "Type:": "AWS::AppFlow::Flow"
        },
        "aws-appintegrations-eventintegration": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "EventBridgeBus": "",
                "EventFilter": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::AppIntegrations::EventIntegration"
        },
        "aws-applicationautoscaling-scalabletarget": {
            "Metadata": {},
            "Properties": {
                "MaxCapacity": "",
                "MinCapacity": "",
                "ResourceId": "",
                "RoleARN": "",
                "ScalableDimension": "",
                "ScheduledActions": "",
                "ServiceNamespace": "",
                "SuspendedState": ""
            },
            "Type:": "AWS::ApplicationAutoScaling::ScalableTarget"
        },
        "aws-applicationautoscaling-scalingpolicy": {
            "Metadata": {},
            "Properties": {
                "PolicyName": "",
                "PolicyType": "",
                "ResourceId": "",
                "ScalableDimension": "",
                "ScalingTargetId": "",
                "ServiceNamespace": "",
                "StepScalingPolicyConfiguration": "",
                "TargetTrackingScalingPolicyConfiguration": ""
            },
            "Type:": "AWS::ApplicationAutoScaling::ScalingPolicy"
        },
        "aws-applicationinsights-application": {
            "Metadata": {},
            "Properties": {
                "AutoConfigurationEnabled": "",
                "CWEMonitorEnabled": "",
                "ComponentMonitoringSettings": "",
                "CustomComponents": "",
                "LogPatternSets": "",
                "OpsCenterEnabled": "",
                "OpsItemSNSTopicArn": "",
                "ResourceGroupName": "",
                "Tags": ""
            },
            "Type:": "AWS::ApplicationInsights::Application"
        },
        "aws-appmesh-gatewayroute": {
            "Metadata": {},
            "Properties": {
                "GatewayRouteName": "",
                "MeshName": "",
                "MeshOwner": "",
                "Spec": "",
                "Tags": "",
                "VirtualGatewayName": ""
            },
            "Type:": "AWS::AppMesh::GatewayRoute"
        },
        "aws-appmesh-mesh": {
            "Metadata": {},
            "Properties": {
                "MeshName": "",
                "Spec": "",
                "Tags": ""
            },
            "Type:": "AWS::AppMesh::Mesh"
        },
        "aws-appmesh-route": {
            "Metadata": {},
            "Properties": {
                "MeshName": "",
                "MeshOwner": "",
                "RouteName": "",
                "Spec": "",
                "Tags": "",
                "VirtualRouterName": ""
            },
            "Type:": "AWS::AppMesh::Route"
        },
        "aws-appmesh-virtualgateway": {
            "Metadata": {},
            "Properties": {
                "MeshName": "",
                "MeshOwner": "",
                "Spec": "",
                "Tags": "",
                "VirtualGatewayName": ""
            },
            "Type:": "AWS::AppMesh::VirtualGateway"
        },
        "aws-appmesh-virtualnode": {
            "Metadata": {},
            "Properties": {
                "MeshName": "",
                "MeshOwner": "",
                "Spec": "",
                "Tags": "",
                "VirtualNodeName": ""
            },
            "Type:": "AWS::AppMesh::VirtualNode"
        },
        "aws-appmesh-virtualrouter": {
            "Metadata": {},
            "Properties": {
                "MeshName": "",
                "MeshOwner": "",
                "Spec": "",
                "Tags": "",
                "VirtualRouterName": ""
            },
            "Type:": "AWS::AppMesh::VirtualRouter"
        },
        "aws-appmesh-virtualservice": {
            "Metadata": {},
            "Properties": {
                "MeshName": "",
                "MeshOwner": "",
                "Spec": "",
                "Tags": "",
                "VirtualServiceName": ""
            },
            "Type:": "AWS::AppMesh::VirtualService"
        },
        "aws-appstream-directoryconfig": {
            "Metadata": {},
            "Properties": {
                "DirectoryName": "",
                "OrganizationalUnitDistinguishedNames": "",
                "ServiceAccountCredentials": ""
            },
            "Type:": "AWS::AppStream::DirectoryConfig"
        },
        "aws-appstream-fleet": {
            "Metadata": {},
            "Properties": {
                "ComputeCapacity": "",
                "Description": "",
                "DisconnectTimeoutInSeconds": "",
                "DisplayName": "",
                "DomainJoinInfo": "",
                "EnableDefaultInternetAccess": "",
                "FleetType": "",
                "IamRoleArn": "",
                "IdleDisconnectTimeoutInSeconds": "",
                "ImageArn": "",
                "ImageName": "",
                "InstanceType": "",
                "MaxUserDurationInSeconds": "",
                "Name": "",
                "StreamView": "",
                "Tags": "",
                "VpcConfig": ""
            },
            "Type:": "AWS::AppStream::Fleet"
        },
        "aws-appstream-imagebuilder": {
            "Metadata": {},
            "Properties": {
                "AccessEndpoints": "",
                "AppstreamAgentVersion": "",
                "Description": "",
                "DisplayName": "",
                "DomainJoinInfo": "",
                "EnableDefaultInternetAccess": "",
                "IamRoleArn": "",
                "ImageArn": "",
                "ImageName": "",
                "InstanceType": "",
                "Name": "",
                "Tags": "",
                "VpcConfig": ""
            },
            "Type:": "AWS::AppStream::ImageBuilder"
        },
        "aws-appstream-stack": {
            "Metadata": {},
            "Properties": {
                "AccessEndpoints": "",
                "ApplicationSettings": "",
                "AttributesToDelete": "",
                "DeleteStorageConnectors": "",
                "Description": "",
                "DisplayName": "",
                "EmbedHostDomains": "",
                "FeedbackURL": "",
                "Name": "",
                "RedirectURL": "",
                "StorageConnectors": "",
                "Tags": "",
                "UserSettings": ""
            },
            "Type:": "AWS::AppStream::Stack"
        },
        "aws-appstream-stackfleetassociation": {
            "Metadata": {},
            "Properties": {
                "FleetName": "",
                "StackName": ""
            },
            "Type:": "AWS::AppStream::StackFleetAssociation"
        },
        "aws-appstream-stackuserassociation": {
            "Metadata": {},
            "Properties": {
                "AuthenticationType": "",
                "SendEmailNotification": "",
                "StackName": "",
                "UserName": ""
            },
            "Type:": "AWS::AppStream::StackUserAssociation"
        },
        "aws-appstream-user": {
            "Metadata": {},
            "Properties": {
                "AuthenticationType": "",
                "FirstName": "",
                "LastName": "",
                "MessageAction": "",
                "UserName": ""
            },
            "Type:": "AWS::AppStream::User"
        },
        "aws-appsync-apicache": {
            "Metadata": {},
            "Properties": {
                "ApiCachingBehavior": "",
                "ApiId": "",
                "AtRestEncryptionEnabled": "",
                "TransitEncryptionEnabled": "",
                "Ttl": "",
                "Type": ""
            },
            "Type:": "AWS::AppSync::ApiCache"
        },
        "aws-appsync-apikey": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "ApiKeyId": "",
                "Description": "",
                "Expires": ""
            },
            "Type:": "AWS::AppSync::ApiKey"
        },
        "aws-appsync-datasource": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "Description": "",
                "DynamoDBConfig": "",
                "ElasticsearchConfig": "",
                "HttpConfig": "",
                "LambdaConfig": "",
                "Name": "",
                "RelationalDatabaseConfig": "",
                "ServiceRoleArn": "",
                "Type": ""
            },
            "Type:": "AWS::AppSync::DataSource"
        },
        "aws-appsync-functionconfiguration": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "DataSourceName": "",
                "Description": "",
                "FunctionVersion": "",
                "Name": "",
                "RequestMappingTemplate": "",
                "RequestMappingTemplateS3Location": "",
                "ResponseMappingTemplate": "",
                "ResponseMappingTemplateS3Location": "",
                "SyncConfig": ""
            },
            "Type:": "AWS::AppSync::FunctionConfiguration"
        },
        "aws-appsync-graphqlapi": {
            "Metadata": {},
            "Properties": {
                "AdditionalAuthenticationProviders": "",
                "AuthenticationType": "",
                "LogConfig": "",
                "Name": "",
                "OpenIDConnectConfig": "",
                "Tags": "",
                "UserPoolConfig": "",
                "XrayEnabled": ""
            },
            "Type:": "AWS::AppSync::GraphQLApi"
        },
        "aws-appsync-graphqlschema": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "Definition": "",
                "DefinitionS3Location": ""
            },
            "Type:": "AWS::AppSync::GraphQLSchema"
        },
        "aws-appsync-resolver": {
            "Metadata": {},
            "Properties": {
                "ApiId": "",
                "CachingConfig": "",
                "DataSourceName": "",
                "FieldName": "",
                "Kind": "",
                "PipelineConfig": "",
                "RequestMappingTemplate": "",
                "RequestMappingTemplateS3Location": "",
                "ResponseMappingTemplate": "",
                "ResponseMappingTemplateS3Location": "",
                "SyncConfig": "",
                "TypeName": ""
            },
            "Type:": "AWS::AppSync::Resolver"
        },
        "aws-athena-datacatalog": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Parameters": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::Athena::DataCatalog"
        },
        "aws-athena-namedquery": {
            "Metadata": {},
            "Properties": {
                "Database": "",
                "Description": "",
                "Name": "",
                "QueryString": "",
                "WorkGroup": ""
            },
            "Type:": "AWS::Athena::NamedQuery"
        },
        "aws-athena-workgroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "RecursiveDeleteOption": "",
                "State": "",
                "Tags": "",
                "WorkGroupConfiguration": "",
                "WorkGroupConfigurationUpdates": ""
            },
            "Type:": "AWS::Athena::WorkGroup"
        },
        "aws-auditmanager-assessment": {
            "Metadata": {},
            "Properties": {
                "AssessmentReportsDestination": "",
                "AwsAccount": "",
                "Description": "",
                "FrameworkId": "",
                "Name": "",
                "Roles": "",
                "Scope": "",
                "Status": "",
                "Tags": ""
            },
            "Type:": "AWS::AuditManager::Assessment"
        },
        "aws-autoscaling-autoscalinggroup": {
            "Metadata": {},
            "Properties": {
                "AutoScalingGroupName": "",
                "AvailabilityZones": "",
                "CapacityRebalance": "",
                "Cooldown": "",
                "DesiredCapacity": "",
                "HealthCheckGracePeriod": "",
                "HealthCheckType": "",
                "InstanceId": "",
                "LaunchConfigurationName": "",
                "LaunchTemplate": "",
                "LifecycleHookSpecificationList": "",
                "LoadBalancerNames": "",
                "MaxInstanceLifetime": "",
                "MaxSize": "",
                "MetricsCollection": "",
                "MinSize": "",
                "MixedInstancesPolicy": "",
                "NewInstancesProtectedFromScaleIn": "",
                "NotificationConfigurations": "",
                "PlacementGroup": "",
                "ServiceLinkedRoleARN": "",
                "Tags": "",
                "TargetGroupARNs": "",
                "TerminationPolicies": "",
                "VPCZoneIdentifier": ""
            },
            "Type:": "AWS::AutoScaling::AutoScalingGroup"
        },
        "aws-autoscaling-launchconfiguration": {
            "Metadata": {},
            "Properties": {
                "AssociatePublicIpAddress": "",
                "BlockDeviceMappings": "",
                "ClassicLinkVPCId": "",
                "ClassicLinkVPCSecurityGroups": "",
                "EbsOptimized": "",
                "IamInstanceProfile": "",
                "ImageId": "",
                "InstanceId": "",
                "InstanceMonitoring": "",
                "InstanceType": "",
                "KernelId": "",
                "KeyName": "",
                "LaunchConfigurationName": "",
                "MetadataOptions": "",
                "PlacementTenancy": "",
                "RamDiskId": "",
                "SecurityGroups": "",
                "SpotPrice": "",
                "UserData": ""
            },
            "Type:": "AWS::AutoScaling::LaunchConfiguration"
        },
        "aws-autoscaling-lifecyclehook": {
            "Metadata": {},
            "Properties": {
                "AutoScalingGroupName": "",
                "DefaultResult": "",
                "HeartbeatTimeout": "",
                "LifecycleHookName": "",
                "LifecycleTransition": "",
                "NotificationMetadata": "",
                "NotificationTargetARN": "",
                "RoleARN": ""
            },
            "Type:": "AWS::AutoScaling::LifecycleHook"
        },
        "aws-autoscaling-scalingpolicy": {
            "Metadata": {},
            "Properties": {
                "AdjustmentType": "",
                "AutoScalingGroupName": "",
                "Cooldown": "",
                "EstimatedInstanceWarmup": "",
                "MetricAggregationType": "",
                "MinAdjustmentMagnitude": "",
                "PolicyType": "",
                "ScalingAdjustment": "",
                "StepAdjustments": "",
                "TargetTrackingConfiguration": ""
            },
            "Type:": "AWS::AutoScaling::ScalingPolicy"
        },
        "aws-autoscaling-scheduledaction": {
            "Metadata": {},
            "Properties": {
                "AutoScalingGroupName": "",
                "DesiredCapacity": "",
                "EndTime": "",
                "MaxSize": "",
                "MinSize": "",
                "Recurrence": "",
                "StartTime": ""
            },
            "Type:": "AWS::AutoScaling::ScheduledAction"
        },
        "aws-autoscaling-warmpool": {
            "Metadata": {},
            "Properties": {
                "AutoScalingGroupName": "",
                "MaxGroupPreparedCapacity": "",
                "MinSize": "",
                "PoolState": ""
            },
            "Type:": "AWS::AutoScaling::WarmPool"
        },
        "aws-autoscalingplans-scalingplan": {
            "Metadata": {},
            "Properties": {
                "ApplicationSource": "",
                "ScalingInstructions": ""
            },
            "Type:": "AWS::AutoScalingPlans::ScalingPlan"
        },
        "aws-backup-backupplan": {
            "Metadata": {},
            "Properties": {
                "BackupPlan": "",
                "BackupPlanTags": ""
            },
            "Type:": "AWS::Backup::BackupPlan"
        },
        "aws-backup-backupselection": {
            "Metadata": {},
            "Properties": {
                "BackupPlanId": "",
                "BackupSelection": ""
            },
            "Type:": "AWS::Backup::BackupSelection"
        },
        "aws-backup-backupvault": {
            "Metadata": {},
            "Properties": {
                "AccessPolicy": "",
                "BackupVaultName": "",
                "BackupVaultTags": "",
                "EncryptionKeyArn": "",
                "Notifications": ""
            },
            "Type:": "AWS::Backup::BackupVault"
        },
        "aws-batch-computeenvironment": {
            "Metadata": {},
            "Properties": {
                "ComputeEnvironmentName": "",
                "ComputeResources": "",
                "ServiceRole": "",
                "State": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::Batch::ComputeEnvironment"
        },
        "aws-batch-jobdefinition": {
            "Metadata": {},
            "Properties": {
                "ContainerProperties": "",
                "JobDefinitionName": "",
                "NodeProperties": "",
                "Parameters": "",
                "PlatformCapabilities": "",
                "PropagateTags": "",
                "RetryStrategy": "",
                "Tags": "",
                "Timeout": "",
                "Type": ""
            },
            "Type:": "AWS::Batch::JobDefinition"
        },
        "aws-batch-jobqueue": {
            "Metadata": {},
            "Properties": {
                "ComputeEnvironmentOrder": "",
                "JobQueueName": "",
                "Priority": "",
                "State": "",
                "Tags": ""
            },
            "Type:": "AWS::Batch::JobQueue"
        },
        "aws-budgets-budget": {
            "Metadata": {},
            "Properties": {
                "Budget": "",
                "NotificationsWithSubscribers": ""
            },
            "Type:": "AWS::Budgets::Budget"
        },
        "aws-budgets-budgetsaction": {
            "Metadata": {},
            "Properties": {
                "ActionThreshold": "",
                "ActionType": "",
                "ApprovalModel": "",
                "BudgetName": "",
                "Definition": "",
                "ExecutionRoleArn": "",
                "NotificationType": "",
                "Subscribers": ""
            },
            "Type:": "AWS::Budgets::BudgetsAction"
        },
        "aws-cassandra-keyspace": {
            "Metadata": {},
            "Properties": {
                "KeyspaceName": "",
                "Tags": ""
            },
            "Type:": "AWS::Cassandra::Keyspace"
        },
        "aws-cassandra-table": {
            "Metadata": {},
            "Properties": {
                "BillingMode": "",
                "ClusteringKeyColumns": "",
                "KeyspaceName": "",
                "PartitionKeyColumns": "",
                "PointInTimeRecoveryEnabled": "",
                "RegularColumns": "",
                "TableName": "",
                "Tags": ""
            },
            "Type:": "AWS::Cassandra::Table"
        },
        "aws-ce-anomalymonitor": {
            "Metadata": {},
            "Properties": {
                "MonitorDimension": "",
                "MonitorName": "",
                "MonitorSpecification": "",
                "MonitorType": ""
            },
            "Type:": "AWS::CE::AnomalyMonitor"
        },
        "aws-ce-anomalysubscription": {
            "Metadata": {},
            "Properties": {
                "Frequency": "",
                "MonitorArnList": "",
                "Subscribers": "",
                "SubscriptionName": "",
                "Threshold": ""
            },
            "Type:": "AWS::CE::AnomalySubscription"
        },
        "aws-ce-costcategory": {
            "Metadata": {},
            "Properties": {
                "DefaultValue": "",
                "Name": "",
                "RuleVersion": "",
                "Rules": ""
            },
            "Type:": "AWS::CE::CostCategory"
        },
        "aws-certificatemanager-account": {
            "Metadata": {},
            "Properties": {
                "ExpiryEventsConfiguration": ""
            },
            "Type:": "AWS::CertificateManager::Account"
        },
        "aws-certificatemanager-certificate": {
            "Metadata": {},
            "Properties": {
                "CertificateAuthorityArn": "",
                "CertificateTransparencyLoggingPreference": "",
                "DomainName": "",
                "DomainValidationOptions": "",
                "SubjectAlternativeNames": "",
                "Tags": "",
                "ValidationMethod": ""
            },
            "Type:": "AWS::CertificateManager::Certificate"
        },
        "aws-chatbot-slackchannelconfiguration": {
            "Metadata": {},
            "Properties": {
                "ConfigurationName": "",
                "IamRoleArn": "",
                "LoggingLevel": "",
                "SlackChannelId": "",
                "SlackWorkspaceId": "",
                "SnsTopicArns": ""
            },
            "Type:": "AWS::Chatbot::SlackChannelConfiguration"
        },
        "aws-cloud9-environmentec2": {
            "Metadata": {},
            "Properties": {
                "AutomaticStopTimeMinutes": "",
                "ConnectionType": "",
                "Description": "",
                "ImageId": "",
                "InstanceType": "",
                "Name": "",
                "OwnerArn": "",
                "Repositories": "",
                "SubnetId": "",
                "Tags": ""
            },
            "Type:": "AWS::Cloud9::EnvironmentEC2"
        },
        "aws-cloudformation-customresource": {
            "Metadata": {},
            "Properties": {
                "ServiceToken": ""
            },
            "Type:": "AWS::CloudFormation::CustomResource"
        },
        "aws-cloudformation-macro": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "FunctionName": "",
                "LogGroupName": "",
                "LogRoleARN": "",
                "Name": ""
            },
            "Type:": "AWS::CloudFormation::Macro"
        },
        "aws-cloudformation-moduledefaultversion": {
            "Metadata": {},
            "Properties": {
                "Arn": "",
                "ModuleName": "",
                "VersionId": ""
            },
            "Type:": "AWS::CloudFormation::ModuleDefaultVersion"
        },
        "aws-cloudformation-moduleversion": {
            "Metadata": {},
            "Properties": {
                "ModuleName": "",
                "ModulePackage": ""
            },
            "Type:": "AWS::CloudFormation::ModuleVersion"
        },
        "aws-cloudformation-resourcedefaultversion": {
            "Metadata": {},
            "Properties": {
                "TypeName": "",
                "TypeVersionArn": "",
                "VersionId": ""
            },
            "Type:": "AWS::CloudFormation::ResourceDefaultVersion"
        },
        "aws-cloudformation-resourceversion": {
            "Metadata": {},
            "Properties": {
                "ExecutionRoleArn": "",
                "LoggingConfig": "",
                "SchemaHandlerPackage": "",
                "TypeName": ""
            },
            "Type:": "AWS::CloudFormation::ResourceVersion"
        },
        "aws-cloudformation-stack": {
            "Metadata": {},
            "Properties": {
                "NotificationARNs": "",
                "Parameters": "",
                "Tags": "",
                "TemplateURL": "",
                "TimeoutInMinutes": ""
            },
            "Type:": "AWS::CloudFormation::Stack"
        },
        "aws-cloudformation-stackset": {
            "Metadata": {},
            "Properties": {
                "AdministrationRoleARN": "",
                "AutoDeployment": "",
                "Capabilities": "",
                "Description": "",
                "ExecutionRoleName": "",
                "OperationPreferences": "",
                "Parameters": "",
                "PermissionModel": "",
                "StackInstancesGroup": "",
                "StackSetName": "",
                "Tags": "",
                "TemplateBody": "",
                "TemplateURL": ""
            },
            "Type:": "AWS::CloudFormation::StackSet"
        },
        "aws-cloudformation-waitcondition": {
            "Metadata": {},
            "Properties": {
                "Count": "",
                "Handle": "",
                "Timeout": ""
            },
            "Type:": "AWS::CloudFormation::WaitCondition"
        },
        "aws-cloudformation-waitconditionhandle": {
            "Metadata": {},
            "Properties": {},
            "Type:": "AWS::CloudFormation::WaitConditionHandle"
        },
        "aws-cloudfront-cachepolicy": {
            "Metadata": {},
            "Properties": {
                "CachePolicyConfig": ""
            },
            "Type:": "AWS::CloudFront::CachePolicy"
        },
        "aws-cloudfront-cloudfrontoriginaccessidentity": {
            "Metadata": {},
            "Properties": {
                "CloudFrontOriginAccessIdentityConfig": ""
            },
            "Type:": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
        },
        "aws-cloudfront-distribution": {
            "Metadata": {},
            "Properties": {
                "DistributionConfig": "",
                "Tags": ""
            },
            "Type:": "AWS::CloudFront::Distribution"
        },
        "aws-cloudfront-function": {
            "Metadata": {},
            "Properties": {
                "AutoPublish": "",
                "FunctionCode": "",
                "FunctionConfig": "",
                "FunctionMetadata": "",
                "Name": ""
            },
            "Type:": "AWS::CloudFront::Function"
        },
        "aws-cloudfront-keygroup": {
            "Metadata": {},
            "Properties": {
                "KeyGroupConfig": ""
            },
            "Type:": "AWS::CloudFront::KeyGroup"
        },
        "aws-cloudfront-originrequestpolicy": {
            "Metadata": {},
            "Properties": {
                "OriginRequestPolicyConfig": ""
            },
            "Type:": "AWS::CloudFront::OriginRequestPolicy"
        },
        "aws-cloudfront-publickey": {
            "Metadata": {},
            "Properties": {
                "PublicKeyConfig": ""
            },
            "Type:": "AWS::CloudFront::PublicKey"
        },
        "aws-cloudfront-realtimelogconfig": {
            "Metadata": {},
            "Properties": {
                "EndPoints": "",
                "Fields": "",
                "Name": "",
                "SamplingRate": ""
            },
            "Type:": "AWS::CloudFront::RealtimeLogConfig"
        },
        "aws-cloudfront-streamingdistribution": {
            "Metadata": {},
            "Properties": {
                "StreamingDistributionConfig": "",
                "Tags": ""
            },
            "Type:": "AWS::CloudFront::StreamingDistribution"
        },
        "aws-cloudtrail-trail": {
            "Metadata": {},
            "Properties": {
                "CloudWatchLogsLogGroupArn": "",
                "CloudWatchLogsRoleArn": "",
                "EnableLogFileValidation": "",
                "EventSelectors": "",
                "IncludeGlobalServiceEvents": "",
                "IsLogging": "",
                "IsMultiRegionTrail": "",
                "KMSKeyId": "",
                "S3BucketName": "",
                "S3KeyPrefix": "",
                "SnsTopicName": "",
                "Tags": "",
                "TrailName": ""
            },
            "Type:": "AWS::CloudTrail::Trail"
        },
        "aws-cloudwatch-alarm": {
            "Metadata": {},
            "Properties": {
                "ActionsEnabled": "",
                "AlarmActions": "",
                "AlarmDescription": "",
                "AlarmName": "",
                "ComparisonOperator": "",
                "DatapointsToAlarm": "",
                "Dimensions": "",
                "EvaluateLowSampleCountPercentile": "",
                "EvaluationPeriods": "",
                "ExtendedStatistic": "",
                "InsufficientDataActions": "",
                "MetricName": "",
                "Metrics": "",
                "Namespace": "",
                "OKActions": "",
                "Period": "",
                "Statistic": "",
                "Threshold": "",
                "ThresholdMetricId": "",
                "TreatMissingData": "",
                "Unit": ""
            },
            "Type:": "AWS::CloudWatch::Alarm"
        },
        "aws-cloudwatch-anomalydetector": {
            "Metadata": {},
            "Properties": {
                "Configuration": "",
                "Dimensions": "",
                "MetricName": "",
                "Namespace": "",
                "Stat": ""
            },
            "Type:": "AWS::CloudWatch::AnomalyDetector"
        },
        "aws-cloudwatch-compositealarm": {
            "Metadata": {},
            "Properties": {
                "ActionsEnabled": "",
                "AlarmActions": "",
                "AlarmDescription": "",
                "AlarmName": "",
                "AlarmRule": "",
                "InsufficientDataActions": "",
                "OKActions": ""
            },
            "Type:": "AWS::CloudWatch::CompositeAlarm"
        },
        "aws-cloudwatch-dashboard": {
            "Metadata": {},
            "Properties": {
                "DashboardBody": "",
                "DashboardName": ""
            },
            "Type:": "AWS::CloudWatch::Dashboard"
        },
        "aws-cloudwatch-insightrule": {
            "Metadata": {},
            "Properties": {
                "RuleBody": "",
                "RuleName": "",
                "RuleState": "",
                "Tags": ""
            },
            "Type:": "AWS::CloudWatch::InsightRule"
        },
        "aws-cloudwatch-metricstream": {
            "Metadata": {},
            "Properties": {
                "ExcludeFilters": "",
                "FirehoseArn": "",
                "IncludeFilters": "",
                "Name": "",
                "OutputFormat": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::CloudWatch::MetricStream"
        },
        "aws-codeartifact-domain": {
            "Metadata": {},
            "Properties": {
                "DomainName": "",
                "EncryptionKey": "",
                "PermissionsPolicyDocument": "",
                "Tags": ""
            },
            "Type:": "AWS::CodeArtifact::Domain"
        },
        "aws-codeartifact-repository": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "DomainName": "",
                "DomainOwner": "",
                "ExternalConnections": "",
                "PermissionsPolicyDocument": "",
                "RepositoryName": "",
                "Tags": "",
                "Upstreams": ""
            },
            "Type:": "AWS::CodeArtifact::Repository"
        },
        "aws-codebuild-project": {
            "Metadata": {},
            "Properties": {
                "Artifacts": "",
                "BadgeEnabled": "",
                "BuildBatchConfig": "",
                "Cache": "",
                "ConcurrentBuildLimit": "",
                "Description": "",
                "EncryptionKey": "",
                "Environment": "",
                "FileSystemLocations": "",
                "LogsConfig": "",
                "Name": "",
                "QueuedTimeoutInMinutes": "",
                "SecondaryArtifacts": "",
                "SecondarySourceVersions": "",
                "SecondarySources": "",
                "ServiceRole": "",
                "Source": "",
                "SourceVersion": "",
                "Tags": "",
                "TimeoutInMinutes": "",
                "Triggers": "",
                "VpcConfig": ""
            },
            "Type:": "AWS::CodeBuild::Project"
        },
        "aws-codebuild-reportgroup": {
            "Metadata": {},
            "Properties": {
                "DeleteReports": "",
                "ExportConfig": "",
                "Name": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::CodeBuild::ReportGroup"
        },
        "aws-codebuild-sourcecredential": {
            "Metadata": {},
            "Properties": {
                "AuthType": "",
                "ServerType": "",
                "Token": "",
                "Username": ""
            },
            "Type:": "AWS::CodeBuild::SourceCredential"
        },
        "aws-codecommit-repository": {
            "Metadata": {},
            "Properties": {
                "Code": "",
                "RepositoryDescription": "",
                "RepositoryName": "",
                "Tags": "",
                "Triggers": ""
            },
            "Type:": "AWS::CodeCommit::Repository"
        },
        "aws-codedeploy-application": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "ComputePlatform": ""
            },
            "Type:": "AWS::CodeDeploy::Application"
        },
        "aws-codedeploy-deploymentconfig": {
            "Metadata": {},
            "Properties": {
                "DeploymentConfigName": "",
                "MinimumHealthyHosts": ""
            },
            "Type:": "AWS::CodeDeploy::DeploymentConfig"
        },
        "aws-codedeploy-deploymentgroup": {
            "Metadata": {},
            "Properties": {
                "AlarmConfiguration": "",
                "ApplicationName": "",
                "AutoRollbackConfiguration": "",
                "AutoScalingGroups": "",
                "Deployment": "",
                "DeploymentConfigName": "",
                "DeploymentGroupName": "",
                "DeploymentStyle": "",
                "Ec2TagFilters": "",
                "Ec2TagSet": "",
                "LoadBalancerInfo": "",
                "OnPremisesInstanceTagFilters": "",
                "OnPremisesTagSet": "",
                "ServiceRoleArn": "",
                "TriggerConfigurations": ""
            },
            "Type:": "AWS::CodeDeploy::DeploymentGroup"
        },
        "aws-codeguruprofiler-profilinggroup": {
            "Metadata": {},
            "Properties": {
                "AgentPermissions": "",
                "AnomalyDetectionNotificationConfiguration": "",
                "ComputePlatform": "",
                "ProfilingGroupName": "",
                "Tags": ""
            },
            "Type:": "AWS::CodeGuruProfiler::ProfilingGroup"
        },
        "aws-codegurureviewer-repositoryassociation": {
            "Metadata": {},
            "Properties": {
                "ConnectionArn": "",
                "Name": "",
                "Owner": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::CodeGuruReviewer::RepositoryAssociation"
        },
        "aws-codepipeline-customactiontype": {
            "Metadata": {},
            "Properties": {
                "Category": "",
                "ConfigurationProperties": "",
                "InputArtifactDetails": "",
                "OutputArtifactDetails": "",
                "Provider": "",
                "Settings": "",
                "Tags": "",
                "Version": ""
            },
            "Type:": "AWS::CodePipeline::CustomActionType"
        },
        "aws-codepipeline-pipeline": {
            "Metadata": {},
            "Properties": {
                "ArtifactStore": "",
                "ArtifactStores": "",
                "DisableInboundStageTransitions": "",
                "Name": "",
                "RestartExecutionOnUpdate": "",
                "RoleArn": "",
                "Stages": "",
                "Tags": ""
            },
            "Type:": "AWS::CodePipeline::Pipeline"
        },
        "aws-codepipeline-webhook": {
            "Metadata": {},
            "Properties": {
                "Authentication": "",
                "AuthenticationConfiguration": "",
                "Filters": "",
                "Name": "",
                "RegisterWithThirdParty": "",
                "TargetAction": "",
                "TargetPipeline": "",
                "TargetPipelineVersion": ""
            },
            "Type:": "AWS::CodePipeline::Webhook"
        },
        "aws-codestar-githubrepository": {
            "Metadata": {},
            "Properties": {
                "Code": "",
                "ConnectionArn": "",
                "EnableIssues": "",
                "IsPrivate": "",
                "RepositoryAccessToken": "",
                "RepositoryDescription": "",
                "RepositoryName": "",
                "RepositoryOwner": ""
            },
            "Type:": "AWS::CodeStar::GitHubRepository"
        },
        "aws-codestarconnections-connection": {
            "Metadata": {},
            "Properties": {
                "ConnectionName": "",
                "HostArn": "",
                "ProviderType": "",
                "Tags": ""
            },
            "Type:": "AWS::CodeStarConnections::Connection"
        },
        "aws-codestarnotifications-notificationrule": {
            "Metadata": {},
            "Properties": {
                "DetailType": "",
                "EventTypeIds": "",
                "Name": "",
                "Resource": "",
                "Status": "",
                "Tags": "",
                "Targets": ""
            },
            "Type:": "AWS::CodeStarNotifications::NotificationRule"
        },
        "aws-cognito-identitypool": {
            "Metadata": {},
            "Properties": {
                "AllowClassicFlow": "",
                "AllowUnauthenticatedIdentities": "",
                "CognitoEvents": "",
                "CognitoIdentityProviders": "",
                "CognitoStreams": "",
                "DeveloperProviderName": "",
                "IdentityPoolName": "",
                "OpenIdConnectProviderARNs": "",
                "PushSync": "",
                "SamlProviderARNs": "",
                "SupportedLoginProviders": ""
            },
            "Type:": "AWS::Cognito::IdentityPool"
        },
        "aws-cognito-identitypoolroleattachment": {
            "Metadata": {},
            "Properties": {
                "IdentityPoolId": "",
                "RoleMappings": "",
                "Roles": ""
            },
            "Type:": "AWS::Cognito::IdentityPoolRoleAttachment"
        },
        "aws-cognito-userpool": {
            "Metadata": {},
            "Properties": {
                "AccountRecoverySetting": "",
                "AdminCreateUserConfig": "",
                "AliasAttributes": "",
                "AutoVerifiedAttributes": "",
                "DeviceConfiguration": "",
                "EmailConfiguration": "",
                "EmailVerificationMessage": "",
                "EmailVerificationSubject": "",
                "EnabledMfas": "",
                "LambdaConfig": "",
                "MfaConfiguration": "",
                "Policies": "",
                "Schema": "",
                "SmsAuthenticationMessage": "",
                "SmsConfiguration": "",
                "SmsVerificationMessage": "",
                "UserPoolAddOns": "",
                "UserPoolName": "",
                "UserPoolTags": "",
                "UsernameAttributes": "",
                "UsernameConfiguration": "",
                "VerificationMessageTemplate": ""
            },
            "Type:": "AWS::Cognito::UserPool"
        },
        "aws-cognito-userpoolclient": {
            "Metadata": {},
            "Properties": {
                "AccessTokenValidity": "",
                "AllowedOAuthFlows": "",
                "AllowedOAuthFlowsUserPoolClient": "",
                "AllowedOAuthScopes": "",
                "AnalyticsConfiguration": "",
                "CallbackURLs": "",
                "ClientName": "",
                "DefaultRedirectURI": "",
                "ExplicitAuthFlows": "",
                "GenerateSecret": "",
                "IdTokenValidity": "",
                "LogoutURLs": "",
                "PreventUserExistenceErrors": "",
                "ReadAttributes": "",
                "RefreshTokenValidity": "",
                "SupportedIdentityProviders": "",
                "TokenValidityUnits": "",
                "UserPoolId": "",
                "WriteAttributes": ""
            },
            "Type:": "AWS::Cognito::UserPoolClient"
        },
        "aws-cognito-userpooldomain": {
            "Metadata": {},
            "Properties": {
                "CustomDomainConfig": "",
                "Domain": "",
                "UserPoolId": ""
            },
            "Type:": "AWS::Cognito::UserPoolDomain"
        },
        "aws-cognito-userpoolgroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "GroupName": "",
                "Precedence": "",
                "RoleArn": "",
                "UserPoolId": ""
            },
            "Type:": "AWS::Cognito::UserPoolGroup"
        },
        "aws-cognito-userpoolidentityprovider": {
            "Metadata": {},
            "Properties": {
                "AttributeMapping": "",
                "IdpIdentifiers": "",
                "ProviderDetails": "",
                "ProviderName": "",
                "ProviderType": "",
                "UserPoolId": ""
            },
            "Type:": "AWS::Cognito::UserPoolIdentityProvider"
        },
        "aws-cognito-userpoolresourceserver": {
            "Metadata": {},
            "Properties": {
                "Identifier": "",
                "Name": "",
                "Scopes": "",
                "UserPoolId": ""
            },
            "Type:": "AWS::Cognito::UserPoolResourceServer"
        },
        "aws-cognito-userpoolriskconfigurationattachment": {
            "Metadata": {},
            "Properties": {
                "AccountTakeoverRiskConfiguration": "",
                "ClientId": "",
                "CompromisedCredentialsRiskConfiguration": "",
                "RiskExceptionConfiguration": "",
                "UserPoolId": ""
            },
            "Type:": "AWS::Cognito::UserPoolRiskConfigurationAttachment"
        },
        "aws-cognito-userpooluicustomizationattachment": {
            "Metadata": {},
            "Properties": {
                "CSS": "",
                "ClientId": "",
                "UserPoolId": ""
            },
            "Type:": "AWS::Cognito::UserPoolUICustomizationAttachment"
        },
        "aws-cognito-userpooluser": {
            "Metadata": {},
            "Properties": {
                "ClientMetadata": "",
                "DesiredDeliveryMediums": "",
                "ForceAliasCreation": "",
                "MessageAction": "",
                "UserAttributes": "",
                "UserPoolId": "",
                "Username": "",
                "ValidationData": ""
            },
            "Type:": "AWS::Cognito::UserPoolUser"
        },
        "aws-cognito-userpoolusertogroupattachment": {
            "Metadata": {},
            "Properties": {
                "GroupName": "",
                "UserPoolId": "",
                "Username": ""
            },
            "Type:": "AWS::Cognito::UserPoolUserToGroupAttachment"
        },
        "aws-config-aggregationauthorization": {
            "Metadata": {},
            "Properties": {
                "AuthorizedAccountId": "",
                "AuthorizedAwsRegion": "",
                "Tags": ""
            },
            "Type:": "AWS::Config::AggregationAuthorization"
        },
        "aws-config-configrule": {
            "Metadata": {},
            "Properties": {
                "ConfigRuleName": "",
                "Description": "",
                "InputParameters": "",
                "MaximumExecutionFrequency": "",
                "Scope": "",
                "Source": ""
            },
            "Type:": "AWS::Config::ConfigRule"
        },
        "aws-config-configurationaggregator": {
            "Metadata": {},
            "Properties": {
                "AccountAggregationSources": "",
                "ConfigurationAggregatorName": "",
                "OrganizationAggregationSource": "",
                "Tags": ""
            },
            "Type:": "AWS::Config::ConfigurationAggregator"
        },
        "aws-config-configurationrecorder": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "RecordingGroup": "",
                "RoleARN": ""
            },
            "Type:": "AWS::Config::ConfigurationRecorder"
        },
        "aws-config-conformancepack": {
            "Metadata": {},
            "Properties": {
                "ConformancePackInputParameters": "",
                "ConformancePackName": "",
                "DeliveryS3Bucket": "",
                "DeliveryS3KeyPrefix": "",
                "TemplateBody": "",
                "TemplateS3Uri": ""
            },
            "Type:": "AWS::Config::ConformancePack"
        },
        "aws-config-deliverychannel": {
            "Metadata": {},
            "Properties": {
                "ConfigSnapshotDeliveryProperties": "",
                "Name": "",
                "S3BucketName": "",
                "S3KeyPrefix": "",
                "S3KmsKeyArn": "",
                "SnsTopicARN": ""
            },
            "Type:": "AWS::Config::DeliveryChannel"
        },
        "aws-config-organizationconfigrule": {
            "Metadata": {},
            "Properties": {
                "ExcludedAccounts": "",
                "OrganizationConfigRuleName": "",
                "OrganizationCustomRuleMetadata": "",
                "OrganizationManagedRuleMetadata": ""
            },
            "Type:": "AWS::Config::OrganizationConfigRule"
        },
        "aws-config-organizationconformancepack": {
            "Metadata": {},
            "Properties": {
                "ConformancePackInputParameters": "",
                "DeliveryS3Bucket": "",
                "DeliveryS3KeyPrefix": "",
                "ExcludedAccounts": "",
                "OrganizationConformancePackName": "",
                "TemplateBody": "",
                "TemplateS3Uri": ""
            },
            "Type:": "AWS::Config::OrganizationConformancePack"
        },
        "aws-config-remediationconfiguration": {
            "Metadata": {},
            "Properties": {
                "Automatic": "",
                "ConfigRuleName": "",
                "ExecutionControls": "",
                "MaximumAutomaticAttempts": "",
                "Parameters": "",
                "ResourceType": "",
                "RetryAttemptSeconds": "",
                "TargetId": "",
                "TargetType": "",
                "TargetVersion": ""
            },
            "Type:": "AWS::Config::RemediationConfiguration"
        },
        "aws-config-storedquery": {
            "Metadata": {},
            "Properties": {
                "QueryDescription": "",
                "QueryExpression": "",
                "QueryName": "",
                "Tags": ""
            },
            "Type:": "AWS::Config::StoredQuery"
        },
        "aws-customerprofiles-domain": {
            "Metadata": {},
            "Properties": {
                "DeadLetterQueueUrl": "",
                "DefaultEncryptionKey": "",
                "DefaultExpirationDays": "",
                "DomainName": "",
                "Tags": ""
            },
            "Type:": "AWS::CustomerProfiles::Domain"
        },
        "aws-customerprofiles-integration": {
            "Metadata": {},
            "Properties": {
                "DomainName": "",
                "ObjectTypeName": "",
                "Tags": "",
                "Uri": ""
            },
            "Type:": "AWS::CustomerProfiles::Integration"
        },
        "aws-customerprofiles-objecttype": {
            "Metadata": {},
            "Properties": {
                "AllowProfileCreation": "",
                "Description": "",
                "DomainName": "",
                "EncryptionKey": "",
                "ExpirationDays": "",
                "Fields": "",
                "Keys": "",
                "ObjectTypeName": "",
                "Tags": "",
                "TemplateId": ""
            },
            "Type:": "AWS::CustomerProfiles::ObjectType"
        },
        "aws-databrew-dataset": {
            "Metadata": {},
            "Properties": {
                "Format": "",
                "FormatOptions": "",
                "Input": "",
                "Name": "",
                "PathOptions": "",
                "Tags": ""
            },
            "Type:": "AWS::DataBrew::Dataset"
        },
        "aws-databrew-job": {
            "Metadata": {},
            "Properties": {
                "DatasetName": "",
                "EncryptionKeyArn": "",
                "EncryptionMode": "",
                "JobSample": "",
                "LogSubscription": "",
                "MaxCapacity": "",
                "MaxRetries": "",
                "Name": "",
                "OutputLocation": "",
                "Outputs": "",
                "ProjectName": "",
                "Recipe": "",
                "RoleArn": "",
                "Tags": "",
                "Timeout": "",
                "Type": ""
            },
            "Type:": "AWS::DataBrew::Job"
        },
        "aws-databrew-project": {
            "Metadata": {},
            "Properties": {
                "DatasetName": "",
                "Name": "",
                "RecipeName": "",
                "RoleArn": "",
                "Sample": "",
                "Tags": ""
            },
            "Type:": "AWS::DataBrew::Project"
        },
        "aws-databrew-recipe": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Steps": "",
                "Tags": ""
            },
            "Type:": "AWS::DataBrew::Recipe"
        },
        "aws-databrew-schedule": {
            "Metadata": {},
            "Properties": {
                "CronExpression": "",
                "JobNames": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::DataBrew::Schedule"
        },
        "aws-datapipeline-pipeline": {
            "Metadata": {},
            "Properties": {
                "Activate": "",
                "Description": "",
                "Name": "",
                "ParameterObjects": "",
                "ParameterValues": "",
                "PipelineObjects": "",
                "PipelineTags": ""
            },
            "Type:": "AWS::DataPipeline::Pipeline"
        },
        "aws-datasync-agent": {
            "Metadata": {},
            "Properties": {
                "ActivationKey": "",
                "AgentName": "",
                "SecurityGroupArns": "",
                "SubnetArns": "",
                "Tags": "",
                "VpcEndpointId": ""
            },
            "Type:": "AWS::DataSync::Agent"
        },
        "aws-datasync-locationefs": {
            "Metadata": {},
            "Properties": {
                "Ec2Config": "",
                "EfsFilesystemArn": "",
                "Subdirectory": "",
                "Tags": ""
            },
            "Type:": "AWS::DataSync::LocationEFS"
        },
        "aws-datasync-locationfsxwindows": {
            "Metadata": {},
            "Properties": {
                "Domain": "",
                "FsxFilesystemArn": "",
                "Password": "",
                "SecurityGroupArns": "",
                "Subdirectory": "",
                "Tags": "",
                "User": ""
            },
            "Type:": "AWS::DataSync::LocationFSxWindows"
        },
        "aws-datasync-locationnfs": {
            "Metadata": {},
            "Properties": {
                "MountOptions": "",
                "OnPremConfig": "",
                "ServerHostname": "",
                "Subdirectory": "",
                "Tags": ""
            },
            "Type:": "AWS::DataSync::LocationNFS"
        },
        "aws-datasync-locationobjectstorage": {
            "Metadata": {},
            "Properties": {
                "AccessKey": "",
                "AgentArns": "",
                "BucketName": "",
                "SecretKey": "",
                "ServerHostname": "",
                "ServerPort": "",
                "ServerProtocol": "",
                "Subdirectory": "",
                "Tags": ""
            },
            "Type:": "AWS::DataSync::LocationObjectStorage"
        },
        "aws-datasync-locations3": {
            "Metadata": {},
            "Properties": {
                "S3BucketArn": "",
                "S3Config": "",
                "S3StorageClass": "",
                "Subdirectory": "",
                "Tags": ""
            },
            "Type:": "AWS::DataSync::LocationS3"
        },
        "aws-datasync-locationsmb": {
            "Metadata": {},
            "Properties": {
                "AgentArns": "",
                "Domain": "",
                "MountOptions": "",
                "Password": "",
                "ServerHostname": "",
                "Subdirectory": "",
                "Tags": "",
                "User": ""
            },
            "Type:": "AWS::DataSync::LocationSMB"
        },
        "aws-datasync-task": {
            "Metadata": {},
            "Properties": {
                "CloudWatchLogGroupArn": "",
                "DestinationLocationArn": "",
                "Excludes": "",
                "Name": "",
                "Options": "",
                "Schedule": "",
                "SourceLocationArn": "",
                "Tags": ""
            },
            "Type:": "AWS::DataSync::Task"
        },
        "aws-dax-cluster": {
            "Metadata": {},
            "Properties": {
                "AvailabilityZones": "",
                "ClusterName": "",
                "Description": "",
                "IAMRoleARN": "",
                "NodeType": "",
                "NotificationTopicARN": "",
                "ParameterGroupName": "",
                "PreferredMaintenanceWindow": "",
                "ReplicationFactor": "",
                "SSESpecification": "",
                "SecurityGroupIds": "",
                "SubnetGroupName": "",
                "Tags": ""
            },
            "Type:": "AWS::DAX::Cluster"
        },
        "aws-dax-parametergroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "ParameterGroupName": "",
                "ParameterNameValues": ""
            },
            "Type:": "AWS::DAX::ParameterGroup"
        },
        "aws-dax-subnetgroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "SubnetGroupName": "",
                "SubnetIds": ""
            },
            "Type:": "AWS::DAX::SubnetGroup"
        },
        "aws-detective-graph": {
            "Metadata": {},
            "Properties": {
                "Tags": ""
            },
            "Type:": "AWS::Detective::Graph"
        },
        "aws-detective-memberinvitation": {
            "Metadata": {},
            "Properties": {
                "DisableEmailNotification": "",
                "GraphArn": "",
                "MemberEmailAddress": "",
                "MemberId": "",
                "Message": ""
            },
            "Type:": "AWS::Detective::MemberInvitation"
        },
        "aws-devopsguru-notificationchannel": {
            "Metadata": {},
            "Properties": {
                "Config": ""
            },
            "Type:": "AWS::DevOpsGuru::NotificationChannel"
        },
        "aws-devopsguru-resourcecollection": {
            "Metadata": {},
            "Properties": {
                "ResourceCollectionFilter": ""
            },
            "Type:": "AWS::DevOpsGuru::ResourceCollection"
        },
        "aws-directoryservice-microsoftad": {
            "Metadata": {},
            "Properties": {
                "CreateAlias": "",
                "Edition": "",
                "EnableSso": "",
                "Name": "",
                "Password": "",
                "ShortName": "",
                "VpcSettings": ""
            },
            "Type:": "AWS::DirectoryService::MicrosoftAD"
        },
        "aws-directoryservice-simplead": {
            "Metadata": {},
            "Properties": {
                "CreateAlias": "",
                "Description": "",
                "EnableSso": "",
                "Name": "",
                "Password": "",
                "ShortName": "",
                "Size": "",
                "VpcSettings": ""
            },
            "Type:": "AWS::DirectoryService::SimpleAD"
        },
        "aws-dlm-lifecyclepolicy": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "ExecutionRoleArn": "",
                "PolicyDetails": "",
                "State": "",
                "Tags": ""
            },
            "Type:": "AWS::DLM::LifecyclePolicy"
        },
        "aws-dms-certificate": {
            "Metadata": {},
            "Properties": {
                "CertificateIdentifier": "",
                "CertificatePem": "",
                "CertificateWallet": ""
            },
            "Type:": "AWS::DMS::Certificate"
        },
        "aws-dms-endpoint": {
            "Metadata": {},
            "Properties": {
                "CertificateArn": "",
                "DatabaseName": "",
                "DocDbSettings": "",
                "DynamoDbSettings": "",
                "ElasticsearchSettings": "",
                "EndpointIdentifier": "",
                "EndpointType": "",
                "EngineName": "",
                "ExtraConnectionAttributes": "",
                "IbmDb2Settings": "",
                "KafkaSettings": "",
                "KinesisSettings": "",
                "KmsKeyId": "",
                "MicrosoftSqlServerSettings": "",
                "MongoDbSettings": "",
                "MySqlSettings": "",
                "NeptuneSettings": "",
                "OracleSettings": "",
                "Password": "",
                "Port": "",
                "PostgreSqlSettings": "",
                "RedshiftSettings": "",
                "ResourceIdentifier": "",
                "S3Settings": "",
                "ServerName": "",
                "SslMode": "",
                "SybaseSettings": "",
                "Tags": "",
                "Username": ""
            },
            "Type:": "AWS::DMS::Endpoint"
        },
        "aws-dms-eventsubscription": {
            "Metadata": {},
            "Properties": {
                "Enabled": "",
                "EventCategories": "",
                "SnsTopicArn": "",
                "SourceIds": "",
                "SourceType": "",
                "SubscriptionName": "",
                "Tags": ""
            },
            "Type:": "AWS::DMS::EventSubscription"
        },
        "aws-dms-replicationinstance": {
            "Metadata": {},
            "Properties": {
                "AllocatedStorage": "",
                "AllowMajorVersionUpgrade": "",
                "AutoMinorVersionUpgrade": "",
                "AvailabilityZone": "",
                "EngineVersion": "",
                "KmsKeyId": "",
                "MultiAZ": "",
                "PreferredMaintenanceWindow": "",
                "PubliclyAccessible": "",
                "ReplicationInstanceClass": "",
                "ReplicationInstanceIdentifier": "",
                "ReplicationSubnetGroupIdentifier": "",
                "ResourceIdentifier": "",
                "Tags": "",
                "VpcSecurityGroupIds": ""
            },
            "Type:": "AWS::DMS::ReplicationInstance"
        },
        "aws-dms-replicationsubnetgroup": {
            "Metadata": {},
            "Properties": {
                "ReplicationSubnetGroupDescription": "",
                "ReplicationSubnetGroupIdentifier": "",
                "SubnetIds": "",
                "Tags": ""
            },
            "Type:": "AWS::DMS::ReplicationSubnetGroup"
        },
        "aws-dms-replicationtask": {
            "Metadata": {},
            "Properties": {
                "CdcStartPosition": "",
                "CdcStartTime": "",
                "CdcStopPosition": "",
                "MigrationType": "",
                "ReplicationInstanceArn": "",
                "ReplicationTaskIdentifier": "",
                "ReplicationTaskSettings": "",
                "ResourceIdentifier": "",
                "SourceEndpointArn": "",
                "TableMappings": "",
                "Tags": "",
                "TargetEndpointArn": "",
                "TaskData": ""
            },
            "Type:": "AWS::DMS::ReplicationTask"
        },
        "aws-docdb-dbcluster": {
            "Metadata": {},
            "Properties": {
                "AvailabilityZones": "",
                "BackupRetentionPeriod": "",
                "DBClusterIdentifier": "",
                "DBClusterParameterGroupName": "",
                "DBSubnetGroupName": "",
                "DeletionProtection": "",
                "EnableCloudwatchLogsExports": "",
                "EngineVersion": "",
                "KmsKeyId": "",
                "MasterUserPassword": "",
                "MasterUsername": "",
                "Port": "",
                "PreferredBackupWindow": "",
                "PreferredMaintenanceWindow": "",
                "SnapshotIdentifier": "",
                "StorageEncrypted": "",
                "Tags": "",
                "VpcSecurityGroupIds": ""
            },
            "Type:": "AWS::DocDB::DBCluster"
        },
        "aws-docdb-dbclusterparametergroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Family": "",
                "Name": "",
                "Parameters": "",
                "Tags": ""
            },
            "Type:": "AWS::DocDB::DBClusterParameterGroup"
        },
        "aws-docdb-dbinstance": {
            "Metadata": {},
            "Properties": {
                "AutoMinorVersionUpgrade": "",
                "AvailabilityZone": "",
                "DBClusterIdentifier": "",
                "DBInstanceClass": "",
                "DBInstanceIdentifier": "",
                "PreferredMaintenanceWindow": "",
                "Tags": ""
            },
            "Type:": "AWS::DocDB::DBInstance"
        },
        "aws-docdb-dbsubnetgroup": {
            "Metadata": {},
            "Properties": {
                "DBSubnetGroupDescription": "",
                "DBSubnetGroupName": "",
                "SubnetIds": "",
                "Tags": ""
            },
            "Type:": "AWS::DocDB::DBSubnetGroup"
        },
        "aws-dynamodb-table": {
            "Metadata": {},
            "Properties": {
                "AttributeDefinitions": "",
                "BillingMode": "",
                "ContributorInsightsSpecification": "",
                "GlobalSecondaryIndexes": "",
                "KeySchema": "",
                "KinesisStreamSpecification": "",
                "LocalSecondaryIndexes": "",
                "PointInTimeRecoverySpecification": "",
                "ProvisionedThroughput": "",
                "SSESpecification": "",
                "StreamSpecification": "",
                "TableName": "",
                "Tags": "",
                "TimeToLiveSpecification": ""
            },
            "Type:": "AWS::DynamoDB::Table"
        },
        "aws-ec2-capacityreservation": {
            "Metadata": {},
            "Properties": {
                "AvailabilityZone": "",
                "EbsOptimized": "",
                "EndDate": "",
                "EndDateType": "",
                "EphemeralStorage": "",
                "InstanceCount": "",
                "InstanceMatchCriteria": "",
                "InstancePlatform": "",
                "InstanceType": "",
                "TagSpecifications": "",
                "Tenancy": ""
            },
            "Type:": "AWS::EC2::CapacityReservation"
        },
        "aws-ec2-carriergateway": {
            "Metadata": {},
            "Properties": {
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::CarrierGateway"
        },
        "aws-ec2-clientvpnauthorizationrule": {
            "Metadata": {},
            "Properties": {
                "AccessGroupId": "",
                "AuthorizeAllGroups": "",
                "ClientVpnEndpointId": "",
                "Description": "",
                "TargetNetworkCidr": ""
            },
            "Type:": "AWS::EC2::ClientVpnAuthorizationRule"
        },
        "aws-ec2-clientvpnendpoint": {
            "Metadata": {},
            "Properties": {
                "AuthenticationOptions": "",
                "ClientCidrBlock": "",
                "ClientConnectOptions": "",
                "ConnectionLogOptions": "",
                "Description": "",
                "DnsServers": "",
                "SecurityGroupIds": "",
                "SelfServicePortal": "",
                "ServerCertificateArn": "",
                "SplitTunnel": "",
                "TagSpecifications": "",
                "TransportProtocol": "",
                "VpcId": "",
                "VpnPort": ""
            },
            "Type:": "AWS::EC2::ClientVpnEndpoint"
        },
        "aws-ec2-clientvpnroute": {
            "Metadata": {},
            "Properties": {
                "ClientVpnEndpointId": "",
                "Description": "",
                "DestinationCidrBlock": "",
                "TargetVpcSubnetId": ""
            },
            "Type:": "AWS::EC2::ClientVpnRoute"
        },
        "aws-ec2-clientvpntargetnetworkassociation": {
            "Metadata": {},
            "Properties": {
                "ClientVpnEndpointId": "",
                "SubnetId": ""
            },
            "Type:": "AWS::EC2::ClientVpnTargetNetworkAssociation"
        },
        "aws-ec2-customergateway": {
            "Metadata": {},
            "Properties": {
                "BgpAsn": "",
                "IpAddress": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::EC2::CustomerGateway"
        },
        "aws-ec2-dhcpoptions": {
            "Metadata": {},
            "Properties": {
                "DomainName": "",
                "DomainNameServers": "",
                "NetbiosNameServers": "",
                "NetbiosNodeType": "",
                "NtpServers": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::DHCPOptions"
        },
        "aws-ec2-ec2fleet": {
            "Metadata": {},
            "Properties": {
                "ExcessCapacityTerminationPolicy": "",
                "LaunchTemplateConfigs": "",
                "OnDemandOptions": "",
                "ReplaceUnhealthyInstances": "",
                "SpotOptions": "",
                "TagSpecifications": "",
                "TargetCapacitySpecification": "",
                "TerminateInstancesWithExpiration": "",
                "Type": "",
                "ValidFrom": "",
                "ValidUntil": ""
            },
            "Type:": "AWS::EC2::EC2Fleet"
        },
        "aws-ec2-egressonlyinternetgateway": {
            "Metadata": {},
            "Properties": {
                "VpcId": ""
            },
            "Type:": "AWS::EC2::EgressOnlyInternetGateway"
        },
        "aws-ec2-eip": {
            "Metadata": {},
            "Properties": {
                "Domain": "",
                "InstanceId": "",
                "PublicIpv4Pool": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::EIP"
        },
        "aws-ec2-eipassociation": {
            "Metadata": {},
            "Properties": {
                "AllocationId": "",
                "EIP": "",
                "InstanceId": "",
                "NetworkInterfaceId": "",
                "PrivateIpAddress": ""
            },
            "Type:": "AWS::EC2::EIPAssociation"
        },
        "aws-ec2-enclavecertificateiamroleassociation": {
            "Metadata": {},
            "Properties": {
                "CertificateArn": "",
                "RoleArn": ""
            },
            "Type:": "AWS::EC2::EnclaveCertificateIamRoleAssociation"
        },
        "aws-ec2-flowlog": {
            "Metadata": {},
            "Properties": {
                "DeliverLogsPermissionArn": "",
                "LogDestination": "",
                "LogDestinationType": "",
                "LogFormat": "",
                "LogGroupName": "",
                "MaxAggregationInterval": "",
                "ResourceId": "",
                "ResourceType": "",
                "Tags": "",
                "TrafficType": ""
            },
            "Type:": "AWS::EC2::FlowLog"
        },
        "aws-ec2-gatewayroutetableassociation": {
            "Metadata": {},
            "Properties": {
                "GatewayId": "",
                "RouteTableId": ""
            },
            "Type:": "AWS::EC2::GatewayRouteTableAssociation"
        },
        "aws-ec2-host": {
            "Metadata": {},
            "Properties": {
                "AutoPlacement": "",
                "AvailabilityZone": "",
                "HostRecovery": "",
                "InstanceType": ""
            },
            "Type:": "AWS::EC2::Host"
        },
        "aws-ec2-instance": {
            "Metadata": {},
            "Properties": {
                "AdditionalInfo": "",
                "Affinity": "",
                "AvailabilityZone": "",
                "BlockDeviceMappings": "",
                "CpuOptions": "",
                "CreditSpecification": "",
                "DisableApiTermination": "",
                "EbsOptimized": "",
                "ElasticGpuSpecifications": "",
                "ElasticInferenceAccelerators": "",
                "EnclaveOptions": "",
                "HibernationOptions": "",
                "HostId": "",
                "HostResourceGroupArn": "",
                "IamInstanceProfile": "",
                "ImageId": "",
                "InstanceInitiatedShutdownBehavior": "",
                "InstanceType": "",
                "Ipv6AddressCount": "",
                "Ipv6Addresses": "",
                "KernelId": "",
                "KeyName": "",
                "LaunchTemplate": "",
                "LicenseSpecifications": "",
                "Monitoring": "",
                "NetworkInterfaces": "",
                "PlacementGroupName": "",
                "PrivateIpAddress": "",
                "RamdiskId": "",
                "SecurityGroupIds": "",
                "SecurityGroups": "",
                "SourceDestCheck": "",
                "SsmAssociations": "",
                "SubnetId": "",
                "Tags": "",
                "Tenancy": "",
                "UserData": "",
                "Volumes": ""
            },
            "Type:": "AWS::EC2::Instance"
        },
        "aws-ec2-internetgateway": {
            "Metadata": {},
            "Properties": {
                "Tags": ""
            },
            "Type:": "AWS::EC2::InternetGateway"
        },
        "aws-ec2-launchtemplate": {
            "Metadata": {},
            "Properties": {
                "LaunchTemplateData": "",
                "LaunchTemplateName": "",
                "TagSpecifications": ""
            },
            "Type:": "AWS::EC2::LaunchTemplate"
        },
        "aws-ec2-localgatewayroute": {
            "Metadata": {},
            "Properties": {
                "DestinationCidrBlock": "",
                "LocalGatewayRouteTableId": "",
                "LocalGatewayVirtualInterfaceGroupId": ""
            },
            "Type:": "AWS::EC2::LocalGatewayRoute"
        },
        "aws-ec2-localgatewayroutetablevpcassociation": {
            "Metadata": {},
            "Properties": {
                "LocalGatewayRouteTableId": "",
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::LocalGatewayRouteTableVPCAssociation"
        },
        "aws-ec2-natgateway": {
            "Metadata": {},
            "Properties": {
                "AllocationId": "",
                "SubnetId": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::NatGateway"
        },
        "aws-ec2-networkacl": {
            "Metadata": {},
            "Properties": {
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::NetworkAcl"
        },
        "aws-ec2-networkaclentry": {
            "Metadata": {},
            "Properties": {
                "CidrBlock": "",
                "Egress": "",
                "Icmp": "",
                "Ipv6CidrBlock": "",
                "NetworkAclId": "",
                "PortRange": "",
                "Protocol": "",
                "RuleAction": "",
                "RuleNumber": ""
            },
            "Type:": "AWS::EC2::NetworkAclEntry"
        },
        "aws-ec2-networkinsightsanalysis": {
            "Metadata": {},
            "Properties": {
                "FilterInArns": "",
                "NetworkInsightsPathId": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::NetworkInsightsAnalysis"
        },
        "aws-ec2-networkinsightspath": {
            "Metadata": {},
            "Properties": {
                "Destination": "",
                "DestinationIp": "",
                "DestinationPort": "",
                "Protocol": "",
                "Source": "",
                "SourceIp": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::NetworkInsightsPath"
        },
        "aws-ec2-networkinterface": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "GroupSet": "",
                "InterfaceType": "",
                "Ipv6AddressCount": "",
                "Ipv6Addresses": "",
                "PrivateIpAddress": "",
                "PrivateIpAddresses": "",
                "SecondaryPrivateIpAddressCount": "",
                "SourceDestCheck": "",
                "SubnetId": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::NetworkInterface"
        },
        "aws-ec2-networkinterfaceattachment": {
            "Metadata": {},
            "Properties": {
                "DeleteOnTermination": "",
                "DeviceIndex": "",
                "InstanceId": "",
                "NetworkInterfaceId": ""
            },
            "Type:": "AWS::EC2::NetworkInterfaceAttachment"
        },
        "aws-ec2-networkinterfacepermission": {
            "Metadata": {},
            "Properties": {
                "AwsAccountId": "",
                "NetworkInterfaceId": "",
                "Permission": ""
            },
            "Type:": "AWS::EC2::NetworkInterfacePermission"
        },
        "aws-ec2-placementgroup": {
            "Metadata": {},
            "Properties": {
                "Strategy": ""
            },
            "Type:": "AWS::EC2::PlacementGroup"
        },
        "aws-ec2-prefixlist": {
            "Metadata": {},
            "Properties": {
                "AddressFamily": "",
                "Entries": "",
                "MaxEntries": "",
                "PrefixListName": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::PrefixList"
        },
        "aws-ec2-route": {
            "Metadata": {},
            "Properties": {
                "CarrierGatewayId": "",
                "DestinationCidrBlock": "",
                "DestinationIpv6CidrBlock": "",
                "EgressOnlyInternetGatewayId": "",
                "GatewayId": "",
                "InstanceId": "",
                "LocalGatewayId": "",
                "NatGatewayId": "",
                "NetworkInterfaceId": "",
                "RouteTableId": "",
                "TransitGatewayId": "",
                "VpcEndpointId": "",
                "VpcPeeringConnectionId": ""
            },
            "Type:": "AWS::EC2::Route"
        },
        "aws-ec2-routetable": {
            "Metadata": {},
            "Properties": {
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::RouteTable"
        },
        "aws-ec2-securitygroup": {
            "Metadata": {},
            "Properties": {
                "GroupDescription": "",
                "GroupName": "",
                "SecurityGroupEgress": "",
                "SecurityGroupIngress": "",
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::SecurityGroup"
        },
        "aws-ec2-securitygroupegress": {
            "Metadata": {},
            "Properties": {
                "CidrIp": "",
                "CidrIpv6": "",
                "Description": "",
                "DestinationPrefixListId": "",
                "DestinationSecurityGroupId": "",
                "FromPort": "",
                "GroupId": "",
                "IpProtocol": "",
                "ToPort": ""
            },
            "Type:": "AWS::EC2::SecurityGroupEgress"
        },
        "aws-ec2-securitygroupingress": {
            "Metadata": {},
            "Properties": {
                "CidrIp": "",
                "CidrIpv6": "",
                "Description": "",
                "FromPort": "",
                "GroupId": "",
                "GroupName": "",
                "IpProtocol": "",
                "SourcePrefixListId": "",
                "SourceSecurityGroupId": "",
                "SourceSecurityGroupName": "",
                "SourceSecurityGroupOwnerId": "",
                "ToPort": ""
            },
            "Type:": "AWS::EC2::SecurityGroupIngress"
        },
        "aws-ec2-spotfleet": {
            "Metadata": {},
            "Properties": {
                "SpotFleetRequestConfigData": ""
            },
            "Type:": "AWS::EC2::SpotFleet"
        },
        "aws-ec2-subnet": {
            "Metadata": {},
            "Properties": {
                "AssignIpv6AddressOnCreation": "",
                "AvailabilityZone": "",
                "CidrBlock": "",
                "Ipv6CidrBlock": "",
                "MapPublicIpOnLaunch": "",
                "OutpostArn": "",
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::Subnet"
        },
        "aws-ec2-subnetcidrblock": {
            "Metadata": {},
            "Properties": {
                "Ipv6CidrBlock": "",
                "SubnetId": ""
            },
            "Type:": "AWS::EC2::SubnetCidrBlock"
        },
        "aws-ec2-subnetnetworkaclassociation": {
            "Metadata": {},
            "Properties": {
                "NetworkAclId": "",
                "SubnetId": ""
            },
            "Type:": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "aws-ec2-subnetroutetableassociation": {
            "Metadata": {},
            "Properties": {
                "RouteTableId": "",
                "SubnetId": ""
            },
            "Type:": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "aws-ec2-trafficmirrorfilter": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "NetworkServices": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::TrafficMirrorFilter"
        },
        "aws-ec2-trafficmirrorfilterrule": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "DestinationCidrBlock": "",
                "DestinationPortRange": "",
                "Protocol": "",
                "RuleAction": "",
                "RuleNumber": "",
                "SourceCidrBlock": "",
                "SourcePortRange": "",
                "TrafficDirection": "",
                "TrafficMirrorFilterId": ""
            },
            "Type:": "AWS::EC2::TrafficMirrorFilterRule"
        },
        "aws-ec2-trafficmirrorsession": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "NetworkInterfaceId": "",
                "PacketLength": "",
                "SessionNumber": "",
                "Tags": "",
                "TrafficMirrorFilterId": "",
                "TrafficMirrorTargetId": "",
                "VirtualNetworkId": ""
            },
            "Type:": "AWS::EC2::TrafficMirrorSession"
        },
        "aws-ec2-trafficmirrortarget": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "NetworkInterfaceId": "",
                "NetworkLoadBalancerArn": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::TrafficMirrorTarget"
        },
        "aws-ec2-transitgateway": {
            "Metadata": {},
            "Properties": {
                "AmazonSideAsn": "",
                "AutoAcceptSharedAttachments": "",
                "DefaultRouteTableAssociation": "",
                "DefaultRouteTablePropagation": "",
                "Description": "",
                "DnsSupport": "",
                "MulticastSupport": "",
                "Tags": "",
                "VpnEcmpSupport": ""
            },
            "Type:": "AWS::EC2::TransitGateway"
        },
        "aws-ec2-transitgatewayattachment": {
            "Metadata": {},
            "Properties": {
                "SubnetIds": "",
                "Tags": "",
                "TransitGatewayId": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayAttachment"
        },
        "aws-ec2-transitgatewayconnect": {
            "Metadata": {},
            "Properties": {
                "Options": "",
                "Tags": "",
                "TransportTransitGatewayAttachmentId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayConnect"
        },
        "aws-ec2-transitgatewaymulticastdomain": {
            "Metadata": {},
            "Properties": {
                "Options": "",
                "Tags": "",
                "TransitGatewayId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayMulticastDomain"
        },
        "aws-ec2-transitgatewaymulticastdomainassociation": {
            "Metadata": {},
            "Properties": {
                "SubnetId": "",
                "TransitGatewayAttachmentId": "",
                "TransitGatewayMulticastDomainId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayMulticastDomainAssociation"
        },
        "aws-ec2-transitgatewaymulticastgroupmember": {
            "Metadata": {},
            "Properties": {
                "GroupIpAddress": "",
                "NetworkInterfaceId": "",
                "TransitGatewayMulticastDomainId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayMulticastGroupMember"
        },
        "aws-ec2-transitgatewaymulticastgroupsource": {
            "Metadata": {},
            "Properties": {
                "GroupIpAddress": "",
                "NetworkInterfaceId": "",
                "TransitGatewayMulticastDomainId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayMulticastGroupSource"
        },
        "aws-ec2-transitgatewayroute": {
            "Metadata": {},
            "Properties": {
                "Blackhole": "",
                "DestinationCidrBlock": "",
                "TransitGatewayAttachmentId": "",
                "TransitGatewayRouteTableId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayRoute"
        },
        "aws-ec2-transitgatewayroutetable": {
            "Metadata": {},
            "Properties": {
                "Tags": "",
                "TransitGatewayId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayRouteTable"
        },
        "aws-ec2-transitgatewayroutetableassociation": {
            "Metadata": {},
            "Properties": {
                "TransitGatewayAttachmentId": "",
                "TransitGatewayRouteTableId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayRouteTableAssociation"
        },
        "aws-ec2-transitgatewayroutetablepropagation": {
            "Metadata": {},
            "Properties": {
                "TransitGatewayAttachmentId": "",
                "TransitGatewayRouteTableId": ""
            },
            "Type:": "AWS::EC2::TransitGatewayRouteTablePropagation"
        },
        "aws-ec2-volume": {
            "Metadata": {},
            "Properties": {
                "AutoEnableIO": "",
                "AvailabilityZone": "",
                "Encrypted": "",
                "Iops": "",
                "KmsKeyId": "",
                "MultiAttachEnabled": "",
                "OutpostArn": "",
                "Size": "",
                "SnapshotId": "",
                "Tags": "",
                "Throughput": "",
                "VolumeType": ""
            },
            "Type:": "AWS::EC2::Volume"
        },
        "aws-ec2-volumeattachment": {
            "Metadata": {},
            "Properties": {
                "Device": "",
                "InstanceId": "",
                "VolumeId": ""
            },
            "Type:": "AWS::EC2::VolumeAttachment"
        },
        "aws-ec2-vpc": {
            "Metadata": {},
            "Properties": {
                "CidrBlock": "",
                "EnableDnsHostnames": "",
                "EnableDnsSupport": "",
                "InstanceTenancy": "",
                "Tags": ""
            },
            "Type:": "AWS::EC2::VPC"
        },
        "aws-ec2-vpccidrblock": {
            "Metadata": {},
            "Properties": {
                "AmazonProvidedIpv6CidrBlock": "",
                "CidrBlock": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::VPCCidrBlock"
        },
        "aws-ec2-vpcdhcpoptionsassociation": {
            "Metadata": {},
            "Properties": {
                "DhcpOptionsId": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::VPCDHCPOptionsAssociation"
        },
        "aws-ec2-vpcendpoint": {
            "Metadata": {},
            "Properties": {
                "PolicyDocument": "",
                "PrivateDnsEnabled": "",
                "RouteTableIds": "",
                "SecurityGroupIds": "",
                "ServiceName": "",
                "SubnetIds": "",
                "VpcEndpointType": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::VPCEndpoint"
        },
        "aws-ec2-vpcendpointconnectionnotification": {
            "Metadata": {},
            "Properties": {
                "ConnectionEvents": "",
                "ConnectionNotificationArn": "",
                "ServiceId": "",
                "VPCEndpointId": ""
            },
            "Type:": "AWS::EC2::VPCEndpointConnectionNotification"
        },
        "aws-ec2-vpcendpointservice": {
            "Metadata": {},
            "Properties": {
                "AcceptanceRequired": "",
                "GatewayLoadBalancerArns": "",
                "NetworkLoadBalancerArns": ""
            },
            "Type:": "AWS::EC2::VPCEndpointService"
        },
        "aws-ec2-vpcendpointservicepermissions": {
            "Metadata": {},
            "Properties": {
                "AllowedPrincipals": "",
                "ServiceId": ""
            },
            "Type:": "AWS::EC2::VPCEndpointServicePermissions"
        },
        "aws-ec2-vpcgatewayattachment": {
            "Metadata": {},
            "Properties": {
                "InternetGatewayId": "",
                "VpcId": "",
                "VpnGatewayId": ""
            },
            "Type:": "AWS::EC2::VPCGatewayAttachment"
        },
        "aws-ec2-vpcpeeringconnection": {
            "Metadata": {},
            "Properties": {
                "PeerOwnerId": "",
                "PeerRegion": "",
                "PeerRoleArn": "",
                "PeerVpcId": "",
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::EC2::VPCPeeringConnection"
        },
        "aws-ec2-vpnconnection": {
            "Metadata": {},
            "Properties": {
                "CustomerGatewayId": "",
                "StaticRoutesOnly": "",
                "Tags": "",
                "TransitGatewayId": "",
                "Type": "",
                "VpnGatewayId": "",
                "VpnTunnelOptionsSpecifications": ""
            },
            "Type:": "AWS::EC2::VPNConnection"
        },
        "aws-ec2-vpnconnectionroute": {
            "Metadata": {},
            "Properties": {
                "DestinationCidrBlock": "",
                "VpnConnectionId": ""
            },
            "Type:": "AWS::EC2::VPNConnectionRoute"
        },
        "aws-ec2-vpngateway": {
            "Metadata": {},
            "Properties": {
                "AmazonSideAsn": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::EC2::VPNGateway"
        },
        "aws-ec2-vpngatewayroutepropagation": {
            "Metadata": {},
            "Properties": {
                "RouteTableIds": "",
                "VpnGatewayId": ""
            },
            "Type:": "AWS::EC2::VPNGatewayRoutePropagation"
        },
        "aws-ecr-publicrepository": {
            "Metadata": {},
            "Properties": {
                "RepositoryCatalogData": "",
                "RepositoryName": "",
                "RepositoryPolicyText": "",
                "Tags": ""
            },
            "Type:": "AWS::ECR::PublicRepository"
        },
        "aws-ecr-registrypolicy": {
            "Metadata": {},
            "Properties": {
                "PolicyText": ""
            },
            "Type:": "AWS::ECR::RegistryPolicy"
        },
        "aws-ecr-replicationconfiguration": {
            "Metadata": {},
            "Properties": {
                "ReplicationConfiguration": ""
            },
            "Type:": "AWS::ECR::ReplicationConfiguration"
        },
        "aws-ecr-repository": {
            "Metadata": {},
            "Properties": {
                "EncryptionConfiguration": "",
                "ImageScanningConfiguration": "",
                "ImageTagMutability": "",
                "LifecyclePolicy": "",
                "RepositoryName": "",
                "RepositoryPolicyText": "",
                "Tags": ""
            },
            "Type:": "AWS::ECR::Repository"
        },
        "aws-ecs-capacityprovider": {
            "Metadata": {},
            "Properties": {
                "AutoScalingGroupProvider": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::ECS::CapacityProvider"
        },
        "aws-ecs-cluster": {
            "Metadata": {},
            "Properties": {
                "CapacityProviders": "",
                "ClusterName": "",
                "ClusterSettings": "",
                "Configuration": "",
                "DefaultCapacityProviderStrategy": "",
                "Tags": ""
            },
            "Type:": "AWS::ECS::Cluster"
        },
        "aws-ecs-clustercapacityproviderassociations": {
            "Metadata": {},
            "Properties": {
                "CapacityProviders": "",
                "Cluster": "",
                "DefaultCapacityProviderStrategy": ""
            },
            "Type:": "AWS::ECS::ClusterCapacityProviderAssociations"
        },
        "aws-ecs-primarytaskset": {
            "Metadata": {},
            "Properties": {
                "Cluster": "",
                "Service": "",
                "TaskSetId": ""
            },
            "Type:": "AWS::ECS::PrimaryTaskSet"
        },
        "aws-ecs-service": {
            "Metadata": {},
            "Properties": {
                "CapacityProviderStrategy": "",
                "Cluster": "",
                "DeploymentConfiguration": "",
                "DeploymentController": "",
                "DesiredCount": "",
                "EnableECSManagedTags": "",
                "EnableExecuteCommand": "",
                "HealthCheckGracePeriodSeconds": "",
                "LaunchType": "",
                "LoadBalancers": "",
                "NetworkConfiguration": "",
                "PlacementConstraints": "",
                "PlacementStrategies": "",
                "PlatformVersion": "",
                "PropagateTags": "",
                "Role": "",
                "SchedulingStrategy": "",
                "ServiceName": "",
                "ServiceRegistries": "",
                "Tags": "",
                "TaskDefinition": ""
            },
            "Type:": "AWS::ECS::Service"
        },
        "aws-ecs-taskdefinition": {
            "Metadata": {},
            "Properties": {
                "ContainerDefinitions": "",
                "Cpu": "",
                "EphemeralStorage": "",
                "ExecutionRoleArn": "",
                "Family": "",
                "InferenceAccelerators": "",
                "IpcMode": "",
                "Memory": "",
                "NetworkMode": "",
                "PidMode": "",
                "PlacementConstraints": "",
                "ProxyConfiguration": "",
                "RequiresCompatibilities": "",
                "Tags": "",
                "TaskRoleArn": "",
                "Volumes": ""
            },
            "Type:": "AWS::ECS::TaskDefinition"
        },
        "aws-ecs-taskset": {
            "Metadata": {},
            "Properties": {
                "Cluster": "",
                "ExternalId": "",
                "LaunchType": "",
                "LoadBalancers": "",
                "NetworkConfiguration": "",
                "PlatformVersion": "",
                "Scale": "",
                "Service": "",
                "ServiceRegistries": "",
                "TaskDefinition": ""
            },
            "Type:": "AWS::ECS::TaskSet"
        },
        "aws-efs-accesspoint": {
            "Metadata": {},
            "Properties": {
                "AccessPointTags": "",
                "ClientToken": "",
                "FileSystemId": "",
                "PosixUser": "",
                "RootDirectory": ""
            },
            "Type:": "AWS::EFS::AccessPoint"
        },
        "aws-efs-filesystem": {
            "Metadata": {},
            "Properties": {
                "AvailabilityZoneName": "",
                "BackupPolicy": "",
                "BypassPolicyLockoutSafetyCheck": "",
                "Encrypted": "",
                "FileSystemPolicy": "",
                "FileSystemTags": "",
                "KmsKeyId": "",
                "LifecyclePolicies": "",
                "PerformanceMode": "",
                "ProvisionedThroughputInMibps": "",
                "ThroughputMode": ""
            },
            "Type:": "AWS::EFS::FileSystem"
        },
        "aws-efs-mounttarget": {
            "Metadata": {},
            "Properties": {
                "FileSystemId": "",
                "IpAddress": "",
                "SecurityGroups": "",
                "SubnetId": ""
            },
            "Type:": "AWS::EFS::MountTarget"
        },
        "aws-eks-addon": {
            "Metadata": {},
            "Properties": {
                "AddonName": "",
                "AddonVersion": "",
                "ClusterName": "",
                "ResolveConflicts": "",
                "ServiceAccountRoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::EKS::Addon"
        },
        "aws-eks-cluster": {
            "Metadata": {},
            "Properties": {
                "EncryptionConfig": "",
                "KubernetesNetworkConfig": "",
                "Name": "",
                "ResourcesVpcConfig": "",
                "RoleArn": "",
                "Version": ""
            },
            "Type:": "AWS::EKS::Cluster"
        },
        "aws-eks-fargateprofile": {
            "Metadata": {},
            "Properties": {
                "ClusterName": "",
                "FargateProfileName": "",
                "PodExecutionRoleArn": "",
                "Selectors": "",
                "Subnets": "",
                "Tags": ""
            },
            "Type:": "AWS::EKS::FargateProfile"
        },
        "aws-eks-nodegroup": {
            "Metadata": {},
            "Properties": {
                "AmiType": "",
                "CapacityType": "",
                "ClusterName": "",
                "DiskSize": "",
                "ForceUpdateEnabled": "",
                "InstanceTypes": "",
                "Labels": "",
                "LaunchTemplate": "",
                "NodeRole": "",
                "NodegroupName": "",
                "ReleaseVersion": "",
                "RemoteAccess": "",
                "ScalingConfig": "",
                "Subnets": "",
                "Tags": "",
                "Taints": "",
                "Version": ""
            },
            "Type:": "AWS::EKS::Nodegroup"
        },
        "aws-elasticache-cachecluster": {
            "Metadata": {},
            "Properties": {
                "AZMode": "",
                "AutoMinorVersionUpgrade": "",
                "CacheNodeType": "",
                "CacheParameterGroupName": "",
                "CacheSecurityGroupNames": "",
                "CacheSubnetGroupName": "",
                "ClusterName": "",
                "Engine": "",
                "EngineVersion": "",
                "LogDeliveryConfigurations": "",
                "NotificationTopicArn": "",
                "NumCacheNodes": "",
                "Port": "",
                "PreferredAvailabilityZone": "",
                "PreferredAvailabilityZones": "",
                "PreferredMaintenanceWindow": "",
                "SnapshotArns": "",
                "SnapshotName": "",
                "SnapshotRetentionLimit": "",
                "SnapshotWindow": "",
                "Tags": "",
                "VpcSecurityGroupIds": ""
            },
            "Type:": "AWS::ElastiCache::CacheCluster"
        },
        "aws-elasticache-globalreplicationgroup": {
            "Metadata": {},
            "Properties": {
                "AutomaticFailoverEnabled": "",
                "CacheNodeType": "",
                "CacheParameterGroupName": "",
                "EngineVersion": "",
                "GlobalNodeGroupCount": "",
                "GlobalReplicationGroupDescription": "",
                "GlobalReplicationGroupIdSuffix": "",
                "Members": "",
                "RegionalConfigurations": ""
            },
            "Type:": "AWS::ElastiCache::GlobalReplicationGroup"
        },
        "aws-elasticache-parametergroup": {
            "Metadata": {},
            "Properties": {
                "CacheParameterGroupFamily": "",
                "Description": "",
                "Properties": "",
                "Tags": ""
            },
            "Type:": "AWS::ElastiCache::ParameterGroup"
        },
        "aws-elasticache-replicationgroup": {
            "Metadata": {},
            "Properties": {
                "AtRestEncryptionEnabled": "",
                "AuthToken": "",
                "AutoMinorVersionUpgrade": "",
                "AutomaticFailoverEnabled": "",
                "CacheNodeType": "",
                "CacheParameterGroupName": "",
                "CacheSecurityGroupNames": "",
                "CacheSubnetGroupName": "",
                "Engine": "",
                "EngineVersion": "",
                "GlobalReplicationGroupId": "",
                "KmsKeyId": "",
                "LogDeliveryConfigurations": "",
                "MultiAZEnabled": "",
                "NodeGroupConfiguration": "",
                "NotificationTopicArn": "",
                "NumCacheClusters": "",
                "NumNodeGroups": "",
                "Port": "",
                "PreferredCacheClusterAZs": "",
                "PreferredMaintenanceWindow": "",
                "PrimaryClusterId": "",
                "ReplicasPerNodeGroup": "",
                "ReplicationGroupDescription": "",
                "ReplicationGroupId": "",
                "SecurityGroupIds": "",
                "SnapshotArns": "",
                "SnapshotName": "",
                "SnapshotRetentionLimit": "",
                "SnapshotWindow": "",
                "SnapshottingClusterId": "",
                "Tags": "",
                "TransitEncryptionEnabled": "",
                "UserGroupIds": ""
            },
            "Type:": "AWS::ElastiCache::ReplicationGroup"
        },
        "aws-elasticache-securitygroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Tags": ""
            },
            "Type:": "AWS::ElastiCache::SecurityGroup"
        },
        "aws-elasticache-securitygroupingress": {
            "Metadata": {},
            "Properties": {
                "CacheSecurityGroupName": "",
                "EC2SecurityGroupName": "",
                "EC2SecurityGroupOwnerId": ""
            },
            "Type:": "AWS::ElastiCache::SecurityGroupIngress"
        },
        "aws-elasticache-subnetgroup": {
            "Metadata": {},
            "Properties": {
                "CacheSubnetGroupName": "",
                "Description": "",
                "SubnetIds": "",
                "Tags": ""
            },
            "Type:": "AWS::ElastiCache::SubnetGroup"
        },
        "aws-elasticache-user": {
            "Metadata": {},
            "Properties": {
                "AccessString": "",
                "Engine": "",
                "NoPasswordRequired": "",
                "Passwords": "",
                "UserId": "",
                "UserName": ""
            },
            "Type:": "AWS::ElastiCache::User"
        },
        "aws-elasticache-usergroup": {
            "Metadata": {},
            "Properties": {
                "Engine": "",
                "UserGroupId": "",
                "UserIds": ""
            },
            "Type:": "AWS::ElastiCache::UserGroup"
        },
        "aws-elasticbeanstalk-application": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "Description": "",
                "ResourceLifecycleConfig": ""
            },
            "Type:": "AWS::ElasticBeanstalk::Application"
        },
        "aws-elasticbeanstalk-applicationversion": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "Description": "",
                "SourceBundle": ""
            },
            "Type:": "AWS::ElasticBeanstalk::ApplicationVersion"
        },
        "aws-elasticbeanstalk-configurationtemplate": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "Description": "",
                "EnvironmentId": "",
                "OptionSettings": "",
                "PlatformArn": "",
                "SolutionStackName": "",
                "SourceConfiguration": ""
            },
            "Type:": "AWS::ElasticBeanstalk::ConfigurationTemplate"
        },
        "aws-elasticbeanstalk-environment": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "CNAMEPrefix": "",
                "Description": "",
                "EnvironmentName": "",
                "OperationsRole": "",
                "OptionSettings": "",
                "PlatformArn": "",
                "SolutionStackName": "",
                "Tags": "",
                "TemplateName": "",
                "Tier": "",
                "VersionLabel": ""
            },
            "Type:": "AWS::ElasticBeanstalk::Environment"
        },
        "aws-elasticloadbalancing-loadbalancer": {
            "Metadata": {},
            "Properties": {
                "AccessLoggingPolicy": "",
                "AppCookieStickinessPolicy": "",
                "AvailabilityZones": "",
                "ConnectionDrainingPolicy": "",
                "ConnectionSettings": "",
                "CrossZone": "",
                "HealthCheck": "",
                "Instances": "",
                "LBCookieStickinessPolicy": "",
                "Listeners": "",
                "LoadBalancerName": "",
                "Policies": "",
                "Scheme": "",
                "SecurityGroups": "",
                "Subnets": "",
                "Tags": ""
            },
            "Type:": "AWS::ElasticLoadBalancing::LoadBalancer"
        },
        "aws-elasticloadbalancingv2-listener": {
            "Metadata": {},
            "Properties": {
                "AlpnPolicy": "",
                "Certificates": "",
                "DefaultActions": "",
                "LoadBalancerArn": "",
                "Port": "",
                "Protocol": "",
                "SslPolicy": ""
            },
            "Type:": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "aws-elasticloadbalancingv2-listenercertificate": {
            "Metadata": {},
            "Properties": {
                "Certificates": "",
                "ListenerArn": ""
            },
            "Type:": "AWS::ElasticLoadBalancingV2::ListenerCertificate"
        },
        "aws-elasticloadbalancingv2-listenerrule": {
            "Metadata": {},
            "Properties": {
                "Actions": "",
                "Conditions": "",
                "ListenerArn": "",
                "Priority": ""
            },
            "Type:": "AWS::ElasticLoadBalancingV2::ListenerRule"
        },
        "aws-elasticloadbalancingv2-loadbalancer": {
            "Metadata": {},
            "Properties": {
                "IpAddressType": "",
                "LoadBalancerAttributes": "",
                "Name": "",
                "Scheme": "",
                "SecurityGroups": "",
                "SubnetMappings": "",
                "Subnets": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::ElasticLoadBalancingV2::LoadBalancer"
        },
        "aws-elasticloadbalancingv2-targetgroup": {
            "Metadata": {},
            "Properties": {
                "HealthCheckEnabled": "",
                "HealthCheckIntervalSeconds": "",
                "HealthCheckPath": "",
                "HealthCheckPort": "",
                "HealthCheckProtocol": "",
                "HealthCheckTimeoutSeconds": "",
                "HealthyThresholdCount": "",
                "Matcher": "",
                "Name": "",
                "Port": "",
                "Protocol": "",
                "ProtocolVersion": "",
                "Tags": "",
                "TargetGroupAttributes": "",
                "TargetType": "",
                "Targets": "",
                "UnhealthyThresholdCount": "",
                "VpcId": ""
            },
            "Type:": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "aws-elasticsearch-domain": {
            "Metadata": {},
            "Properties": {
                "AccessPolicies": "",
                "AdvancedOptions": "",
                "AdvancedSecurityOptions": "",
                "CognitoOptions": "",
                "DomainEndpointOptions": "",
                "DomainName": "",
                "EBSOptions": "",
                "ElasticsearchClusterConfig": "",
                "ElasticsearchVersion": "",
                "EncryptionAtRestOptions": "",
                "LogPublishingOptions": "",
                "NodeToNodeEncryptionOptions": "",
                "SnapshotOptions": "",
                "Tags": "",
                "VPCOptions": ""
            },
            "Type:": "AWS::Elasticsearch::Domain"
        },
        "aws-emr-cluster": {
            "Metadata": {},
            "Properties": {
                "AdditionalInfo": "",
                "Applications": "",
                "AutoScalingRole": "",
                "BootstrapActions": "",
                "Configurations": "",
                "CustomAmiId": "",
                "EbsRootVolumeSize": "",
                "Instances": "",
                "JobFlowRole": "",
                "KerberosAttributes": "",
                "LogEncryptionKmsKeyId": "",
                "LogUri": "",
                "ManagedScalingPolicy": "",
                "Name": "",
                "ReleaseLabel": "",
                "ScaleDownBehavior": "",
                "SecurityConfiguration": "",
                "ServiceRole": "",
                "StepConcurrencyLevel": "",
                "Steps": "",
                "Tags": "",
                "VisibleToAllUsers": ""
            },
            "Type:": "AWS::EMR::Cluster"
        },
        "aws-emr-instancefleetconfig": {
            "Metadata": {},
            "Properties": {
                "ClusterId": "",
                "InstanceFleetType": "",
                "InstanceTypeConfigs": "",
                "LaunchSpecifications": "",
                "Name": "",
                "TargetOnDemandCapacity": "",
                "TargetSpotCapacity": ""
            },
            "Type:": "AWS::EMR::InstanceFleetConfig"
        },
        "aws-emr-instancegroupconfig": {
            "Metadata": {},
            "Properties": {
                "AutoScalingPolicy": "",
                "BidPrice": "",
                "Configurations": "",
                "EbsConfiguration": "",
                "InstanceCount": "",
                "InstanceRole": "",
                "InstanceType": "",
                "JobFlowId": "",
                "Market": "",
                "Name": ""
            },
            "Type:": "AWS::EMR::InstanceGroupConfig"
        },
        "aws-emr-securityconfiguration": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "SecurityConfiguration": ""
            },
            "Type:": "AWS::EMR::SecurityConfiguration"
        },
        "aws-emr-step": {
            "Metadata": {},
            "Properties": {
                "ActionOnFailure": "",
                "HadoopJarStep": "",
                "JobFlowId": "",
                "Name": ""
            },
            "Type:": "AWS::EMR::Step"
        },
        "aws-emr-studio": {
            "Metadata": {},
            "Properties": {
                "AuthMode": "",
                "DefaultS3Location": "",
                "Description": "",
                "EngineSecurityGroupId": "",
                "Name": "",
                "ServiceRole": "",
                "SubnetIds": "",
                "Tags": "",
                "UserRole": "",
                "VpcId": "",
                "WorkspaceSecurityGroupId": ""
            },
            "Type:": "AWS::EMR::Studio"
        },
        "aws-emr-studiosessionmapping": {
            "Metadata": {},
            "Properties": {
                "IdentityName": "",
                "IdentityType": "",
                "SessionPolicyArn": "",
                "StudioId": ""
            },
            "Type:": "AWS::EMR::StudioSessionMapping"
        },
        "aws-emrcontainers-virtualcluster": {
            "Metadata": {},
            "Properties": {
                "ContainerProvider": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::EMRContainers::VirtualCluster"
        },
        "aws-events-apidestination": {
            "Metadata": {},
            "Properties": {
                "ConnectionArn": "",
                "Description": "",
                "HttpMethod": "",
                "InvocationEndpoint": "",
                "InvocationRateLimitPerSecond": "",
                "Name": ""
            },
            "Type:": "AWS::Events::ApiDestination"
        },
        "aws-events-archive": {
            "Metadata": {},
            "Properties": {
                "ArchiveName": "",
                "Description": "",
                "EventPattern": "",
                "RetentionDays": "",
                "SourceArn": ""
            },
            "Type:": "AWS::Events::Archive"
        },
        "aws-events-connection": {
            "Metadata": {},
            "Properties": {
                "AuthParameters": "",
                "AuthorizationType": "",
                "Description": "",
                "Name": ""
            },
            "Type:": "AWS::Events::Connection"
        },
        "aws-events-eventbus": {
            "Metadata": {},
            "Properties": {
                "EventSourceName": "",
                "Name": ""
            },
            "Type:": "AWS::Events::EventBus"
        },
        "aws-events-eventbuspolicy": {
            "Metadata": {},
            "Properties": {
                "Action": "",
                "Condition": "",
                "EventBusName": "",
                "Principal": "",
                "Statement": "",
                "StatementId": ""
            },
            "Type:": "AWS::Events::EventBusPolicy"
        },
        "aws-events-rule": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "EventBusName": "",
                "EventPattern": "",
                "Name": "",
                "RoleArn": "",
                "ScheduleExpression": "",
                "State": "",
                "Targets": ""
            },
            "Type:": "AWS::Events::Rule"
        },
        "aws-eventschemas-discoverer": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "SourceArn": "",
                "Tags": ""
            },
            "Type:": "AWS::EventSchemas::Discoverer"
        },
        "aws-eventschemas-registry": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "RegistryName": "",
                "Tags": ""
            },
            "Type:": "AWS::EventSchemas::Registry"
        },
        "aws-eventschemas-registrypolicy": {
            "Metadata": {},
            "Properties": {
                "Policy": "",
                "RegistryName": "",
                "RevisionId": ""
            },
            "Type:": "AWS::EventSchemas::RegistryPolicy"
        },
        "aws-eventschemas-schema": {
            "Metadata": {},
            "Properties": {
                "Content": "",
                "Description": "",
                "RegistryName": "",
                "SchemaName": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::EventSchemas::Schema"
        },
        "aws-finspace-environment": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "FederationMode": "",
                "FederationParameters": "",
                "KmsKeyId": "",
                "Name": ""
            },
            "Type:": "AWS::FinSpace::Environment"
        },
        "aws-fis-experimenttemplate": {
            "Metadata": {},
            "Properties": {
                "Actions": "",
                "Description": "",
                "RoleArn": "",
                "StopConditions": "",
                "Tags": "",
                "Targets": ""
            },
            "Type:": "AWS::FIS::ExperimentTemplate"
        },
        "aws-fms-notificationchannel": {
            "Metadata": {},
            "Properties": {
                "SnsRoleName": "",
                "SnsTopicArn": ""
            },
            "Type:": "AWS::FMS::NotificationChannel"
        },
        "aws-fms-policy": {
            "Metadata": {},
            "Properties": {
                "DeleteAllPolicyResources": "",
                "ExcludeMap": "",
                "ExcludeResourceTags": "",
                "IncludeMap": "",
                "PolicyName": "",
                "RemediationEnabled": "",
                "ResourceTags": "",
                "ResourceType": "",
                "ResourceTypeList": "",
                "SecurityServicePolicyData": "",
                "Tags": ""
            },
            "Type:": "AWS::FMS::Policy"
        },
        "aws-frauddetector-detector": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "DetectorId": "",
                "DetectorVersionStatus": "",
                "EventType": "",
                "RuleExecutionMode": "",
                "Rules": "",
                "Tags": ""
            },
            "Type:": "AWS::FraudDetector::Detector"
        },
        "aws-frauddetector-entitytype": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::FraudDetector::EntityType"
        },
        "aws-frauddetector-eventtype": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "EntityTypes": "",
                "EventVariables": "",
                "Labels": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::FraudDetector::EventType"
        },
        "aws-frauddetector-label": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::FraudDetector::Label"
        },
        "aws-frauddetector-outcome": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::FraudDetector::Outcome"
        },
        "aws-frauddetector-variable": {
            "Metadata": {},
            "Properties": {
                "DataSource": "",
                "DataType": "",
                "DefaultValue": "",
                "Description": "",
                "Name": "",
                "Tags": "",
                "VariableType": ""
            },
            "Type:": "AWS::FraudDetector::Variable"
        },
        "aws-fsx-filesystem": {
            "Metadata": {},
            "Properties": {
                "BackupId": "",
                "FileSystemType": "",
                "KmsKeyId": "",
                "LustreConfiguration": "",
                "SecurityGroupIds": "",
                "StorageCapacity": "",
                "StorageType": "",
                "SubnetIds": "",
                "Tags": "",
                "WindowsConfiguration": ""
            },
            "Type:": "AWS::FSx::FileSystem"
        },
        "aws-gamelift-alias": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "RoutingStrategy": ""
            },
            "Type:": "AWS::GameLift::Alias"
        },
        "aws-gamelift-build": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "OperatingSystem": "",
                "StorageLocation": "",
                "Version": ""
            },
            "Type:": "AWS::GameLift::Build"
        },
        "aws-gamelift-fleet": {
            "Metadata": {},
            "Properties": {
                "BuildId": "",
                "CertificateConfiguration": "",
                "Description": "",
                "DesiredEC2Instances": "",
                "EC2InboundPermissions": "",
                "EC2InstanceType": "",
                "FleetType": "",
                "InstanceRoleARN": "",
                "Locations": "",
                "MaxSize": "",
                "MetricGroups": "",
                "MinSize": "",
                "Name": "",
                "NewGameSessionProtectionPolicy": "",
                "PeerVpcAwsAccountId": "",
                "PeerVpcId": "",
                "ResourceCreationLimitPolicy": "",
                "RuntimeConfiguration": "",
                "ScriptId": ""
            },
            "Type:": "AWS::GameLift::Fleet"
        },
        "aws-gamelift-gameservergroup": {
            "Metadata": {},
            "Properties": {
                "AutoScalingPolicy": "",
                "BalancingStrategy": "",
                "DeleteOption": "",
                "GameServerGroupName": "",
                "GameServerProtectionPolicy": "",
                "InstanceDefinitions": "",
                "LaunchTemplate": "",
                "MaxSize": "",
                "MinSize": "",
                "RoleArn": "",
                "Tags": "",
                "VpcSubnets": ""
            },
            "Type:": "AWS::GameLift::GameServerGroup"
        },
        "aws-gamelift-gamesessionqueue": {
            "Metadata": {},
            "Properties": {
                "CustomEventData": "",
                "Destinations": "",
                "FilterConfiguration": "",
                "Name": "",
                "NotificationTarget": "",
                "PlayerLatencyPolicies": "",
                "PriorityConfiguration": "",
                "TimeoutInSeconds": ""
            },
            "Type:": "AWS::GameLift::GameSessionQueue"
        },
        "aws-gamelift-matchmakingconfiguration": {
            "Metadata": {},
            "Properties": {
                "AcceptanceRequired": "",
                "AcceptanceTimeoutSeconds": "",
                "AdditionalPlayerCount": "",
                "BackfillMode": "",
                "CustomEventData": "",
                "Description": "",
                "FlexMatchMode": "",
                "GameProperties": "",
                "GameSessionData": "",
                "GameSessionQueueArns": "",
                "Name": "",
                "NotificationTarget": "",
                "RequestTimeoutSeconds": "",
                "RuleSetName": ""
            },
            "Type:": "AWS::GameLift::MatchmakingConfiguration"
        },
        "aws-gamelift-matchmakingruleset": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "RuleSetBody": ""
            },
            "Type:": "AWS::GameLift::MatchmakingRuleSet"
        },
        "aws-gamelift-script": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "StorageLocation": "",
                "Version": ""
            },
            "Type:": "AWS::GameLift::Script"
        },
        "aws-globalaccelerator-accelerator": {
            "Metadata": {},
            "Properties": {
                "Enabled": "",
                "IpAddressType": "",
                "IpAddresses": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::GlobalAccelerator::Accelerator"
        },
        "aws-globalaccelerator-endpointgroup": {
            "Metadata": {},
            "Properties": {
                "EndpointConfigurations": "",
                "EndpointGroupRegion": "",
                "HealthCheckIntervalSeconds": "",
                "HealthCheckPath": "",
                "HealthCheckPort": "",
                "HealthCheckProtocol": "",
                "ListenerArn": "",
                "PortOverrides": "",
                "ThresholdCount": "",
                "TrafficDialPercentage": ""
            },
            "Type:": "AWS::GlobalAccelerator::EndpointGroup"
        },
        "aws-globalaccelerator-listener": {
            "Metadata": {},
            "Properties": {
                "AcceleratorArn": "",
                "ClientAffinity": "",
                "PortRanges": "",
                "Protocol": ""
            },
            "Type:": "AWS::GlobalAccelerator::Listener"
        },
        "aws-glue-classifier": {
            "Metadata": {},
            "Properties": {
                "CsvClassifier": "",
                "GrokClassifier": "",
                "JsonClassifier": "",
                "XMLClassifier": ""
            },
            "Type:": "AWS::Glue::Classifier"
        },
        "aws-glue-connection": {
            "Metadata": {},
            "Properties": {
                "CatalogId": "",
                "ConnectionInput": ""
            },
            "Type:": "AWS::Glue::Connection"
        },
        "aws-glue-crawler": {
            "Metadata": {},
            "Properties": {
                "Classifiers": "",
                "Configuration": "",
                "CrawlerSecurityConfiguration": "",
                "DatabaseName": "",
                "Description": "",
                "Name": "",
                "Role": "",
                "Schedule": "",
                "SchemaChangePolicy": "",
                "TablePrefix": "",
                "Tags": "",
                "Targets": ""
            },
            "Type:": "AWS::Glue::Crawler"
        },
        "aws-glue-database": {
            "Metadata": {},
            "Properties": {
                "CatalogId": "",
                "DatabaseInput": ""
            },
            "Type:": "AWS::Glue::Database"
        },
        "aws-glue-datacatalogencryptionsettings": {
            "Metadata": {},
            "Properties": {
                "CatalogId": "",
                "DataCatalogEncryptionSettings": ""
            },
            "Type:": "AWS::Glue::DataCatalogEncryptionSettings"
        },
        "aws-glue-devendpoint": {
            "Metadata": {},
            "Properties": {
                "Arguments": "",
                "EndpointName": "",
                "ExtraJarsS3Path": "",
                "ExtraPythonLibsS3Path": "",
                "GlueVersion": "",
                "NumberOfNodes": "",
                "NumberOfWorkers": "",
                "PublicKey": "",
                "PublicKeys": "",
                "RoleArn": "",
                "SecurityConfiguration": "",
                "SecurityGroupIds": "",
                "SubnetId": "",
                "Tags": "",
                "WorkerType": ""
            },
            "Type:": "AWS::Glue::DevEndpoint"
        },
        "aws-glue-job": {
            "Metadata": {},
            "Properties": {
                "AllocatedCapacity": "",
                "Command": "",
                "Connections": "",
                "DefaultArguments": "",
                "Description": "",
                "ExecutionProperty": "",
                "GlueVersion": "",
                "LogUri": "",
                "MaxCapacity": "",
                "MaxRetries": "",
                "Name": "",
                "NotificationProperty": "",
                "NumberOfWorkers": "",
                "Role": "",
                "SecurityConfiguration": "",
                "Tags": "",
                "Timeout": "",
                "WorkerType": ""
            },
            "Type:": "AWS::Glue::Job"
        },
        "aws-glue-mltransform": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "GlueVersion": "",
                "InputRecordTables": "",
                "MaxCapacity": "",
                "MaxRetries": "",
                "Name": "",
                "NumberOfWorkers": "",
                "Role": "",
                "Tags": "",
                "Timeout": "",
                "TransformEncryption": "",
                "TransformParameters": "",
                "WorkerType": ""
            },
            "Type:": "AWS::Glue::MLTransform"
        },
        "aws-glue-partition": {
            "Metadata": {},
            "Properties": {
                "CatalogId": "",
                "DatabaseName": "",
                "PartitionInput": "",
                "TableName": ""
            },
            "Type:": "AWS::Glue::Partition"
        },
        "aws-glue-registry": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Glue::Registry"
        },
        "aws-glue-schema": {
            "Metadata": {},
            "Properties": {
                "CheckpointVersion": "",
                "Compatibility": "",
                "DataFormat": "",
                "Description": "",
                "Name": "",
                "Registry": "",
                "SchemaDefinition": "",
                "Tags": ""
            },
            "Type:": "AWS::Glue::Schema"
        },
        "aws-glue-schemaversion": {
            "Metadata": {},
            "Properties": {
                "Schema": "",
                "SchemaDefinition": ""
            },
            "Type:": "AWS::Glue::SchemaVersion"
        },
        "aws-glue-schemaversionmetadata": {
            "Metadata": {},
            "Properties": {
                "Key": "",
                "SchemaVersionId": "",
                "Value": ""
            },
            "Type:": "AWS::Glue::SchemaVersionMetadata"
        },
        "aws-glue-securityconfiguration": {
            "Metadata": {},
            "Properties": {
                "EncryptionConfiguration": "",
                "Name": ""
            },
            "Type:": "AWS::Glue::SecurityConfiguration"
        },
        "aws-glue-table": {
            "Metadata": {},
            "Properties": {
                "CatalogId": "",
                "DatabaseName": "",
                "TableInput": ""
            },
            "Type:": "AWS::Glue::Table"
        },
        "aws-glue-trigger": {
            "Metadata": {},
            "Properties": {
                "Actions": "",
                "Description": "",
                "Name": "",
                "Predicate": "",
                "Schedule": "",
                "StartOnCreation": "",
                "Tags": "",
                "Type": "",
                "WorkflowName": ""
            },
            "Type:": "AWS::Glue::Trigger"
        },
        "aws-glue-workflow": {
            "Metadata": {},
            "Properties": {
                "DefaultRunProperties": "",
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Glue::Workflow"
        },
        "aws-greengrass-connectordefinition": {
            "Metadata": {},
            "Properties": {
                "InitialVersion": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Greengrass::ConnectorDefinition"
        },
        "aws-greengrass-connectordefinitionversion": {
            "Metadata": {},
            "Properties": {
                "ConnectorDefinitionId": "",
                "Connectors": ""
            },
            "Type:": "AWS::Greengrass::ConnectorDefinitionVersion"
        },
        "aws-greengrass-coredefinition": {
            "Metadata": {},
            "Properties": {
                "InitialVersion": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Greengrass::CoreDefinition"
        },
        "aws-greengrass-coredefinitionversion": {
            "Metadata": {},
            "Properties": {
                "CoreDefinitionId": "",
                "Cores": ""
            },
            "Type:": "AWS::Greengrass::CoreDefinitionVersion"
        },
        "aws-greengrass-devicedefinition": {
            "Metadata": {},
            "Properties": {
                "InitialVersion": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Greengrass::DeviceDefinition"
        },
        "aws-greengrass-devicedefinitionversion": {
            "Metadata": {},
            "Properties": {
                "DeviceDefinitionId": "",
                "Devices": ""
            },
            "Type:": "AWS::Greengrass::DeviceDefinitionVersion"
        },
        "aws-greengrass-functiondefinition": {
            "Metadata": {},
            "Properties": {
                "InitialVersion": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Greengrass::FunctionDefinition"
        },
        "aws-greengrass-functiondefinitionversion": {
            "Metadata": {},
            "Properties": {
                "DefaultConfig": "",
                "FunctionDefinitionId": "",
                "Functions": ""
            },
            "Type:": "AWS::Greengrass::FunctionDefinitionVersion"
        },
        "aws-greengrass-group": {
            "Metadata": {},
            "Properties": {
                "InitialVersion": "",
                "Name": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::Greengrass::Group"
        },
        "aws-greengrass-groupversion": {
            "Metadata": {},
            "Properties": {
                "ConnectorDefinitionVersionArn": "",
                "CoreDefinitionVersionArn": "",
                "DeviceDefinitionVersionArn": "",
                "FunctionDefinitionVersionArn": "",
                "GroupId": "",
                "LoggerDefinitionVersionArn": "",
                "ResourceDefinitionVersionArn": "",
                "SubscriptionDefinitionVersionArn": ""
            },
            "Type:": "AWS::Greengrass::GroupVersion"
        },
        "aws-greengrass-loggerdefinition": {
            "Metadata": {},
            "Properties": {
                "InitialVersion": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Greengrass::LoggerDefinition"
        },
        "aws-greengrass-loggerdefinitionversion": {
            "Metadata": {},
            "Properties": {
                "LoggerDefinitionId": "",
                "Loggers": ""
            },
            "Type:": "AWS::Greengrass::LoggerDefinitionVersion"
        },
        "aws-greengrass-resourcedefinition": {
            "Metadata": {},
            "Properties": {
                "InitialVersion": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Greengrass::ResourceDefinition"
        },
        "aws-greengrass-resourcedefinitionversion": {
            "Metadata": {},
            "Properties": {
                "ResourceDefinitionId": "",
                "Resources": ""
            },
            "Type:": "AWS::Greengrass::ResourceDefinitionVersion"
        },
        "aws-greengrass-subscriptiondefinition": {
            "Metadata": {},
            "Properties": {
                "InitialVersion": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Greengrass::SubscriptionDefinition"
        },
        "aws-greengrass-subscriptiondefinitionversion": {
            "Metadata": {},
            "Properties": {
                "SubscriptionDefinitionId": "",
                "Subscriptions": ""
            },
            "Type:": "AWS::Greengrass::SubscriptionDefinitionVersion"
        },
        "aws-greengrassv2-componentversion": {
            "Metadata": {},
            "Properties": {
                "InlineRecipe": "",
                "LambdaFunction": "",
                "Tags": ""
            },
            "Type:": "AWS::GreengrassV2::ComponentVersion"
        },
        "aws-groundstation-config": {
            "Metadata": {},
            "Properties": {
                "ConfigData": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::GroundStation::Config"
        },
        "aws-groundstation-dataflowendpointgroup": {
            "Metadata": {},
            "Properties": {
                "EndpointDetails": "",
                "Tags": ""
            },
            "Type:": "AWS::GroundStation::DataflowEndpointGroup"
        },
        "aws-groundstation-missionprofile": {
            "Metadata": {},
            "Properties": {
                "ContactPostPassDurationSeconds": "",
                "ContactPrePassDurationSeconds": "",
                "DataflowEdges": "",
                "MinimumViableContactDurationSeconds": "",
                "Name": "",
                "Tags": "",
                "TrackingConfigArn": ""
            },
            "Type:": "AWS::GroundStation::MissionProfile"
        },
        "aws-guardduty-detector": {
            "Metadata": {},
            "Properties": {
                "DataSources": "",
                "Enable": "",
                "FindingPublishingFrequency": ""
            },
            "Type:": "AWS::GuardDuty::Detector"
        },
        "aws-guardduty-filter": {
            "Metadata": {},
            "Properties": {
                "Action": "",
                "Description": "",
                "DetectorId": "",
                "FindingCriteria": "",
                "Name": "",
                "Rank": ""
            },
            "Type:": "AWS::GuardDuty::Filter"
        },
        "aws-guardduty-ipset": {
            "Metadata": {},
            "Properties": {
                "Activate": "",
                "DetectorId": "",
                "Format": "",
                "Location": "",
                "Name": ""
            },
            "Type:": "AWS::GuardDuty::IPSet"
        },
        "aws-guardduty-master": {
            "Metadata": {},
            "Properties": {
                "DetectorId": "",
                "InvitationId": "",
                "MasterId": ""
            },
            "Type:": "AWS::GuardDuty::Master"
        },
        "aws-guardduty-member": {
            "Metadata": {},
            "Properties": {
                "DetectorId": "",
                "DisableEmailNotification": "",
                "Email": "",
                "MemberId": "",
                "Message": "",
                "Status": ""
            },
            "Type:": "AWS::GuardDuty::Member"
        },
        "aws-guardduty-threatintelset": {
            "Metadata": {},
            "Properties": {
                "Activate": "",
                "DetectorId": "",
                "Format": "",
                "Location": "",
                "Name": ""
            },
            "Type:": "AWS::GuardDuty::ThreatIntelSet"
        },
        "aws-iam-accesskey": {
            "Metadata": {},
            "Properties": {
                "Serial": "",
                "Status": "",
                "UserName": ""
            },
            "Type:": "AWS::IAM::AccessKey"
        },
        "aws-iam-group": {
            "Metadata": {},
            "Properties": {
                "GroupName": "",
                "ManagedPolicyArns": "",
                "Path": "",
                "Policies": ""
            },
            "Type:": "AWS::IAM::Group"
        },
        "aws-iam-instanceprofile": {
            "Metadata": {},
            "Properties": {
                "InstanceProfileName": "",
                "Path": "",
                "Roles": ""
            },
            "Type:": "AWS::IAM::InstanceProfile"
        },
        "aws-iam-managedpolicy": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Groups": "",
                "ManagedPolicyName": "",
                "Path": "",
                "PolicyDocument": "",
                "Roles": "",
                "Users": ""
            },
            "Type:": "AWS::IAM::ManagedPolicy"
        },
        "aws-iam-oidcprovider": {
            "Metadata": {},
            "Properties": {
                "ClientIdList": "",
                "Tags": "",
                "ThumbprintList": "",
                "Url": ""
            },
            "Type:": "AWS::IAM::OIDCProvider"
        },
        "aws-iam-policy": {
            "Metadata": {},
            "Properties": {
                "Groups": "",
                "PolicyDocument": "",
                "PolicyName": "",
                "Roles": "",
                "Users": ""
            },
            "Type:": "AWS::IAM::Policy"
        },
        "aws-iam-role": {
            "Metadata": {},
            "Properties": {
                "AssumeRolePolicyDocument": "",
                "Description": "",
                "ManagedPolicyArns": "",
                "MaxSessionDuration": "",
                "Path": "",
                "PermissionsBoundary": "",
                "Policies": "",
                "RoleName": "",
                "Tags": ""
            },
            "Type:": "AWS::IAM::Role"
        },
        "aws-iam-samlprovider": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "SamlMetadataDocument": "",
                "Tags": ""
            },
            "Type:": "AWS::IAM::SAMLProvider"
        },
        "aws-iam-servercertificate": {
            "Metadata": {},
            "Properties": {
                "CertificateBody": "",
                "CertificateChain": "",
                "Path": "",
                "PrivateKey": "",
                "ServerCertificateName": "",
                "Tags": ""
            },
            "Type:": "AWS::IAM::ServerCertificate"
        },
        "aws-iam-servicelinkedrole": {
            "Metadata": {},
            "Properties": {
                "AWSServiceName": "",
                "CustomSuffix": "",
                "Description": ""
            },
            "Type:": "AWS::IAM::ServiceLinkedRole"
        },
        "aws-iam-user": {
            "Metadata": {},
            "Properties": {
                "Groups": "",
                "LoginProfile": "",
                "ManagedPolicyArns": "",
                "Path": "",
                "PermissionsBoundary": "",
                "Policies": "",
                "Tags": "",
                "UserName": ""
            },
            "Type:": "AWS::IAM::User"
        },
        "aws-iam-usertogroupaddition": {
            "Metadata": {},
            "Properties": {
                "GroupName": "",
                "Users": ""
            },
            "Type:": "AWS::IAM::UserToGroupAddition"
        },
        "aws-iam-virtualmfadevice": {
            "Metadata": {},
            "Properties": {
                "Path": "",
                "Tags": "",
                "Users": "",
                "VirtualMfaDeviceName": ""
            },
            "Type:": "AWS::IAM::VirtualMFADevice"
        },
        "aws-imagebuilder-component": {
            "Metadata": {},
            "Properties": {
                "ChangeDescription": "",
                "Data": "",
                "Description": "",
                "KmsKeyId": "",
                "Name": "",
                "Platform": "",
                "SupportedOsVersions": "",
                "Tags": "",
                "Uri": "",
                "Version": ""
            },
            "Type:": "AWS::ImageBuilder::Component"
        },
        "aws-imagebuilder-containerrecipe": {
            "Metadata": {},
            "Properties": {
                "Components": "",
                "ContainerType": "",
                "Description": "",
                "DockerfileTemplateData": "",
                "DockerfileTemplateUri": "",
                "ImageOsVersionOverride": "",
                "InstanceConfiguration": "",
                "KmsKeyId": "",
                "Name": "",
                "ParentImage": "",
                "PlatformOverride": "",
                "Tags": "",
                "TargetRepository": "",
                "Version": "",
                "WorkingDirectory": ""
            },
            "Type:": "AWS::ImageBuilder::ContainerRecipe"
        },
        "aws-imagebuilder-distributionconfiguration": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Distributions": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::ImageBuilder::DistributionConfiguration"
        },
        "aws-imagebuilder-image": {
            "Metadata": {},
            "Properties": {
                "ContainerRecipeArn": "",
                "DistributionConfigurationArn": "",
                "EnhancedImageMetadataEnabled": "",
                "ImageRecipeArn": "",
                "ImageTestsConfiguration": "",
                "InfrastructureConfigurationArn": "",
                "Tags": ""
            },
            "Type:": "AWS::ImageBuilder::Image"
        },
        "aws-imagebuilder-imagepipeline": {
            "Metadata": {},
            "Properties": {
                "ContainerRecipeArn": "",
                "Description": "",
                "DistributionConfigurationArn": "",
                "EnhancedImageMetadataEnabled": "",
                "ImageRecipeArn": "",
                "ImageTestsConfiguration": "",
                "InfrastructureConfigurationArn": "",
                "Name": "",
                "Schedule": "",
                "Status": "",
                "Tags": ""
            },
            "Type:": "AWS::ImageBuilder::ImagePipeline"
        },
        "aws-imagebuilder-imagerecipe": {
            "Metadata": {},
            "Properties": {
                "BlockDeviceMappings": "",
                "Components": "",
                "Description": "",
                "Name": "",
                "ParentImage": "",
                "Tags": "",
                "Version": "",
                "WorkingDirectory": ""
            },
            "Type:": "AWS::ImageBuilder::ImageRecipe"
        },
        "aws-imagebuilder-infrastructureconfiguration": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "InstanceProfileName": "",
                "InstanceTypes": "",
                "KeyPair": "",
                "Logging": "",
                "Name": "",
                "ResourceTags": "",
                "SecurityGroupIds": "",
                "SnsTopicArn": "",
                "SubnetId": "",
                "Tags": "",
                "TerminateInstanceOnFailure": ""
            },
            "Type:": "AWS::ImageBuilder::InfrastructureConfiguration"
        },
        "aws-inspector-assessmenttarget": {
            "Metadata": {},
            "Properties": {
                "AssessmentTargetName": "",
                "ResourceGroupArn": ""
            },
            "Type:": "AWS::Inspector::AssessmentTarget"
        },
        "aws-inspector-assessmenttemplate": {
            "Metadata": {},
            "Properties": {
                "AssessmentTargetArn": "",
                "AssessmentTemplateName": "",
                "DurationInSeconds": "",
                "RulesPackageArns": "",
                "UserAttributesForFindings": ""
            },
            "Type:": "AWS::Inspector::AssessmentTemplate"
        },
        "aws-inspector-resourcegroup": {
            "Metadata": {},
            "Properties": {
                "ResourceGroupTags": ""
            },
            "Type:": "AWS::Inspector::ResourceGroup"
        },
        "aws-iot-accountauditconfiguration": {
            "Metadata": {},
            "Properties": {
                "AccountId": "",
                "AuditCheckConfigurations": "",
                "AuditNotificationTargetConfigurations": "",
                "RoleArn": ""
            },
            "Type:": "AWS::IoT::AccountAuditConfiguration"
        },
        "aws-iot-authorizer": {
            "Metadata": {},
            "Properties": {
                "AuthorizerFunctionArn": "",
                "AuthorizerName": "",
                "SigningDisabled": "",
                "Status": "",
                "Tags": "",
                "TokenKeyName": "",
                "TokenSigningPublicKeys": ""
            },
            "Type:": "AWS::IoT::Authorizer"
        },
        "aws-iot-certificate": {
            "Metadata": {},
            "Properties": {
                "CACertificatePem": "",
                "CertificateMode": "",
                "CertificatePem": "",
                "CertificateSigningRequest": "",
                "Status": ""
            },
            "Type:": "AWS::IoT::Certificate"
        },
        "aws-iot-custommetric": {
            "Metadata": {},
            "Properties": {
                "DisplayName": "",
                "MetricName": "",
                "MetricType": "",
                "Tags": ""
            },
            "Type:": "AWS::IoT::CustomMetric"
        },
        "aws-iot-dimension": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "StringValues": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::IoT::Dimension"
        },
        "aws-iot-domainconfiguration": {
            "Metadata": {},
            "Properties": {
                "AuthorizerConfig": "",
                "DomainConfigurationName": "",
                "DomainConfigurationStatus": "",
                "DomainName": "",
                "ServerCertificateArns": "",
                "ServiceType": "",
                "Tags": "",
                "ValidationCertificateArn": ""
            },
            "Type:": "AWS::IoT::DomainConfiguration"
        },
        "aws-iot-mitigationaction": {
            "Metadata": {},
            "Properties": {
                "ActionName": "",
                "ActionParams": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::IoT::MitigationAction"
        },
        "aws-iot-policy": {
            "Metadata": {},
            "Properties": {
                "PolicyDocument": "",
                "PolicyName": ""
            },
            "Type:": "AWS::IoT::Policy"
        },
        "aws-iot-policyprincipalattachment": {
            "Metadata": {},
            "Properties": {
                "PolicyName": "",
                "Principal": ""
            },
            "Type:": "AWS::IoT::PolicyPrincipalAttachment"
        },
        "aws-iot-provisioningtemplate": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Enabled": "",
                "PreProvisioningHook": "",
                "ProvisioningRoleArn": "",
                "Tags": "",
                "TemplateBody": "",
                "TemplateName": ""
            },
            "Type:": "AWS::IoT::ProvisioningTemplate"
        },
        "aws-iot-scheduledaudit": {
            "Metadata": {},
            "Properties": {
                "DayOfMonth": "",
                "DayOfWeek": "",
                "Frequency": "",
                "ScheduledAuditName": "",
                "Tags": "",
                "TargetCheckNames": ""
            },
            "Type:": "AWS::IoT::ScheduledAudit"
        },
        "aws-iot-securityprofile": {
            "Metadata": {},
            "Properties": {
                "AdditionalMetricsToRetainV2": "",
                "AlertTargets": "",
                "Behaviors": "",
                "SecurityProfileDescription": "",
                "SecurityProfileName": "",
                "Tags": "",
                "TargetArns": ""
            },
            "Type:": "AWS::IoT::SecurityProfile"
        },
        "aws-iot-thing": {
            "Metadata": {},
            "Properties": {
                "AttributePayload": "",
                "ThingName": ""
            },
            "Type:": "AWS::IoT::Thing"
        },
        "aws-iot-thingprincipalattachment": {
            "Metadata": {},
            "Properties": {
                "Principal": "",
                "ThingName": ""
            },
            "Type:": "AWS::IoT::ThingPrincipalAttachment"
        },
        "aws-iot-topicrule": {
            "Metadata": {},
            "Properties": {
                "RuleName": "",
                "Tags": "",
                "TopicRulePayload": ""
            },
            "Type:": "AWS::IoT::TopicRule"
        },
        "aws-iot-topicruledestination": {
            "Metadata": {},
            "Properties": {
                "HttpUrlProperties": "",
                "Status": "",
                "VpcProperties": ""
            },
            "Type:": "AWS::IoT::TopicRuleDestination"
        },
        "aws-iot1click-device": {
            "Metadata": {},
            "Properties": {
                "DeviceId": "",
                "Enabled": ""
            },
            "Type:": "AWS::IoT1Click::Device"
        },
        "aws-iot1click-placement": {
            "Metadata": {},
            "Properties": {
                "AssociatedDevices": "",
                "Attributes": "",
                "PlacementName": "",
                "ProjectName": ""
            },
            "Type:": "AWS::IoT1Click::Placement"
        },
        "aws-iot1click-project": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "PlacementTemplate": "",
                "ProjectName": ""
            },
            "Type:": "AWS::IoT1Click::Project"
        },
        "aws-iotanalytics-channel": {
            "Metadata": {},
            "Properties": {
                "ChannelName": "",
                "ChannelStorage": "",
                "RetentionPeriod": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTAnalytics::Channel"
        },
        "aws-iotanalytics-dataset": {
            "Metadata": {},
            "Properties": {
                "Actions": "",
                "ContentDeliveryRules": "",
                "DatasetName": "",
                "LateDataRules": "",
                "RetentionPeriod": "",
                "Tags": "",
                "Triggers": "",
                "VersioningConfiguration": ""
            },
            "Type:": "AWS::IoTAnalytics::Dataset"
        },
        "aws-iotanalytics-datastore": {
            "Metadata": {},
            "Properties": {
                "DatastoreName": "",
                "DatastoreStorage": "",
                "FileFormatConfiguration": "",
                "RetentionPeriod": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTAnalytics::Datastore"
        },
        "aws-iotanalytics-pipeline": {
            "Metadata": {},
            "Properties": {
                "PipelineActivities": "",
                "PipelineName": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTAnalytics::Pipeline"
        },
        "aws-iotevents-detectormodel": {
            "Metadata": {},
            "Properties": {
                "DetectorModelDefinition": "",
                "DetectorModelDescription": "",
                "DetectorModelName": "",
                "EvaluationMethod": "",
                "Key": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTEvents::DetectorModel"
        },
        "aws-iotevents-input": {
            "Metadata": {},
            "Properties": {
                "InputDefinition": "",
                "InputDescription": "",
                "InputName": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTEvents::Input"
        },
        "aws-iotfleethub-application": {
            "Metadata": {},
            "Properties": {
                "ApplicationDescription": "",
                "ApplicationName": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTFleetHub::Application"
        },
        "aws-iotsitewise-accesspolicy": {
            "Metadata": {},
            "Properties": {
                "AccessPolicyIdentity": "",
                "AccessPolicyPermission": "",
                "AccessPolicyResource": ""
            },
            "Type:": "AWS::IoTSiteWise::AccessPolicy"
        },
        "aws-iotsitewise-asset": {
            "Metadata": {},
            "Properties": {
                "AssetHierarchies": "",
                "AssetModelId": "",
                "AssetName": "",
                "AssetProperties": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTSiteWise::Asset"
        },
        "aws-iotsitewise-assetmodel": {
            "Metadata": {},
            "Properties": {
                "AssetModelCompositeModels": "",
                "AssetModelDescription": "",
                "AssetModelHierarchies": "",
                "AssetModelName": "",
                "AssetModelProperties": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTSiteWise::AssetModel"
        },
        "aws-iotsitewise-dashboard": {
            "Metadata": {},
            "Properties": {
                "DashboardDefinition": "",
                "DashboardDescription": "",
                "DashboardName": "",
                "ProjectId": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTSiteWise::Dashboard"
        },
        "aws-iotsitewise-gateway": {
            "Metadata": {},
            "Properties": {
                "GatewayCapabilitySummaries": "",
                "GatewayName": "",
                "GatewayPlatform": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTSiteWise::Gateway"
        },
        "aws-iotsitewise-portal": {
            "Metadata": {},
            "Properties": {
                "PortalAuthMode": "",
                "PortalContactEmail": "",
                "PortalDescription": "",
                "PortalName": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTSiteWise::Portal"
        },
        "aws-iotsitewise-project": {
            "Metadata": {},
            "Properties": {
                "PortalId": "",
                "ProjectDescription": "",
                "ProjectName": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTSiteWise::Project"
        },
        "aws-iotthingsgraph-flowtemplate": {
            "Metadata": {},
            "Properties": {
                "CompatibleNamespaceVersion": "",
                "Definition": ""
            },
            "Type:": "AWS::IoTThingsGraph::FlowTemplate"
        },
        "aws-iotwireless-destination": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Expression": "",
                "ExpressionType": "",
                "Name": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTWireless::Destination"
        },
        "aws-iotwireless-deviceprofile": {
            "Metadata": {},
            "Properties": {
                "LoRaWAN": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTWireless::DeviceProfile"
        },
        "aws-iotwireless-partneraccount": {
            "Metadata": {},
            "Properties": {
                "AccountLinked": "",
                "Fingerprint": "",
                "PartnerAccountId": "",
                "PartnerType": "",
                "Sidewalk": "",
                "SidewalkUpdate": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTWireless::PartnerAccount"
        },
        "aws-iotwireless-serviceprofile": {
            "Metadata": {},
            "Properties": {
                "LoRaWAN": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::IoTWireless::ServiceProfile"
        },
        "aws-iotwireless-taskdefinition": {
            "Metadata": {},
            "Properties": {
                "AutoCreateTasks": "",
                "LoRaWANUpdateGatewayTaskEntry": "",
                "Name": "",
                "Tags": "",
                "TaskDefinitionType": "",
                "Update": ""
            },
            "Type:": "AWS::IoTWireless::TaskDefinition"
        },
        "aws-iotwireless-wirelessdevice": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "DestinationName": "",
                "LastUplinkReceivedAt": "",
                "LoRaWAN": "",
                "Name": "",
                "Tags": "",
                "ThingArn": "",
                "Type": ""
            },
            "Type:": "AWS::IoTWireless::WirelessDevice"
        },
        "aws-iotwireless-wirelessgateway": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "LastUplinkReceivedAt": "",
                "LoRaWAN": "",
                "Name": "",
                "Tags": "",
                "ThingArn": ""
            },
            "Type:": "AWS::IoTWireless::WirelessGateway"
        },
        "aws-ivs-channel": {
            "Metadata": {},
            "Properties": {
                "Authorized": "",
                "LatencyMode": "",
                "Name": "",
                "RecordingConfigurationArn": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::IVS::Channel"
        },
        "aws-ivs-playbackkeypair": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "PublicKeyMaterial": "",
                "Tags": ""
            },
            "Type:": "AWS::IVS::PlaybackKeyPair"
        },
        "aws-ivs-recordingconfiguration": {
            "Metadata": {},
            "Properties": {
                "DestinationConfiguration": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::IVS::RecordingConfiguration"
        },
        "aws-ivs-streamkey": {
            "Metadata": {},
            "Properties": {
                "ChannelArn": "",
                "Tags": ""
            },
            "Type:": "AWS::IVS::StreamKey"
        },
        "aws-kendra-datasource": {
            "Metadata": {},
            "Properties": {
                "DataSourceConfiguration": "",
                "Description": "",
                "IndexId": "",
                "Name": "",
                "RoleArn": "",
                "Schedule": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::Kendra::DataSource"
        },
        "aws-kendra-faq": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "FileFormat": "",
                "IndexId": "",
                "Name": "",
                "RoleArn": "",
                "S3Path": "",
                "Tags": ""
            },
            "Type:": "AWS::Kendra::Faq"
        },
        "aws-kendra-index": {
            "Metadata": {},
            "Properties": {
                "CapacityUnits": "",
                "Description": "",
                "DocumentMetadataConfigurations": "",
                "Edition": "",
                "Name": "",
                "RoleArn": "",
                "ServerSideEncryptionConfiguration": "",
                "Tags": "",
                "UserContextPolicy": "",
                "UserTokenConfigurations": ""
            },
            "Type:": "AWS::Kendra::Index"
        },
        "aws-kinesis-stream": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "RetentionPeriodHours": "",
                "ShardCount": "",
                "StreamEncryption": "",
                "Tags": ""
            },
            "Type:": "AWS::Kinesis::Stream"
        },
        "aws-kinesis-streamconsumer": {
            "Metadata": {},
            "Properties": {
                "ConsumerName": "",
                "StreamARN": ""
            },
            "Type:": "AWS::Kinesis::StreamConsumer"
        },
        "aws-kinesisanalytics-application": {
            "Metadata": {},
            "Properties": {
                "ApplicationCode": "",
                "ApplicationDescription": "",
                "ApplicationName": "",
                "Inputs": ""
            },
            "Type:": "AWS::KinesisAnalytics::Application"
        },
        "aws-kinesisanalytics-applicationoutput": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "Output": ""
            },
            "Type:": "AWS::KinesisAnalytics::ApplicationOutput"
        },
        "aws-kinesisanalytics-applicationreferencedatasource": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "ReferenceDataSource": ""
            },
            "Type:": "AWS::KinesisAnalytics::ApplicationReferenceDataSource"
        },
        "aws-kinesisanalyticsv2-application": {
            "Metadata": {},
            "Properties": {
                "ApplicationConfiguration": "",
                "ApplicationDescription": "",
                "ApplicationName": "",
                "RuntimeEnvironment": "",
                "ServiceExecutionRole": "",
                "Tags": ""
            },
            "Type:": "AWS::KinesisAnalyticsV2::Application"
        },
        "aws-kinesisanalyticsv2-applicationcloudwatchloggingoption": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "CloudWatchLoggingOption": ""
            },
            "Type:": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption"
        },
        "aws-kinesisanalyticsv2-applicationoutput": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "Output": ""
            },
            "Type:": "AWS::KinesisAnalyticsV2::ApplicationOutput"
        },
        "aws-kinesisanalyticsv2-applicationreferencedatasource": {
            "Metadata": {},
            "Properties": {
                "ApplicationName": "",
                "ReferenceDataSource": ""
            },
            "Type:": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource"
        },
        "aws-kinesisfirehose-deliverystream": {
            "Metadata": {},
            "Properties": {
                "DeliveryStreamEncryptionConfigurationInput": "",
                "DeliveryStreamName": "",
                "DeliveryStreamType": "",
                "ElasticsearchDestinationConfiguration": "",
                "ExtendedS3DestinationConfiguration": "",
                "HttpEndpointDestinationConfiguration": "",
                "KinesisStreamSourceConfiguration": "",
                "RedshiftDestinationConfiguration": "",
                "S3DestinationConfiguration": "",
                "SplunkDestinationConfiguration": "",
                "Tags": ""
            },
            "Type:": "AWS::KinesisFirehose::DeliveryStream"
        },
        "aws-kms-alias": {
            "Metadata": {},
            "Properties": {
                "AliasName": "",
                "TargetKeyId": ""
            },
            "Type:": "AWS::KMS::Alias"
        },
        "aws-kms-key": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "EnableKeyRotation": "",
                "Enabled": "",
                "KeyPolicy": "",
                "KeySpec": "",
                "KeyUsage": "",
                "PendingWindowInDays": "",
                "Tags": ""
            },
            "Type:": "AWS::KMS::Key"
        },
        "aws-lakeformation-datalakesettings": {
            "Metadata": {},
            "Properties": {
                "Admins": "",
                "TrustedResourceOwners": ""
            },
            "Type:": "AWS::LakeFormation::DataLakeSettings"
        },
        "aws-lakeformation-permissions": {
            "Metadata": {},
            "Properties": {
                "DataLakePrincipal": "",
                "Permissions": "",
                "PermissionsWithGrantOption": "",
                "Resource": ""
            },
            "Type:": "AWS::LakeFormation::Permissions"
        },
        "aws-lakeformation-resource": {
            "Metadata": {},
            "Properties": {
                "ResourceArn": "",
                "RoleArn": "",
                "UseServiceLinkedRole": ""
            },
            "Type:": "AWS::LakeFormation::Resource"
        },
        "aws-lambda-alias": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "FunctionName": "",
                "FunctionVersion": "",
                "Name": "",
                "ProvisionedConcurrencyConfig": "",
                "RoutingConfig": ""
            },
            "Type:": "AWS::Lambda::Alias"
        },
        "aws-lambda-codesigningconfig": {
            "Metadata": {},
            "Properties": {
                "AllowedPublishers": "",
                "CodeSigningPolicies": "",
                "Description": ""
            },
            "Type:": "AWS::Lambda::CodeSigningConfig"
        },
        "aws-lambda-eventinvokeconfig": {
            "Metadata": {},
            "Properties": {
                "DestinationConfig": "",
                "FunctionName": "",
                "MaximumEventAgeInSeconds": "",
                "MaximumRetryAttempts": "",
                "Qualifier": ""
            },
            "Type:": "AWS::Lambda::EventInvokeConfig"
        },
        "aws-lambda-eventsourcemapping": {
            "Metadata": {},
            "Properties": {
                "BatchSize": "",
                "BisectBatchOnFunctionError": "",
                "DestinationConfig": "",
                "Enabled": "",
                "EventSourceArn": "",
                "FunctionName": "",
                "FunctionResponseTypes": "",
                "MaximumBatchingWindowInSeconds": "",
                "MaximumRecordAgeInSeconds": "",
                "MaximumRetryAttempts": "",
                "ParallelizationFactor": "",
                "PartialBatchResponse": "",
                "Queues": "",
                "SelfManagedEventSource": "",
                "SourceAccessConfigurations": "",
                "StartingPosition": "",
                "Topics": "",
                "TumblingWindowInSeconds": ""
            },
            "Type:": "AWS::Lambda::EventSourceMapping"
        },
        "aws-lambda-function": {
            "Metadata": {},
            "Properties": {
                "Code": "",
                "CodeSigningConfigArn": "",
                "DeadLetterConfig": "",
                "Description": "",
                "Environment": "",
                "FileSystemConfigs": "",
                "FunctionName": "",
                "Handler": "",
                "Id": "",
                "ImageConfig": "",
                "KmsKeyArn": "",
                "Layers": "",
                "MemorySize": "",
                "PackageType": "",
                "ReservedConcurrentExecutions": "",
                "Role": "",
                "Runtime": "",
                "Tags": "",
                "Timeout": "",
                "TracingConfig": "",
                "VpcConfig": ""
            },
            "Type:": "AWS::Lambda::Function"
        },
        "aws-lambda-layerversion": {
            "Metadata": {},
            "Properties": {
                "CompatibleRuntimes": "",
                "Content": "",
                "Description": "",
                "LayerName": "",
                "LicenseInfo": ""
            },
            "Type:": "AWS::Lambda::LayerVersion"
        },
        "aws-lambda-layerversionpermission": {
            "Metadata": {},
            "Properties": {
                "Action": "",
                "LayerVersionArn": "",
                "OrganizationId": "",
                "Principal": ""
            },
            "Type:": "AWS::Lambda::LayerVersionPermission"
        },
        "aws-lambda-permission": {
            "Metadata": {},
            "Properties": {
                "Action": "",
                "EventSourceToken": "",
                "FunctionName": "",
                "Principal": "",
                "SourceAccount": "",
                "SourceArn": ""
            },
            "Type:": "AWS::Lambda::Permission"
        },
        "aws-lambda-version": {
            "Metadata": {},
            "Properties": {
                "CodeSha256": "",
                "Description": "",
                "FunctionName": "",
                "ProvisionedConcurrencyConfig": ""
            },
            "Type:": "AWS::Lambda::Version"
        },
        "aws-licensemanager-grant": {
            "Metadata": {},
            "Properties": {
                "AllowedOperations": "",
                "GrantName": "",
                "HomeRegion": "",
                "LicenseArn": "",
                "Principals": "",
                "Status": ""
            },
            "Type:": "AWS::LicenseManager::Grant"
        },
        "aws-licensemanager-license": {
            "Metadata": {},
            "Properties": {
                "Beneficiary": "",
                "ConsumptionConfiguration": "",
                "Entitlements": "",
                "HomeRegion": "",
                "Issuer": "",
                "LicenseMetadata": "",
                "LicenseName": "",
                "ProductName": "",
                "ProductSKU": "",
                "Status": "",
                "Validity": ""
            },
            "Type:": "AWS::LicenseManager::License"
        },
        "aws-logs-destination": {
            "Metadata": {},
            "Properties": {
                "DestinationName": "",
                "DestinationPolicy": "",
                "RoleArn": "",
                "TargetArn": ""
            },
            "Type:": "AWS::Logs::Destination"
        },
        "aws-logs-loggroup": {
            "Metadata": {},
            "Properties": {
                "KmsKeyId": "",
                "LogGroupName": "",
                "RetentionInDays": ""
            },
            "Type:": "AWS::Logs::LogGroup"
        },
        "aws-logs-logstream": {
            "Metadata": {},
            "Properties": {
                "LogGroupName": "",
                "LogStreamName": ""
            },
            "Type:": "AWS::Logs::LogStream"
        },
        "aws-logs-metricfilter": {
            "Metadata": {},
            "Properties": {
                "FilterPattern": "",
                "LogGroupName": "",
                "MetricTransformations": ""
            },
            "Type:": "AWS::Logs::MetricFilter"
        },
        "aws-logs-querydefinition": {
            "Metadata": {},
            "Properties": {
                "LogGroupNames": "",
                "Name": "",
                "QueryString": ""
            },
            "Type:": "AWS::Logs::QueryDefinition"
        },
        "aws-logs-subscriptionfilter": {
            "Metadata": {},
            "Properties": {
                "DestinationArn": "",
                "FilterPattern": "",
                "LogGroupName": "",
                "RoleArn": ""
            },
            "Type:": "AWS::Logs::SubscriptionFilter"
        },
        "aws-lookoutmetrics-alert": {
            "Metadata": {},
            "Properties": {
                "Action": "",
                "AlertDescription": "",
                "AlertName": "",
                "AlertSensitivityThreshold": "",
                "AnomalyDetectorArn": ""
            },
            "Type:": "AWS::LookoutMetrics::Alert"
        },
        "aws-lookoutmetrics-anomalydetector": {
            "Metadata": {},
            "Properties": {
                "AnomalyDetectorConfig": "",
                "AnomalyDetectorDescription": "",
                "AnomalyDetectorName": "",
                "KmsKeyArn": "",
                "MetricSetList": ""
            },
            "Type:": "AWS::LookoutMetrics::AnomalyDetector"
        },
        "aws-lookoutvision-project": {
            "Metadata": {},
            "Properties": {
                "ProjectName": ""
            },
            "Type:": "AWS::LookoutVision::Project"
        },
        "aws-macie-customdataidentifier": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "IgnoreWords": "",
                "Keywords": "",
                "MaximumMatchDistance": "",
                "Name": "",
                "Regex": ""
            },
            "Type:": "AWS::Macie::CustomDataIdentifier"
        },
        "aws-macie-findingsfilter": {
            "Metadata": {},
            "Properties": {
                "Action": "",
                "Description": "",
                "FindingCriteria": "",
                "Name": "",
                "Position": ""
            },
            "Type:": "AWS::Macie::FindingsFilter"
        },
        "aws-macie-session": {
            "Metadata": {},
            "Properties": {
                "FindingPublishingFrequency": "",
                "Status": ""
            },
            "Type:": "AWS::Macie::Session"
        },
        "aws-managedblockchain-member": {
            "Metadata": {},
            "Properties": {
                "InvitationId": "",
                "MemberConfiguration": "",
                "NetworkConfiguration": "",
                "NetworkId": ""
            },
            "Type:": "AWS::ManagedBlockchain::Member"
        },
        "aws-managedblockchain-node": {
            "Metadata": {},
            "Properties": {
                "MemberId": "",
                "NetworkId": "",
                "NodeConfiguration": ""
            },
            "Type:": "AWS::ManagedBlockchain::Node"
        },
        "aws-mediaconnect-flow": {
            "Metadata": {},
            "Properties": {
                "AvailabilityZone": "",
                "Name": "",
                "Source": "",
                "SourceFailoverConfig": ""
            },
            "Type:": "AWS::MediaConnect::Flow"
        },
        "aws-mediaconnect-flowentitlement": {
            "Metadata": {},
            "Properties": {
                "DataTransferSubscriberFeePercent": "",
                "Description": "",
                "Encryption": "",
                "EntitlementStatus": "",
                "FlowArn": "",
                "Name": "",
                "Subscribers": ""
            },
            "Type:": "AWS::MediaConnect::FlowEntitlement"
        },
        "aws-mediaconnect-flowoutput": {
            "Metadata": {},
            "Properties": {
                "CidrAllowList": "",
                "Description": "",
                "Destination": "",
                "Encryption": "",
                "FlowArn": "",
                "MaxLatency": "",
                "Name": "",
                "Port": "",
                "Protocol": "",
                "RemoteId": "",
                "SmoothingLatency": "",
                "StreamId": "",
                "VpcInterfaceAttachment": ""
            },
            "Type:": "AWS::MediaConnect::FlowOutput"
        },
        "aws-mediaconnect-flowsource": {
            "Metadata": {},
            "Properties": {
                "Decryption": "",
                "Description": "",
                "EntitlementArn": "",
                "FlowArn": "",
                "IngestPort": "",
                "MaxBitrate": "",
                "MaxLatency": "",
                "Name": "",
                "Protocol": "",
                "StreamId": "",
                "VpcInterfaceName": "",
                "WhitelistCidr": ""
            },
            "Type:": "AWS::MediaConnect::FlowSource"
        },
        "aws-mediaconnect-flowvpcinterface": {
            "Metadata": {},
            "Properties": {
                "FlowArn": "",
                "Name": "",
                "RoleArn": "",
                "SecurityGroupIds": "",
                "SubnetId": ""
            },
            "Type:": "AWS::MediaConnect::FlowVpcInterface"
        },
        "aws-mediaconvert-jobtemplate": {
            "Metadata": {},
            "Properties": {
                "AccelerationSettings": "",
                "Category": "",
                "Description": "",
                "HopDestinations": "",
                "Name": "",
                "Priority": "",
                "Queue": "",
                "SettingsJson": "",
                "StatusUpdateInterval": "",
                "Tags": ""
            },
            "Type:": "AWS::MediaConvert::JobTemplate"
        },
        "aws-mediaconvert-preset": {
            "Metadata": {},
            "Properties": {
                "Category": "",
                "Description": "",
                "Name": "",
                "SettingsJson": "",
                "Tags": ""
            },
            "Type:": "AWS::MediaConvert::Preset"
        },
        "aws-mediaconvert-queue": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "PricingPlan": "",
                "Status": "",
                "Tags": ""
            },
            "Type:": "AWS::MediaConvert::Queue"
        },
        "aws-medialive-channel": {
            "Metadata": {},
            "Properties": {
                "CdiInputSpecification": "",
                "ChannelClass": "",
                "Destinations": "",
                "EncoderSettings": "",
                "InputAttachments": "",
                "InputSpecification": "",
                "LogLevel": "",
                "Name": "",
                "RoleArn": "",
                "Tags": "",
                "Vpc": ""
            },
            "Type:": "AWS::MediaLive::Channel"
        },
        "aws-medialive-input": {
            "Metadata": {},
            "Properties": {
                "Destinations": "",
                "InputDevices": "",
                "InputSecurityGroups": "",
                "MediaConnectFlows": "",
                "Name": "",
                "RoleArn": "",
                "Sources": "",
                "Tags": "",
                "Type": "",
                "Vpc": ""
            },
            "Type:": "AWS::MediaLive::Input"
        },
        "aws-medialive-inputsecuritygroup": {
            "Metadata": {},
            "Properties": {
                "Tags": "",
                "WhitelistRules": ""
            },
            "Type:": "AWS::MediaLive::InputSecurityGroup"
        },
        "aws-mediapackage-asset": {
            "Metadata": {},
            "Properties": {
                "EgressEndpoints": "",
                "Id": "",
                "PackagingGroupId": "",
                "ResourceId": "",
                "SourceArn": "",
                "SourceRoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::MediaPackage::Asset"
        },
        "aws-mediapackage-channel": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Id": "",
                "Tags": ""
            },
            "Type:": "AWS::MediaPackage::Channel"
        },
        "aws-mediapackage-originendpoint": {
            "Metadata": {},
            "Properties": {
                "Authorization": "",
                "ChannelId": "",
                "CmafPackage": "",
                "DashPackage": "",
                "Description": "",
                "HlsPackage": "",
                "Id": "",
                "ManifestName": "",
                "MssPackage": "",
                "Origination": "",
                "StartoverWindowSeconds": "",
                "Tags": "",
                "TimeDelaySeconds": "",
                "Whitelist": ""
            },
            "Type:": "AWS::MediaPackage::OriginEndpoint"
        },
        "aws-mediapackage-packagingconfiguration": {
            "Metadata": {},
            "Properties": {
                "CmafPackage": "",
                "DashPackage": "",
                "HlsPackage": "",
                "Id": "",
                "MssPackage": "",
                "PackagingGroupId": "",
                "Tags": ""
            },
            "Type:": "AWS::MediaPackage::PackagingConfiguration"
        },
        "aws-mediapackage-packaginggroup": {
            "Metadata": {},
            "Properties": {
                "Authorization": "",
                "Id": "",
                "Tags": ""
            },
            "Type:": "AWS::MediaPackage::PackagingGroup"
        },
        "aws-mediastore-container": {
            "Metadata": {},
            "Properties": {
                "AccessLoggingEnabled": "",
                "ContainerName": "",
                "CorsPolicy": "",
                "LifecyclePolicy": "",
                "MetricPolicy": "",
                "Policy": "",
                "Tags": ""
            },
            "Type:": "AWS::MediaStore::Container"
        },
        "aws-msk-cluster": {
            "Metadata": {},
            "Properties": {
                "BrokerNodeGroupInfo": "",
                "ClientAuthentication": "",
                "ClusterName": "",
                "ConfigurationInfo": "",
                "EncryptionInfo": "",
                "EnhancedMonitoring": "",
                "KafkaVersion": "",
                "LoggingInfo": "",
                "NumberOfBrokerNodes": "",
                "OpenMonitoring": "",
                "Tags": ""
            },
            "Type:": "AWS::MSK::Cluster"
        },
        "aws-mwaa-environment": {
            "Metadata": {},
            "Properties": {
                "AirflowConfigurationOptions": "",
                "AirflowVersion": "",
                "DagS3Path": "",
                "EnvironmentClass": "",
                "ExecutionRoleArn": "",
                "KmsKey": "",
                "LoggingConfiguration": "",
                "MaxWorkers": "",
                "MinWorkers": "",
                "Name": "",
                "NetworkConfiguration": "",
                "PluginsS3ObjectVersion": "",
                "PluginsS3Path": "",
                "RequirementsS3ObjectVersion": "",
                "RequirementsS3Path": "",
                "SourceBucketArn": "",
                "Tags": "",
                "WebserverAccessMode": "",
                "WeeklyMaintenanceWindowStart": ""
            },
            "Type:": "AWS::MWAA::Environment"
        },
        "aws-neptune-dbcluster": {
            "Metadata": {},
            "Properties": {
                "AssociatedRoles": "",
                "AvailabilityZones": "",
                "BackupRetentionPeriod": "",
                "DBClusterIdentifier": "",
                "DBClusterParameterGroupName": "",
                "DBSubnetGroupName": "",
                "DeletionProtection": "",
                "EnableCloudwatchLogsExports": "",
                "EngineVersion": "",
                "IamAuthEnabled": "",
                "KmsKeyId": "",
                "Port": "",
                "PreferredBackupWindow": "",
                "PreferredMaintenanceWindow": "",
                "RestoreToTime": "",
                "RestoreType": "",
                "SnapshotIdentifier": "",
                "SourceDBClusterIdentifier": "",
                "StorageEncrypted": "",
                "Tags": "",
                "UseLatestRestorableTime": "",
                "VpcSecurityGroupIds": ""
            },
            "Type:": "AWS::Neptune::DBCluster"
        },
        "aws-neptune-dbclusterparametergroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Family": "",
                "Name": "",
                "Parameters": "",
                "Tags": ""
            },
            "Type:": "AWS::Neptune::DBClusterParameterGroup"
        },
        "aws-neptune-dbinstance": {
            "Metadata": {},
            "Properties": {
                "AllowMajorVersionUpgrade": "",
                "AutoMinorVersionUpgrade": "",
                "AvailabilityZone": "",
                "DBClusterIdentifier": "",
                "DBInstanceClass": "",
                "DBInstanceIdentifier": "",
                "DBParameterGroupName": "",
                "DBSnapshotIdentifier": "",
                "DBSubnetGroupName": "",
                "PreferredMaintenanceWindow": "",
                "Tags": ""
            },
            "Type:": "AWS::Neptune::DBInstance"
        },
        "aws-neptune-dbparametergroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Family": "",
                "Name": "",
                "Parameters": "",
                "Tags": ""
            },
            "Type:": "AWS::Neptune::DBParameterGroup"
        },
        "aws-neptune-dbsubnetgroup": {
            "Metadata": {},
            "Properties": {
                "DBSubnetGroupDescription": "",
                "DBSubnetGroupName": "",
                "SubnetIds": "",
                "Tags": ""
            },
            "Type:": "AWS::Neptune::DBSubnetGroup"
        },
        "aws-networkfirewall-firewall": {
            "Metadata": {},
            "Properties": {
                "DeleteProtection": "",
                "Description": "",
                "FirewallName": "",
                "FirewallPolicyArn": "",
                "FirewallPolicyChangeProtection": "",
                "SubnetChangeProtection": "",
                "SubnetMappings": "",
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::NetworkFirewall::Firewall"
        },
        "aws-networkfirewall-firewallpolicy": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "FirewallPolicy": "",
                "FirewallPolicyName": "",
                "Tags": ""
            },
            "Type:": "AWS::NetworkFirewall::FirewallPolicy"
        },
        "aws-networkfirewall-loggingconfiguration": {
            "Metadata": {},
            "Properties": {
                "FirewallArn": "",
                "FirewallName": "",
                "LoggingConfiguration": ""
            },
            "Type:": "AWS::NetworkFirewall::LoggingConfiguration"
        },
        "aws-networkfirewall-rulegroup": {
            "Metadata": {},
            "Properties": {
                "Capacity": "",
                "Description": "",
                "RuleGroup": "",
                "RuleGroupName": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::NetworkFirewall::RuleGroup"
        },
        "aws-networkmanager-customergatewayassociation": {
            "Metadata": {},
            "Properties": {
                "CustomerGatewayArn": "",
                "DeviceId": "",
                "GlobalNetworkId": "",
                "LinkId": ""
            },
            "Type:": "AWS::NetworkManager::CustomerGatewayAssociation"
        },
        "aws-networkmanager-device": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "GlobalNetworkId": "",
                "Location": "",
                "Model": "",
                "SerialNumber": "",
                "SiteId": "",
                "Tags": "",
                "Type": "",
                "Vendor": ""
            },
            "Type:": "AWS::NetworkManager::Device"
        },
        "aws-networkmanager-globalnetwork": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Tags": ""
            },
            "Type:": "AWS::NetworkManager::GlobalNetwork"
        },
        "aws-networkmanager-link": {
            "Metadata": {},
            "Properties": {
                "Bandwidth": "",
                "Description": "",
                "GlobalNetworkId": "",
                "Provider": "",
                "SiteId": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::NetworkManager::Link"
        },
        "aws-networkmanager-linkassociation": {
            "Metadata": {},
            "Properties": {
                "DeviceId": "",
                "GlobalNetworkId": "",
                "LinkId": ""
            },
            "Type:": "AWS::NetworkManager::LinkAssociation"
        },
        "aws-networkmanager-site": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "GlobalNetworkId": "",
                "Location": "",
                "Tags": ""
            },
            "Type:": "AWS::NetworkManager::Site"
        },
        "aws-networkmanager-transitgatewayregistration": {
            "Metadata": {},
            "Properties": {
                "GlobalNetworkId": "",
                "TransitGatewayArn": ""
            },
            "Type:": "AWS::NetworkManager::TransitGatewayRegistration"
        },
        "aws-nimblestudio-launchprofile": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Ec2SubnetIds": "",
                "LaunchProfileProtocolVersions": "",
                "Name": "",
                "StreamConfiguration": "",
                "StudioComponentIds": "",
                "StudioId": "",
                "Tags": ""
            },
            "Type:": "AWS::NimbleStudio::LaunchProfile"
        },
        "aws-nimblestudio-streamingimage": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Ec2ImageId": "",
                "Name": "",
                "StudioId": "",
                "Tags": ""
            },
            "Type:": "AWS::NimbleStudio::StreamingImage"
        },
        "aws-nimblestudio-studio": {
            "Metadata": {},
            "Properties": {
                "AdminRoleArn": "",
                "DisplayName": "",
                "StudioEncryptionConfiguration": "",
                "StudioName": "",
                "Tags": "",
                "UserRoleArn": ""
            },
            "Type:": "AWS::NimbleStudio::Studio"
        },
        "aws-nimblestudio-studiocomponent": {
            "Metadata": {},
            "Properties": {
                "Configuration": "",
                "Description": "",
                "Ec2SecurityGroupIds": "",
                "InitializationScripts": "",
                "Name": "",
                "ScriptParameters": "",
                "StudioId": "",
                "Subtype": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::NimbleStudio::StudioComponent"
        },
        "aws-opsworks-app": {
            "Metadata": {},
            "Properties": {
                "AppSource": "",
                "Attributes": "",
                "DataSources": "",
                "Description": "",
                "Domains": "",
                "EnableSsl": "",
                "Environment": "",
                "Name": "",
                "Shortname": "",
                "SslConfiguration": "",
                "StackId": "",
                "Type": ""
            },
            "Type:": "AWS::OpsWorks::App"
        },
        "aws-opsworks-elasticloadbalancerattachment": {
            "Metadata": {},
            "Properties": {
                "ElasticLoadBalancerName": "",
                "LayerId": ""
            },
            "Type:": "AWS::OpsWorks::ElasticLoadBalancerAttachment"
        },
        "aws-opsworks-instance": {
            "Metadata": {},
            "Properties": {
                "AgentVersion": "",
                "AmiId": "",
                "Architecture": "",
                "AutoScalingType": "",
                "AvailabilityZone": "",
                "BlockDeviceMappings": "",
                "EbsOptimized": "",
                "ElasticIps": "",
                "Hostname": "",
                "InstallUpdatesOnBoot": "",
                "InstanceType": "",
                "LayerIds": "",
                "Os": "",
                "RootDeviceType": "",
                "SshKeyName": "",
                "StackId": "",
                "SubnetId": "",
                "Tenancy": "",
                "TimeBasedAutoScaling": "",
                "VirtualizationType": "",
                "Volumes": ""
            },
            "Type:": "AWS::OpsWorks::Instance"
        },
        "aws-opsworks-layer": {
            "Metadata": {},
            "Properties": {
                "Attributes": "",
                "AutoAssignElasticIps": "",
                "AutoAssignPublicIps": "",
                "CustomInstanceProfileArn": "",
                "CustomJson": "",
                "CustomRecipes": "",
                "CustomSecurityGroupIds": "",
                "EnableAutoHealing": "",
                "InstallUpdatesOnBoot": "",
                "LifecycleEventConfiguration": "",
                "LoadBasedAutoScaling": "",
                "Name": "",
                "Packages": "",
                "Shortname": "",
                "StackId": "",
                "Tags": "",
                "Type": "",
                "UseEbsOptimizedInstances": "",
                "VolumeConfigurations": ""
            },
            "Type:": "AWS::OpsWorks::Layer"
        },
        "aws-opsworks-stack": {
            "Metadata": {},
            "Properties": {
                "AgentVersion": "",
                "Attributes": "",
                "ChefConfiguration": "",
                "CloneAppIds": "",
                "ClonePermissions": "",
                "ConfigurationManager": "",
                "CustomCookbooksSource": "",
                "CustomJson": "",
                "DefaultAvailabilityZone": "",
                "DefaultInstanceProfileArn": "",
                "DefaultOs": "",
                "DefaultRootDeviceType": "",
                "DefaultSshKeyName": "",
                "DefaultSubnetId": "",
                "EcsClusterArn": "",
                "ElasticIps": "",
                "HostnameTheme": "",
                "Name": "",
                "RdsDbInstances": "",
                "ServiceRoleArn": "",
                "SourceStackId": "",
                "Tags": "",
                "UseCustomCookbooks": "",
                "UseOpsworksSecurityGroups": "",
                "VpcId": ""
            },
            "Type:": "AWS::OpsWorks::Stack"
        },
        "aws-opsworks-userprofile": {
            "Metadata": {},
            "Properties": {
                "AllowSelfManagement": "",
                "IamUserArn": "",
                "SshPublicKey": "",
                "SshUsername": ""
            },
            "Type:": "AWS::OpsWorks::UserProfile"
        },
        "aws-opsworks-volume": {
            "Metadata": {},
            "Properties": {
                "Ec2VolumeId": "",
                "MountPoint": "",
                "Name": "",
                "StackId": ""
            },
            "Type:": "AWS::OpsWorks::Volume"
        },
        "aws-opsworkscm-server": {
            "Metadata": {},
            "Properties": {
                "AssociatePublicIpAddress": "",
                "BackupId": "",
                "BackupRetentionCount": "",
                "CustomCertificate": "",
                "CustomDomain": "",
                "CustomPrivateKey": "",
                "DisableAutomatedBackup": "",
                "Engine": "",
                "EngineAttributes": "",
                "EngineModel": "",
                "EngineVersion": "",
                "InstanceProfileArn": "",
                "InstanceType": "",
                "KeyPair": "",
                "PreferredBackupWindow": "",
                "PreferredMaintenanceWindow": "",
                "SecurityGroupIds": "",
                "ServerName": "",
                "ServiceRoleArn": "",
                "SubnetIds": "",
                "Tags": ""
            },
            "Type:": "AWS::OpsWorksCM::Server"
        },
        "aws-pinpoint-admchannel": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "ClientId": "",
                "ClientSecret": "",
                "Enabled": ""
            },
            "Type:": "AWS::Pinpoint::ADMChannel"
        },
        "aws-pinpoint-apnschannel": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "BundleId": "",
                "Certificate": "",
                "DefaultAuthenticationMethod": "",
                "Enabled": "",
                "PrivateKey": "",
                "TeamId": "",
                "TokenKey": "",
                "TokenKeyId": ""
            },
            "Type:": "AWS::Pinpoint::APNSChannel"
        },
        "aws-pinpoint-apnssandboxchannel": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "BundleId": "",
                "Certificate": "",
                "DefaultAuthenticationMethod": "",
                "Enabled": "",
                "PrivateKey": "",
                "TeamId": "",
                "TokenKey": "",
                "TokenKeyId": ""
            },
            "Type:": "AWS::Pinpoint::APNSSandboxChannel"
        },
        "aws-pinpoint-apnsvoipchannel": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "BundleId": "",
                "Certificate": "",
                "DefaultAuthenticationMethod": "",
                "Enabled": "",
                "PrivateKey": "",
                "TeamId": "",
                "TokenKey": "",
                "TokenKeyId": ""
            },
            "Type:": "AWS::Pinpoint::APNSVoipChannel"
        },
        "aws-pinpoint-apnsvoipsandboxchannel": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "BundleId": "",
                "Certificate": "",
                "DefaultAuthenticationMethod": "",
                "Enabled": "",
                "PrivateKey": "",
                "TeamId": "",
                "TokenKey": "",
                "TokenKeyId": ""
            },
            "Type:": "AWS::Pinpoint::APNSVoipSandboxChannel"
        },
        "aws-pinpoint-app": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Pinpoint::App"
        },
        "aws-pinpoint-applicationsettings": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "CampaignHook": "",
                "CloudWatchMetricsEnabled": "",
                "Limits": "",
                "QuietTime": ""
            },
            "Type:": "AWS::Pinpoint::ApplicationSettings"
        },
        "aws-pinpoint-baiduchannel": {
            "Metadata": {},
            "Properties": {
                "ApiKey": "",
                "ApplicationId": "",
                "Enabled": "",
                "SecretKey": ""
            },
            "Type:": "AWS::Pinpoint::BaiduChannel"
        },
        "aws-pinpoint-campaign": {
            "Metadata": {},
            "Properties": {
                "AdditionalTreatments": "",
                "ApplicationId": "",
                "CampaignHook": "",
                "Description": "",
                "HoldoutPercent": "",
                "IsPaused": "",
                "Limits": "",
                "MessageConfiguration": "",
                "Name": "",
                "Schedule": "",
                "SegmentId": "",
                "SegmentVersion": "",
                "Tags": "",
                "TreatmentDescription": "",
                "TreatmentName": ""
            },
            "Type:": "AWS::Pinpoint::Campaign"
        },
        "aws-pinpoint-emailchannel": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "ConfigurationSet": "",
                "Enabled": "",
                "FromAddress": "",
                "Identity": "",
                "RoleArn": ""
            },
            "Type:": "AWS::Pinpoint::EmailChannel"
        },
        "aws-pinpoint-emailtemplate": {
            "Metadata": {},
            "Properties": {
                "DefaultSubstitutions": "",
                "HtmlPart": "",
                "Subject": "",
                "Tags": "",
                "TemplateDescription": "",
                "TemplateName": "",
                "TextPart": ""
            },
            "Type:": "AWS::Pinpoint::EmailTemplate"
        },
        "aws-pinpoint-eventstream": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "DestinationStreamArn": "",
                "RoleArn": ""
            },
            "Type:": "AWS::Pinpoint::EventStream"
        },
        "aws-pinpoint-gcmchannel": {
            "Metadata": {},
            "Properties": {
                "ApiKey": "",
                "ApplicationId": "",
                "Enabled": ""
            },
            "Type:": "AWS::Pinpoint::GCMChannel"
        },
        "aws-pinpoint-pushtemplate": {
            "Metadata": {},
            "Properties": {
                "ADM": "",
                "APNS": "",
                "Baidu": "",
                "Default": "",
                "DefaultSubstitutions": "",
                "GCM": "",
                "Tags": "",
                "TemplateDescription": "",
                "TemplateName": ""
            },
            "Type:": "AWS::Pinpoint::PushTemplate"
        },
        "aws-pinpoint-segment": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "Dimensions": "",
                "Name": "",
                "SegmentGroups": "",
                "Tags": ""
            },
            "Type:": "AWS::Pinpoint::Segment"
        },
        "aws-pinpoint-smschannel": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "Enabled": "",
                "SenderId": "",
                "ShortCode": ""
            },
            "Type:": "AWS::Pinpoint::SMSChannel"
        },
        "aws-pinpoint-smstemplate": {
            "Metadata": {},
            "Properties": {
                "Body": "",
                "DefaultSubstitutions": "",
                "Tags": "",
                "TemplateDescription": "",
                "TemplateName": ""
            },
            "Type:": "AWS::Pinpoint::SmsTemplate"
        },
        "aws-pinpoint-voicechannel": {
            "Metadata": {},
            "Properties": {
                "ApplicationId": "",
                "Enabled": ""
            },
            "Type:": "AWS::Pinpoint::VoiceChannel"
        },
        "aws-pinpointemail-configurationset": {
            "Metadata": {},
            "Properties": {
                "DeliveryOptions": "",
                "Name": "",
                "ReputationOptions": "",
                "SendingOptions": "",
                "Tags": "",
                "TrackingOptions": ""
            },
            "Type:": "AWS::PinpointEmail::ConfigurationSet"
        },
        "aws-pinpointemail-configurationseteventdestination": {
            "Metadata": {},
            "Properties": {
                "ConfigurationSetName": "",
                "EventDestination": "",
                "EventDestinationName": ""
            },
            "Type:": "AWS::PinpointEmail::ConfigurationSetEventDestination"
        },
        "aws-pinpointemail-dedicatedippool": {
            "Metadata": {},
            "Properties": {
                "PoolName": "",
                "Tags": ""
            },
            "Type:": "AWS::PinpointEmail::DedicatedIpPool"
        },
        "aws-pinpointemail-identity": {
            "Metadata": {},
            "Properties": {
                "DkimSigningEnabled": "",
                "FeedbackForwardingEnabled": "",
                "MailFromAttributes": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::PinpointEmail::Identity"
        },
        "aws-qldb-ledger": {
            "Metadata": {},
            "Properties": {
                "DeletionProtection": "",
                "Name": "",
                "PermissionsMode": "",
                "Tags": ""
            },
            "Type:": "AWS::QLDB::Ledger"
        },
        "aws-qldb-stream": {
            "Metadata": {},
            "Properties": {
                "ExclusiveEndTime": "",
                "InclusiveStartTime": "",
                "KinesisConfiguration": "",
                "LedgerName": "",
                "RoleArn": "",
                "StreamName": "",
                "Tags": ""
            },
            "Type:": "AWS::QLDB::Stream"
        },
        "aws-quicksight-analysis": {
            "Metadata": {},
            "Properties": {
                "AnalysisId": "",
                "AwsAccountId": "",
                "Errors": "",
                "Name": "",
                "Parameters": "",
                "Permissions": "",
                "SourceEntity": "",
                "Tags": "",
                "ThemeArn": ""
            },
            "Type:": "AWS::QuickSight::Analysis"
        },
        "aws-quicksight-dashboard": {
            "Metadata": {},
            "Properties": {
                "AwsAccountId": "",
                "DashboardId": "",
                "DashboardPublishOptions": "",
                "Name": "",
                "Parameters": "",
                "Permissions": "",
                "SourceEntity": "",
                "Tags": "",
                "ThemeArn": "",
                "VersionDescription": ""
            },
            "Type:": "AWS::QuickSight::Dashboard"
        },
        "aws-quicksight-dataset": {
            "Metadata": {},
            "Properties": {
                "AwsAccountId": "",
                "ColumnGroups": "",
                "ColumnLevelPermissionRules": "",
                "DataSetId": "",
                "FieldFolders": "",
                "ImportMode": "",
                "IngestionWaitPolicy": "",
                "LogicalTableMap": "",
                "Name": "",
                "Permissions": "",
                "PhysicalTableMap": "",
                "RowLevelPermissionDataSet": "",
                "Tags": ""
            },
            "Type:": "AWS::QuickSight::DataSet"
        },
        "aws-quicksight-datasource": {
            "Metadata": {},
            "Properties": {
                "AlternateDataSourceParameters": "",
                "AwsAccountId": "",
                "Credentials": "",
                "DataSourceId": "",
                "DataSourceParameters": "",
                "ErrorInfo": "",
                "Name": "",
                "Permissions": "",
                "SslProperties": "",
                "Tags": "",
                "Type": "",
                "VpcConnectionProperties": ""
            },
            "Type:": "AWS::QuickSight::DataSource"
        },
        "aws-quicksight-template": {
            "Metadata": {},
            "Properties": {
                "AwsAccountId": "",
                "Name": "",
                "Permissions": "",
                "SourceEntity": "",
                "Tags": "",
                "TemplateId": "",
                "VersionDescription": ""
            },
            "Type:": "AWS::QuickSight::Template"
        },
        "aws-quicksight-theme": {
            "Metadata": {},
            "Properties": {
                "AwsAccountId": "",
                "BaseThemeId": "",
                "Configuration": "",
                "Name": "",
                "Permissions": "",
                "Tags": "",
                "ThemeId": "",
                "VersionDescription": ""
            },
            "Type:": "AWS::QuickSight::Theme"
        },
        "aws-ram-resourceshare": {
            "Metadata": {},
            "Properties": {
                "AllowExternalPrincipals": "",
                "Name": "",
                "Principals": "",
                "ResourceArns": "",
                "Tags": ""
            },
            "Type:": "AWS::RAM::ResourceShare"
        },
        "aws-rds-dbcluster": {
            "Metadata": {},
            "Properties": {
                "AssociatedRoles": "",
                "AvailabilityZones": "",
                "BacktrackWindow": "",
                "BackupRetentionPeriod": "",
                "DBClusterIdentifier": "",
                "DBClusterParameterGroupName": "",
                "DBSubnetGroupName": "",
                "DatabaseName": "",
                "DeletionProtection": "",
                "EnableCloudwatchLogsExports": "",
                "EnableHttpEndpoint": "",
                "EnableIAMDatabaseAuthentication": "",
                "Engine": "",
                "EngineMode": "",
                "EngineVersion": "",
                "GlobalClusterIdentifier": "",
                "KmsKeyId": "",
                "MasterUserPassword": "",
                "MasterUsername": "",
                "Port": "",
                "PreferredBackupWindow": "",
                "PreferredMaintenanceWindow": "",
                "ReplicationSourceIdentifier": "",
                "RestoreType": "",
                "ScalingConfiguration": "",
                "SnapshotIdentifier": "",
                "SourceDBClusterIdentifier": "",
                "SourceRegion": "",
                "StorageEncrypted": "",
                "Tags": "",
                "UseLatestRestorableTime": "",
                "VpcSecurityGroupIds": ""
            },
            "Type:": "AWS::RDS::DBCluster"
        },
        "aws-rds-dbclusterparametergroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Family": "",
                "Parameters": "",
                "Tags": ""
            },
            "Type:": "AWS::RDS::DBClusterParameterGroup"
        },
        "aws-rds-dbinstance": {
            "Metadata": {},
            "Properties": {
                "AllocatedStorage": "",
                "AllowMajorVersionUpgrade": "",
                "AssociatedRoles": "",
                "AutoMinorVersionUpgrade": "",
                "AvailabilityZone": "",
                "BackupRetentionPeriod": "",
                "CACertificateIdentifier": "",
                "CharacterSetName": "",
                "CopyTagsToSnapshot": "",
                "DBClusterIdentifier": "",
                "DBInstanceClass": "",
                "DBInstanceIdentifier": "",
                "DBName": "",
                "DBParameterGroupName": "",
                "DBSecurityGroups": "",
                "DBSnapshotIdentifier": "",
                "DBSubnetGroupName": "",
                "DeleteAutomatedBackups": "",
                "DeletionProtection": "",
                "Domain": "",
                "DomainIAMRoleName": "",
                "EnableCloudwatchLogsExports": "",
                "EnableIAMDatabaseAuthentication": "",
                "EnablePerformanceInsights": "",
                "Engine": "",
                "EngineVersion": "",
                "Iops": "",
                "KmsKeyId": "",
                "LicenseModel": "",
                "MasterUserPassword": "",
                "MasterUsername": "",
                "MaxAllocatedStorage": "",
                "MonitoringInterval": "",
                "MonitoringRoleArn": "",
                "MultiAZ": "",
                "OptionGroupName": "",
                "PerformanceInsightsKMSKeyId": "",
                "PerformanceInsightsRetentionPeriod": "",
                "Port": "",
                "PreferredBackupWindow": "",
                "PreferredMaintenanceWindow": "",
                "ProcessorFeatures": "",
                "PromotionTier": "",
                "PubliclyAccessible": "",
                "SourceDBInstanceIdentifier": "",
                "SourceRegion": "",
                "StorageEncrypted": "",
                "StorageType": "",
                "Tags": "",
                "Timezone": "",
                "UseDefaultProcessorFeatures": "",
                "VPCSecurityGroups": ""
            },
            "Type:": "AWS::RDS::DBInstance"
        },
        "aws-rds-dbparametergroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Family": "",
                "Parameters": "",
                "Tags": ""
            },
            "Type:": "AWS::RDS::DBParameterGroup"
        },
        "aws-rds-dbproxy": {
            "Metadata": {},
            "Properties": {
                "Auth": "",
                "DBProxyName": "",
                "DebugLogging": "",
                "EngineFamily": "",
                "IdleClientTimeout": "",
                "RequireTLS": "",
                "RoleArn": "",
                "Tags": "",
                "VpcSecurityGroupIds": "",
                "VpcSubnetIds": ""
            },
            "Type:": "AWS::RDS::DBProxy"
        },
        "aws-rds-dbproxyendpoint": {
            "Metadata": {},
            "Properties": {
                "DBProxyEndpointName": "",
                "DBProxyName": "",
                "Tags": "",
                "TargetRole": "",
                "VpcSecurityGroupIds": "",
                "VpcSubnetIds": ""
            },
            "Type:": "AWS::RDS::DBProxyEndpoint"
        },
        "aws-rds-dbproxytargetgroup": {
            "Metadata": {},
            "Properties": {
                "ConnectionPoolConfigurationInfo": "",
                "DBClusterIdentifiers": "",
                "DBInstanceIdentifiers": "",
                "DBProxyName": "",
                "TargetGroupName": ""
            },
            "Type:": "AWS::RDS::DBProxyTargetGroup"
        },
        "aws-rds-dbsecuritygroup": {
            "Metadata": {},
            "Properties": {
                "DBSecurityGroupIngress": "",
                "EC2VpcId": "",
                "GroupDescription": "",
                "Tags": ""
            },
            "Type:": "AWS::RDS::DBSecurityGroup"
        },
        "aws-rds-dbsecuritygroupingress": {
            "Metadata": {},
            "Properties": {
                "CIDRIP": "",
                "DBSecurityGroupName": "",
                "EC2SecurityGroupId": "",
                "EC2SecurityGroupName": "",
                "EC2SecurityGroupOwnerId": ""
            },
            "Type:": "AWS::RDS::DBSecurityGroupIngress"
        },
        "aws-rds-dbsubnetgroup": {
            "Metadata": {},
            "Properties": {
                "DBSubnetGroupDescription": "",
                "DBSubnetGroupName": "",
                "SubnetIds": "",
                "Tags": ""
            },
            "Type:": "AWS::RDS::DBSubnetGroup"
        },
        "aws-rds-eventsubscription": {
            "Metadata": {},
            "Properties": {
                "Enabled": "",
                "EventCategories": "",
                "SnsTopicArn": "",
                "SourceIds": "",
                "SourceType": ""
            },
            "Type:": "AWS::RDS::EventSubscription"
        },
        "aws-rds-globalcluster": {
            "Metadata": {},
            "Properties": {
                "DeletionProtection": "",
                "Engine": "",
                "EngineVersion": "",
                "GlobalClusterIdentifier": "",
                "SourceDBClusterIdentifier": "",
                "StorageEncrypted": ""
            },
            "Type:": "AWS::RDS::GlobalCluster"
        },
        "aws-rds-optiongroup": {
            "Metadata": {},
            "Properties": {
                "EngineName": "",
                "MajorEngineVersion": "",
                "OptionConfigurations": "",
                "OptionGroupDescription": "",
                "Tags": ""
            },
            "Type:": "AWS::RDS::OptionGroup"
        },
        "aws-redshift-cluster": {
            "Metadata": {},
            "Properties": {
                "AllowVersionUpgrade": "",
                "AutomatedSnapshotRetentionPeriod": "",
                "AvailabilityZone": "",
                "ClusterIdentifier": "",
                "ClusterParameterGroupName": "",
                "ClusterSecurityGroups": "",
                "ClusterSubnetGroupName": "",
                "ClusterType": "",
                "ClusterVersion": "",
                "DBName": "",
                "ElasticIp": "",
                "Encrypted": "",
                "HsmClientCertificateIdentifier": "",
                "HsmConfigurationIdentifier": "",
                "IamRoles": "",
                "KmsKeyId": "",
                "LoggingProperties": "",
                "MasterUserPassword": "",
                "MasterUsername": "",
                "NodeType": "",
                "NumberOfNodes": "",
                "OwnerAccount": "",
                "Port": "",
                "PreferredMaintenanceWindow": "",
                "PubliclyAccessible": "",
                "SnapshotClusterIdentifier": "",
                "SnapshotIdentifier": "",
                "Tags": "",
                "VpcSecurityGroupIds": ""
            },
            "Type:": "AWS::Redshift::Cluster"
        },
        "aws-redshift-clusterparametergroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "ParameterGroupFamily": "",
                "Parameters": "",
                "Tags": ""
            },
            "Type:": "AWS::Redshift::ClusterParameterGroup"
        },
        "aws-redshift-clustersecuritygroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Tags": ""
            },
            "Type:": "AWS::Redshift::ClusterSecurityGroup"
        },
        "aws-redshift-clustersecuritygroupingress": {
            "Metadata": {},
            "Properties": {
                "CIDRIP": "",
                "ClusterSecurityGroupName": "",
                "EC2SecurityGroupName": "",
                "EC2SecurityGroupOwnerId": ""
            },
            "Type:": "AWS::Redshift::ClusterSecurityGroupIngress"
        },
        "aws-redshift-clustersubnetgroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "SubnetIds": "",
                "Tags": ""
            },
            "Type:": "AWS::Redshift::ClusterSubnetGroup"
        },
        "aws-resourcegroups-group": {
            "Metadata": {},
            "Properties": {
                "Configuration": "",
                "Description": "",
                "Name": "",
                "ResourceQuery": "",
                "Resources": "",
                "Tags": ""
            },
            "Type:": "AWS::ResourceGroups::Group"
        },
        "aws-robomaker-fleet": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::RoboMaker::Fleet"
        },
        "aws-robomaker-robot": {
            "Metadata": {},
            "Properties": {
                "Architecture": "",
                "Fleet": "",
                "GreengrassGroupId": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::RoboMaker::Robot"
        },
        "aws-robomaker-robotapplication": {
            "Metadata": {},
            "Properties": {
                "CurrentRevisionId": "",
                "Name": "",
                "RobotSoftwareSuite": "",
                "Sources": "",
                "Tags": ""
            },
            "Type:": "AWS::RoboMaker::RobotApplication"
        },
        "aws-robomaker-robotapplicationversion": {
            "Metadata": {},
            "Properties": {
                "Application": "",
                "CurrentRevisionId": ""
            },
            "Type:": "AWS::RoboMaker::RobotApplicationVersion"
        },
        "aws-robomaker-simulationapplication": {
            "Metadata": {},
            "Properties": {
                "CurrentRevisionId": "",
                "Name": "",
                "RenderingEngine": "",
                "RobotSoftwareSuite": "",
                "SimulationSoftwareSuite": "",
                "Sources": "",
                "Tags": ""
            },
            "Type:": "AWS::RoboMaker::SimulationApplication"
        },
        "aws-robomaker-simulationapplicationversion": {
            "Metadata": {},
            "Properties": {
                "Application": "",
                "CurrentRevisionId": ""
            },
            "Type:": "AWS::RoboMaker::SimulationApplicationVersion"
        },
        "aws-route53-dnssec": {
            "Metadata": {},
            "Properties": {
                "HostedZoneId": ""
            },
            "Type:": "AWS::Route53::DNSSEC"
        },
        "aws-route53-healthcheck": {
            "Metadata": {},
            "Properties": {
                "HealthCheckConfig": "",
                "HealthCheckTags": ""
            },
            "Type:": "AWS::Route53::HealthCheck"
        },
        "aws-route53-hostedzone": {
            "Metadata": {},
            "Properties": {
                "HostedZoneConfig": "",
                "HostedZoneTags": "",
                "Name": "",
                "QueryLoggingConfig": "",
                "VPCs": ""
            },
            "Type:": "AWS::Route53::HostedZone"
        },
        "aws-route53-keysigningkey": {
            "Metadata": {},
            "Properties": {
                "HostedZoneId": "",
                "KeyManagementServiceArn": "",
                "Name": "",
                "Status": ""
            },
            "Type:": "AWS::Route53::KeySigningKey"
        },
        "aws-route53-recordset": {
            "Metadata": {},
            "Properties": {
                "AliasTarget": "",
                "Comment": "",
                "Failover": "",
                "GeoLocation": "",
                "HealthCheckId": "",
                "HostedZoneId": "",
                "HostedZoneName": "",
                "MultiValueAnswer": "",
                "Name": "",
                "Region": "",
                "ResourceRecords": "",
                "SetIdentifier": "",
                "TTL": "",
                "Type": "",
                "Weight": ""
            },
            "Type:": "AWS::Route53::RecordSet"
        },
        "aws-route53-recordsetgroup": {
            "Metadata": {},
            "Properties": {
                "Comment": "",
                "HostedZoneId": "",
                "HostedZoneName": "",
                "RecordSets": ""
            },
            "Type:": "AWS::Route53::RecordSetGroup"
        },
        "aws-route53resolver-firewalldomainlist": {
            "Metadata": {},
            "Properties": {
                "DomainFileUrl": "",
                "Domains": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Route53Resolver::FirewallDomainList"
        },
        "aws-route53resolver-firewallrulegroup": {
            "Metadata": {},
            "Properties": {
                "FirewallRules": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::Route53Resolver::FirewallRuleGroup"
        },
        "aws-route53resolver-firewallrulegroupassociation": {
            "Metadata": {},
            "Properties": {
                "FirewallRuleGroupId": "",
                "MutationProtection": "",
                "Name": "",
                "Priority": "",
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::Route53Resolver::FirewallRuleGroupAssociation"
        },
        "aws-route53resolver-resolverdnssecconfig": {
            "Metadata": {},
            "Properties": {
                "ResourceId": ""
            },
            "Type:": "AWS::Route53Resolver::ResolverDNSSECConfig"
        },
        "aws-route53resolver-resolverendpoint": {
            "Metadata": {},
            "Properties": {
                "Direction": "",
                "IpAddresses": "",
                "Name": "",
                "SecurityGroupIds": "",
                "Tags": ""
            },
            "Type:": "AWS::Route53Resolver::ResolverEndpoint"
        },
        "aws-route53resolver-resolverqueryloggingconfig": {
            "Metadata": {},
            "Properties": {
                "DestinationArn": "",
                "Name": ""
            },
            "Type:": "AWS::Route53Resolver::ResolverQueryLoggingConfig"
        },
        "aws-route53resolver-resolverqueryloggingconfigassociation": {
            "Metadata": {},
            "Properties": {
                "ResolverQueryLogConfigId": "",
                "ResourceId": ""
            },
            "Type:": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation"
        },
        "aws-route53resolver-resolverrule": {
            "Metadata": {},
            "Properties": {
                "DomainName": "",
                "Name": "",
                "ResolverEndpointId": "",
                "RuleType": "",
                "Tags": "",
                "TargetIps": ""
            },
            "Type:": "AWS::Route53Resolver::ResolverRule"
        },
        "aws-route53resolver-resolverruleassociation": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "ResolverRuleId": "",
                "VPCId": ""
            },
            "Type:": "AWS::Route53Resolver::ResolverRuleAssociation"
        },
        "aws-s3-accesspoint": {
            "Metadata": {},
            "Properties": {
                "Bucket": "",
                "Name": "",
                "Policy": "",
                "PublicAccessBlockConfiguration": "",
                "VpcConfiguration": ""
            },
            "Type:": "AWS::S3::AccessPoint"
        },
        "aws-s3-bucket": {
            "Metadata": {},
            "Properties": {
                "AccelerateConfiguration": "",
                "AccessControl": "",
                "AnalyticsConfigurations": "",
                "BucketEncryption": "",
                "BucketName": "",
                "CorsConfiguration": "",
                "IntelligentTieringConfigurations": "",
                "InventoryConfigurations": "",
                "LifecycleConfiguration": "",
                "LoggingConfiguration": "",
                "MetricsConfigurations": "",
                "NotificationConfiguration": "",
                "ObjectLockConfiguration": "",
                "ObjectLockEnabled": "",
                "OwnershipControls": "",
                "PublicAccessBlockConfiguration": "",
                "ReplicationConfiguration": "",
                "Tags": "",
                "VersioningConfiguration": "",
                "WebsiteConfiguration": ""
            },
            "Type:": "AWS::S3::Bucket"
        },
        "aws-s3-bucketpolicy": {
            "Metadata": {},
            "Properties": {
                "Bucket": "",
                "PolicyDocument": ""
            },
            "Type:": "AWS::S3::BucketPolicy"
        },
        "aws-s3-storagelens": {
            "Metadata": {},
            "Properties": {
                "StorageLensConfiguration": "",
                "Tags": ""
            },
            "Type:": "AWS::S3::StorageLens"
        },
        "aws-s3objectlambda-accesspoint": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "ObjectLambdaConfiguration": ""
            },
            "Type:": "AWS::S3ObjectLambda::AccessPoint"
        },
        "aws-s3objectlambda-accesspointpolicy": {
            "Metadata": {},
            "Properties": {
                "ObjectLambdaAccessPoint": "",
                "PolicyDocument": ""
            },
            "Type:": "AWS::S3ObjectLambda::AccessPointPolicy"
        },
        "aws-s3outposts-accesspoint": {
            "Metadata": {},
            "Properties": {
                "Bucket": "",
                "Name": "",
                "Policy": "",
                "VpcConfiguration": ""
            },
            "Type:": "AWS::S3Outposts::AccessPoint"
        },
        "aws-s3outposts-bucket": {
            "Metadata": {},
            "Properties": {
                "BucketName": "",
                "LifecycleConfiguration": "",
                "OutpostId": "",
                "Tags": ""
            },
            "Type:": "AWS::S3Outposts::Bucket"
        },
        "aws-s3outposts-bucketpolicy": {
            "Metadata": {},
            "Properties": {
                "Bucket": "",
                "PolicyDocument": ""
            },
            "Type:": "AWS::S3Outposts::BucketPolicy"
        },
        "aws-s3outposts-endpoint": {
            "Metadata": {},
            "Properties": {
                "OutpostId": "",
                "SecurityGroupId": "",
                "SubnetId": ""
            },
            "Type:": "AWS::S3Outposts::Endpoint"
        },
        "aws-sagemaker-app": {
            "Metadata": {},
            "Properties": {
                "AppName": "",
                "AppType": "",
                "DomainId": "",
                "ResourceSpec": "",
                "Tags": "",
                "UserProfileName": ""
            },
            "Type:": "AWS::SageMaker::App"
        },
        "aws-sagemaker-appimageconfig": {
            "Metadata": {},
            "Properties": {
                "AppImageConfigName": "",
                "KernelGatewayImageConfig": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::AppImageConfig"
        },
        "aws-sagemaker-coderepository": {
            "Metadata": {},
            "Properties": {
                "CodeRepositoryName": "",
                "GitConfig": ""
            },
            "Type:": "AWS::SageMaker::CodeRepository"
        },
        "aws-sagemaker-dataqualityjobdefinition": {
            "Metadata": {},
            "Properties": {
                "DataQualityAppSpecification": "",
                "DataQualityBaselineConfig": "",
                "DataQualityJobInput": "",
                "DataQualityJobOutputConfig": "",
                "JobDefinitionName": "",
                "JobResources": "",
                "NetworkConfig": "",
                "RoleArn": "",
                "StoppingCondition": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::DataQualityJobDefinition"
        },
        "aws-sagemaker-device": {
            "Metadata": {},
            "Properties": {
                "Device": "",
                "DeviceFleetName": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::Device"
        },
        "aws-sagemaker-devicefleet": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "DeviceFleetName": "",
                "OutputConfig": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::DeviceFleet"
        },
        "aws-sagemaker-domain": {
            "Metadata": {},
            "Properties": {
                "AppNetworkAccessType": "",
                "AuthMode": "",
                "DefaultUserSettings": "",
                "DomainName": "",
                "KmsKeyId": "",
                "SubnetIds": "",
                "Tags": "",
                "VpcId": ""
            },
            "Type:": "AWS::SageMaker::Domain"
        },
        "aws-sagemaker-endpoint": {
            "Metadata": {},
            "Properties": {
                "DeploymentConfig": "",
                "EndpointConfigName": "",
                "EndpointName": "",
                "ExcludeRetainedVariantProperties": "",
                "RetainAllVariantProperties": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::Endpoint"
        },
        "aws-sagemaker-endpointconfig": {
            "Metadata": {},
            "Properties": {
                "DataCaptureConfig": "",
                "EndpointConfigName": "",
                "KmsKeyId": "",
                "ProductionVariants": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::EndpointConfig"
        },
        "aws-sagemaker-featuregroup": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "EventTimeFeatureName": "",
                "FeatureDefinitions": "",
                "FeatureGroupName": "",
                "OfflineStoreConfig": "",
                "OnlineStoreConfig": "",
                "RecordIdentifierFeatureName": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::FeatureGroup"
        },
        "aws-sagemaker-image": {
            "Metadata": {},
            "Properties": {
                "ImageDescription": "",
                "ImageDisplayName": "",
                "ImageName": "",
                "ImageRoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::Image"
        },
        "aws-sagemaker-imageversion": {
            "Metadata": {},
            "Properties": {
                "BaseImage": "",
                "ImageName": ""
            },
            "Type:": "AWS::SageMaker::ImageVersion"
        },
        "aws-sagemaker-model": {
            "Metadata": {},
            "Properties": {
                "Containers": "",
                "EnableNetworkIsolation": "",
                "ExecutionRoleArn": "",
                "InferenceExecutionConfig": "",
                "ModelName": "",
                "PrimaryContainer": "",
                "Tags": "",
                "VpcConfig": ""
            },
            "Type:": "AWS::SageMaker::Model"
        },
        "aws-sagemaker-modelbiasjobdefinition": {
            "Metadata": {},
            "Properties": {
                "JobDefinitionName": "",
                "JobResources": "",
                "ModelBiasAppSpecification": "",
                "ModelBiasBaselineConfig": "",
                "ModelBiasJobInput": "",
                "ModelBiasJobOutputConfig": "",
                "NetworkConfig": "",
                "RoleArn": "",
                "StoppingCondition": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::ModelBiasJobDefinition"
        },
        "aws-sagemaker-modelexplainabilityjobdefinition": {
            "Metadata": {},
            "Properties": {
                "JobDefinitionName": "",
                "JobResources": "",
                "ModelExplainabilityAppSpecification": "",
                "ModelExplainabilityBaselineConfig": "",
                "ModelExplainabilityJobInput": "",
                "ModelExplainabilityJobOutputConfig": "",
                "NetworkConfig": "",
                "RoleArn": "",
                "StoppingCondition": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::ModelExplainabilityJobDefinition"
        },
        "aws-sagemaker-modelpackagegroup": {
            "Metadata": {},
            "Properties": {
                "ModelPackageGroupDescription": "",
                "ModelPackageGroupName": "",
                "ModelPackageGroupPolicy": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::ModelPackageGroup"
        },
        "aws-sagemaker-modelqualityjobdefinition": {
            "Metadata": {},
            "Properties": {
                "JobDefinitionName": "",
                "JobResources": "",
                "ModelQualityAppSpecification": "",
                "ModelQualityBaselineConfig": "",
                "ModelQualityJobInput": "",
                "ModelQualityJobOutputConfig": "",
                "NetworkConfig": "",
                "RoleArn": "",
                "StoppingCondition": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::ModelQualityJobDefinition"
        },
        "aws-sagemaker-monitoringschedule": {
            "Metadata": {},
            "Properties": {
                "EndpointName": "",
                "FailureReason": "",
                "LastMonitoringExecutionSummary": "",
                "MonitoringScheduleConfig": "",
                "MonitoringScheduleName": "",
                "MonitoringScheduleStatus": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::MonitoringSchedule"
        },
        "aws-sagemaker-notebookinstance": {
            "Metadata": {},
            "Properties": {
                "AcceleratorTypes": "",
                "AdditionalCodeRepositories": "",
                "DefaultCodeRepository": "",
                "DirectInternetAccess": "",
                "InstanceType": "",
                "KmsKeyId": "",
                "LifecycleConfigName": "",
                "NotebookInstanceName": "",
                "RoleArn": "",
                "RootAccess": "",
                "SecurityGroupIds": "",
                "SubnetId": "",
                "Tags": "",
                "VolumeSizeInGB": ""
            },
            "Type:": "AWS::SageMaker::NotebookInstance"
        },
        "aws-sagemaker-notebookinstancelifecycleconfig": {
            "Metadata": {},
            "Properties": {
                "NotebookInstanceLifecycleConfigName": "",
                "OnCreate": "",
                "OnStart": ""
            },
            "Type:": "AWS::SageMaker::NotebookInstanceLifecycleConfig"
        },
        "aws-sagemaker-pipeline": {
            "Metadata": {},
            "Properties": {
                "PipelineDefinition": "",
                "PipelineDescription": "",
                "PipelineDisplayName": "",
                "PipelineName": "",
                "RoleArn": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::Pipeline"
        },
        "aws-sagemaker-project": {
            "Metadata": {},
            "Properties": {
                "ProjectDescription": "",
                "ProjectName": "",
                "ServiceCatalogProvisioningDetails": "",
                "Tags": ""
            },
            "Type:": "AWS::SageMaker::Project"
        },
        "aws-sagemaker-userprofile": {
            "Metadata": {},
            "Properties": {
                "DomainId": "",
                "SingleSignOnUserIdentifier": "",
                "SingleSignOnUserValue": "",
                "Tags": "",
                "UserProfileName": "",
                "UserSettings": ""
            },
            "Type:": "AWS::SageMaker::UserProfile"
        },
        "aws-sagemaker-workteam": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "MemberDefinitions": "",
                "NotificationConfiguration": "",
                "Tags": "",
                "WorkteamName": ""
            },
            "Type:": "AWS::SageMaker::Workteam"
        },
        "aws-sdb-domain": {
            "Metadata": {},
            "Properties": {
                "Description": ""
            },
            "Type:": "AWS::SDB::Domain"
        },
        "aws-secretsmanager-resourcepolicy": {
            "Metadata": {},
            "Properties": {
                "BlockPublicPolicy": "",
                "ResourcePolicy": "",
                "SecretId": ""
            },
            "Type:": "AWS::SecretsManager::ResourcePolicy"
        },
        "aws-secretsmanager-rotationschedule": {
            "Metadata": {},
            "Properties": {
                "HostedRotationLambda": "",
                "RotationLambdaARN": "",
                "RotationRules": "",
                "SecretId": ""
            },
            "Type:": "AWS::SecretsManager::RotationSchedule"
        },
        "aws-secretsmanager-secret": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "GenerateSecretString": "",
                "KmsKeyId": "",
                "Name": "",
                "ReplicaRegions": "",
                "SecretString": "",
                "Tags": ""
            },
            "Type:": "AWS::SecretsManager::Secret"
        },
        "aws-secretsmanager-secrettargetattachment": {
            "Metadata": {},
            "Properties": {
                "SecretId": "",
                "TargetId": "",
                "TargetType": ""
            },
            "Type:": "AWS::SecretsManager::SecretTargetAttachment"
        },
        "aws-securityhub-hub": {
            "Metadata": {},
            "Properties": {
                "Tags": ""
            },
            "Type:": "AWS::SecurityHub::Hub"
        },
        "aws-servicecatalog-acceptedportfolioshare": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "PortfolioId": ""
            },
            "Type:": "AWS::ServiceCatalog::AcceptedPortfolioShare"
        },
        "aws-servicecatalog-cloudformationproduct": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "Description": "",
                "Distributor": "",
                "Name": "",
                "Owner": "",
                "ProvisioningArtifactParameters": "",
                "ReplaceProvisioningArtifacts": "",
                "SupportDescription": "",
                "SupportEmail": "",
                "SupportUrl": "",
                "Tags": ""
            },
            "Type:": "AWS::ServiceCatalog::CloudFormationProduct"
        },
        "aws-servicecatalog-cloudformationprovisionedproduct": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "NotificationArns": "",
                "PathId": "",
                "PathName": "",
                "ProductId": "",
                "ProductName": "",
                "ProvisionedProductName": "",
                "ProvisioningArtifactId": "",
                "ProvisioningArtifactName": "",
                "ProvisioningParameters": "",
                "ProvisioningPreferences": "",
                "Tags": ""
            },
            "Type:": "AWS::ServiceCatalog::CloudFormationProvisionedProduct"
        },
        "aws-servicecatalog-launchnotificationconstraint": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "Description": "",
                "NotificationArns": "",
                "PortfolioId": "",
                "ProductId": ""
            },
            "Type:": "AWS::ServiceCatalog::LaunchNotificationConstraint"
        },
        "aws-servicecatalog-launchroleconstraint": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "Description": "",
                "LocalRoleName": "",
                "PortfolioId": "",
                "ProductId": "",
                "RoleArn": ""
            },
            "Type:": "AWS::ServiceCatalog::LaunchRoleConstraint"
        },
        "aws-servicecatalog-launchtemplateconstraint": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "Description": "",
                "PortfolioId": "",
                "ProductId": "",
                "Rules": ""
            },
            "Type:": "AWS::ServiceCatalog::LaunchTemplateConstraint"
        },
        "aws-servicecatalog-portfolio": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "Description": "",
                "DisplayName": "",
                "ProviderName": "",
                "Tags": ""
            },
            "Type:": "AWS::ServiceCatalog::Portfolio"
        },
        "aws-servicecatalog-portfolioprincipalassociation": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "PortfolioId": "",
                "PrincipalARN": "",
                "PrincipalType": ""
            },
            "Type:": "AWS::ServiceCatalog::PortfolioPrincipalAssociation"
        },
        "aws-servicecatalog-portfolioproductassociation": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "PortfolioId": "",
                "ProductId": "",
                "SourcePortfolioId": ""
            },
            "Type:": "AWS::ServiceCatalog::PortfolioProductAssociation"
        },
        "aws-servicecatalog-portfolioshare": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "AccountId": "",
                "PortfolioId": "",
                "ShareTagOptions": ""
            },
            "Type:": "AWS::ServiceCatalog::PortfolioShare"
        },
        "aws-servicecatalog-resourceupdateconstraint": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "Description": "",
                "PortfolioId": "",
                "ProductId": "",
                "TagUpdateOnProvisionedProduct": ""
            },
            "Type:": "AWS::ServiceCatalog::ResourceUpdateConstraint"
        },
        "aws-servicecatalog-serviceaction": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "Definition": "",
                "DefinitionType": "",
                "Description": "",
                "Name": ""
            },
            "Type:": "AWS::ServiceCatalog::ServiceAction"
        },
        "aws-servicecatalog-serviceactionassociation": {
            "Metadata": {},
            "Properties": {
                "ProductId": "",
                "ProvisioningArtifactId": "",
                "ServiceActionId": ""
            },
            "Type:": "AWS::ServiceCatalog::ServiceActionAssociation"
        },
        "aws-servicecatalog-stacksetconstraint": {
            "Metadata": {},
            "Properties": {
                "AcceptLanguage": "",
                "AccountList": "",
                "AdminRole": "",
                "Description": "",
                "ExecutionRole": "",
                "PortfolioId": "",
                "ProductId": "",
                "RegionList": "",
                "StackInstanceControl": ""
            },
            "Type:": "AWS::ServiceCatalog::StackSetConstraint"
        },
        "aws-servicecatalog-tagoption": {
            "Metadata": {},
            "Properties": {
                "Active": "",
                "Key": "",
                "Value": ""
            },
            "Type:": "AWS::ServiceCatalog::TagOption"
        },
        "aws-servicecatalog-tagoptionassociation": {
            "Metadata": {},
            "Properties": {
                "ResourceId": "",
                "TagOptionId": ""
            },
            "Type:": "AWS::ServiceCatalog::TagOptionAssociation"
        },
        "aws-servicecatalogappregistry-application": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::ServiceCatalogAppRegistry::Application"
        },
        "aws-servicecatalogappregistry-attributegroup": {
            "Metadata": {},
            "Properties": {
                "Attributes": "",
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::ServiceCatalogAppRegistry::AttributeGroup"
        },
        "aws-servicecatalogappregistry-attributegroupassociation": {
            "Metadata": {},
            "Properties": {
                "Application": "",
                "AttributeGroup": ""
            },
            "Type:": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation"
        },
        "aws-servicecatalogappregistry-resourceassociation": {
            "Metadata": {},
            "Properties": {
                "Application": "",
                "Resource": "",
                "ResourceType": ""
            },
            "Type:": "AWS::ServiceCatalogAppRegistry::ResourceAssociation"
        },
        "aws-servicediscovery-httpnamespace": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::ServiceDiscovery::HttpNamespace"
        },
        "aws-servicediscovery-instance": {
            "Metadata": {},
            "Properties": {
                "InstanceAttributes": "",
                "InstanceId": "",
                "ServiceId": ""
            },
            "Type:": "AWS::ServiceDiscovery::Instance"
        },
        "aws-servicediscovery-privatednsnamespace": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": "",
                "Vpc": ""
            },
            "Type:": "AWS::ServiceDiscovery::PrivateDnsNamespace"
        },
        "aws-servicediscovery-publicdnsnamespace": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::ServiceDiscovery::PublicDnsNamespace"
        },
        "aws-servicediscovery-service": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "DnsConfig": "",
                "HealthCheckConfig": "",
                "HealthCheckCustomConfig": "",
                "Name": "",
                "NamespaceId": "",
                "Tags": "",
                "Type": ""
            },
            "Type:": "AWS::ServiceDiscovery::Service"
        },
        "aws-ses-configurationset": {
            "Metadata": {},
            "Properties": {
                "Name": ""
            },
            "Type:": "AWS::SES::ConfigurationSet"
        },
        "aws-ses-configurationseteventdestination": {
            "Metadata": {},
            "Properties": {
                "ConfigurationSetName": "",
                "EventDestination": ""
            },
            "Type:": "AWS::SES::ConfigurationSetEventDestination"
        },
        "aws-ses-contactlist": {
            "Metadata": {},
            "Properties": {
                "ContactListName": "",
                "Description": "",
                "Tags": "",
                "Topics": ""
            },
            "Type:": "AWS::SES::ContactList"
        },
        "aws-ses-receiptfilter": {
            "Metadata": {},
            "Properties": {
                "Filter": ""
            },
            "Type:": "AWS::SES::ReceiptFilter"
        },
        "aws-ses-receiptrule": {
            "Metadata": {},
            "Properties": {
                "After": "",
                "Rule": "",
                "RuleSetName": ""
            },
            "Type:": "AWS::SES::ReceiptRule"
        },
        "aws-ses-receiptruleset": {
            "Metadata": {},
            "Properties": {
                "RuleSetName": ""
            },
            "Type:": "AWS::SES::ReceiptRuleSet"
        },
        "aws-ses-template": {
            "Metadata": {},
            "Properties": {
                "Template": ""
            },
            "Type:": "AWS::SES::Template"
        },
        "aws-signer-profilepermission": {
            "Metadata": {},
            "Properties": {
                "Action": "",
                "Principal": "",
                "ProfileName": "",
                "ProfileVersion": "",
                "StatementId": ""
            },
            "Type:": "AWS::Signer::ProfilePermission"
        },
        "aws-signer-signingprofile": {
            "Metadata": {},
            "Properties": {
                "PlatformId": "",
                "SignatureValidityPeriod": "",
                "Tags": ""
            },
            "Type:": "AWS::Signer::SigningProfile"
        },
        "aws-sns-subscription": {
            "Metadata": {},
            "Properties": {
                "DeliveryPolicy": "",
                "Endpoint": "",
                "FilterPolicy": "",
                "Protocol": "",
                "RawMessageDelivery": "",
                "RedrivePolicy": "",
                "Region": "",
                "SubscriptionRoleArn": "",
                "TopicArn": ""
            },
            "Type:": "AWS::SNS::Subscription"
        },
        "aws-sns-topic": {
            "Metadata": {},
            "Properties": {
                "ContentBasedDeduplication": "",
                "DisplayName": "",
                "FifoTopic": "",
                "KmsMasterKeyId": "",
                "Subscription": "",
                "Tags": "",
                "TopicName": ""
            },
            "Type:": "AWS::SNS::Topic"
        },
        "aws-sns-topicpolicy": {
            "Metadata": {},
            "Properties": {
                "PolicyDocument": "",
                "Topics": ""
            },
            "Type:": "AWS::SNS::TopicPolicy"
        },
        "aws-sqs-queue": {
            "Metadata": {},
            "Properties": {
                "ContentBasedDeduplication": "",
                "DelaySeconds": "",
                "FifoQueue": "",
                "KmsDataKeyReusePeriodSeconds": "",
                "KmsMasterKeyId": "",
                "MaximumMessageSize": "",
                "MessageRetentionPeriod": "",
                "QueueName": "",
                "ReceiveMessageWaitTimeSeconds": "",
                "RedrivePolicy": "",
                "Tags": "",
                "VisibilityTimeout": ""
            },
            "Type:": "AWS::SQS::Queue"
        },
        "aws-sqs-queuepolicy": {
            "Metadata": {},
            "Properties": {
                "PolicyDocument": "",
                "Queues": ""
            },
            "Type:": "AWS::SQS::QueuePolicy"
        },
        "aws-ssm-association": {
            "Metadata": {},
            "Properties": {
                "ApplyOnlyAtCronInterval": "",
                "AssociationName": "",
                "AutomationTargetParameterName": "",
                "ComplianceSeverity": "",
                "DocumentVersion": "",
                "InstanceId": "",
                "MaxConcurrency": "",
                "MaxErrors": "",
                "Name": "",
                "OutputLocation": "",
                "Parameters": "",
                "ScheduleExpression": "",
                "SyncCompliance": "",
                "Targets": "",
                "WaitForSuccessTimeoutSeconds": ""
            },
            "Type:": "AWS::SSM::Association"
        },
        "aws-ssm-document": {
            "Metadata": {},
            "Properties": {
                "Attachments": "",
                "Content": "",
                "DocumentFormat": "",
                "DocumentType": "",
                "Name": "",
                "Requires": "",
                "Tags": "",
                "TargetType": "",
                "VersionName": ""
            },
            "Type:": "AWS::SSM::Document"
        },
        "aws-ssm-maintenancewindow": {
            "Metadata": {},
            "Properties": {
                "AllowUnassociatedTargets": "",
                "Cutoff": "",
                "Description": "",
                "Duration": "",
                "EndDate": "",
                "Name": "",
                "Schedule": "",
                "ScheduleOffset": "",
                "ScheduleTimezone": "",
                "StartDate": "",
                "Tags": ""
            },
            "Type:": "AWS::SSM::MaintenanceWindow"
        },
        "aws-ssm-maintenancewindowtarget": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "OwnerInformation": "",
                "ResourceType": "",
                "Targets": "",
                "WindowId": ""
            },
            "Type:": "AWS::SSM::MaintenanceWindowTarget"
        },
        "aws-ssm-maintenancewindowtask": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "LoggingInfo": "",
                "MaxConcurrency": "",
                "MaxErrors": "",
                "Name": "",
                "Priority": "",
                "ServiceRoleArn": "",
                "Targets": "",
                "TaskArn": "",
                "TaskInvocationParameters": "",
                "TaskParameters": "",
                "TaskType": "",
                "WindowId": ""
            },
            "Type:": "AWS::SSM::MaintenanceWindowTask"
        },
        "aws-ssm-parameter": {
            "Metadata": {},
            "Properties": {
                "AllowedPattern": "",
                "DataType": "",
                "Description": "",
                "Name": "",
                "Policies": "",
                "Tags": "",
                "Tier": "",
                "Type": "",
                "Value": ""
            },
            "Type:": "AWS::SSM::Parameter"
        },
        "aws-ssm-patchbaseline": {
            "Metadata": {},
            "Properties": {
                "ApprovalRules": "",
                "ApprovedPatches": "",
                "ApprovedPatchesComplianceLevel": "",
                "ApprovedPatchesEnableNonSecurity": "",
                "Description": "",
                "GlobalFilters": "",
                "Name": "",
                "OperatingSystem": "",
                "PatchGroups": "",
                "RejectedPatches": "",
                "RejectedPatchesAction": "",
                "Sources": "",
                "Tags": ""
            },
            "Type:": "AWS::SSM::PatchBaseline"
        },
        "aws-ssm-resourcedatasync": {
            "Metadata": {},
            "Properties": {
                "BucketName": "",
                "BucketPrefix": "",
                "BucketRegion": "",
                "KMSKeyArn": "",
                "S3Destination": "",
                "SyncFormat": "",
                "SyncName": "",
                "SyncSource": "",
                "SyncType": ""
            },
            "Type:": "AWS::SSM::ResourceDataSync"
        },
        "aws-sso-assignment": {
            "Metadata": {},
            "Properties": {
                "InstanceArn": "",
                "PermissionSetArn": "",
                "PrincipalId": "",
                "PrincipalType": "",
                "TargetId": "",
                "TargetType": ""
            },
            "Type:": "AWS::SSO::Assignment"
        },
        "aws-sso-instanceaccesscontrolattributeconfiguration": {
            "Metadata": {},
            "Properties": {
                "AccessControlAttributes": "",
                "InstanceArn": ""
            },
            "Type:": "AWS::SSO::InstanceAccessControlAttributeConfiguration"
        },
        "aws-sso-permissionset": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "InlinePolicy": "",
                "InstanceArn": "",
                "ManagedPolicies": "",
                "Name": "",
                "RelayStateType": "",
                "SessionDuration": "",
                "Tags": ""
            },
            "Type:": "AWS::SSO::PermissionSet"
        },
        "aws-stepfunctions-activity": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "Tags": ""
            },
            "Type:": "AWS::StepFunctions::Activity"
        },
        "aws-stepfunctions-statemachine": {
            "Metadata": {},
            "Properties": {
                "Definition": "",
                "DefinitionS3Location": "",
                "DefinitionString": "",
                "DefinitionSubstitutions": "",
                "LoggingConfiguration": "",
                "RoleArn": "",
                "StateMachineName": "",
                "StateMachineType": "",
                "Tags": "",
                "TracingConfiguration": ""
            },
            "Type:": "AWS::StepFunctions::StateMachine"
        },
        "aws-synthetics-canary": {
            "Metadata": {},
            "Properties": {
                "ArtifactS3Location": "",
                "Code": "",
                "ExecutionRoleArn": "",
                "FailureRetentionPeriod": "",
                "Name": "",
                "RunConfig": "",
                "RuntimeVersion": "",
                "Schedule": "",
                "StartCanaryAfterCreation": "",
                "SuccessRetentionPeriod": "",
                "Tags": "",
                "VPCConfig": ""
            },
            "Type:": "AWS::Synthetics::Canary"
        },
        "aws-timestream-database": {
            "Metadata": {},
            "Properties": {
                "DatabaseName": "",
                "KmsKeyId": "",
                "Tags": ""
            },
            "Type:": "AWS::Timestream::Database"
        },
        "aws-timestream-table": {
            "Metadata": {},
            "Properties": {
                "DatabaseName": "",
                "RetentionProperties": "",
                "TableName": "",
                "Tags": ""
            },
            "Type:": "AWS::Timestream::Table"
        },
        "aws-transfer-server": {
            "Metadata": {},
            "Properties": {
                "Certificate": "",
                "Domain": "",
                "EndpointDetails": "",
                "EndpointType": "",
                "IdentityProviderDetails": "",
                "IdentityProviderType": "",
                "LoggingRole": "",
                "Protocols": "",
                "SecurityPolicyName": "",
                "Tags": ""
            },
            "Type:": "AWS::Transfer::Server"
        },
        "aws-transfer-user": {
            "Metadata": {},
            "Properties": {
                "HomeDirectory": "",
                "HomeDirectoryMappings": "",
                "HomeDirectoryType": "",
                "Policy": "",
                "PosixProfile": "",
                "Role": "",
                "ServerId": "",
                "SshPublicKeys": "",
                "Tags": "",
                "UserName": ""
            },
            "Type:": "AWS::Transfer::User"
        },
        "aws-waf-bytematchset": {
            "Metadata": {},
            "Properties": {
                "ByteMatchTuples": "",
                "Name": ""
            },
            "Type:": "AWS::WAF::ByteMatchSet"
        },
        "aws-waf-ipset": {
            "Metadata": {},
            "Properties": {
                "IPSetDescriptors": "",
                "Name": ""
            },
            "Type:": "AWS::WAF::IPSet"
        },
        "aws-waf-rule": {
            "Metadata": {},
            "Properties": {
                "MetricName": "",
                "Name": "",
                "Predicates": ""
            },
            "Type:": "AWS::WAF::Rule"
        },
        "aws-waf-sizeconstraintset": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "SizeConstraints": ""
            },
            "Type:": "AWS::WAF::SizeConstraintSet"
        },
        "aws-waf-sqlinjectionmatchset": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "SqlInjectionMatchTuples": ""
            },
            "Type:": "AWS::WAF::SqlInjectionMatchSet"
        },
        "aws-waf-webacl": {
            "Metadata": {},
            "Properties": {
                "DefaultAction": "",
                "MetricName": "",
                "Name": "",
                "Rules": ""
            },
            "Type:": "AWS::WAF::WebACL"
        },
        "aws-waf-xssmatchset": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "XssMatchTuples": ""
            },
            "Type:": "AWS::WAF::XssMatchSet"
        },
        "aws-wafregional-bytematchset": {
            "Metadata": {},
            "Properties": {
                "ByteMatchTuples": "",
                "Name": ""
            },
            "Type:": "AWS::WAFRegional::ByteMatchSet"
        },
        "aws-wafregional-geomatchset": {
            "Metadata": {},
            "Properties": {
                "GeoMatchConstraints": "",
                "Name": ""
            },
            "Type:": "AWS::WAFRegional::GeoMatchSet"
        },
        "aws-wafregional-ipset": {
            "Metadata": {},
            "Properties": {
                "IPSetDescriptors": "",
                "Name": ""
            },
            "Type:": "AWS::WAFRegional::IPSet"
        },
        "aws-wafregional-ratebasedrule": {
            "Metadata": {},
            "Properties": {
                "MatchPredicates": "",
                "MetricName": "",
                "Name": "",
                "RateKey": "",
                "RateLimit": ""
            },
            "Type:": "AWS::WAFRegional::RateBasedRule"
        },
        "aws-wafregional-regexpatternset": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "RegexPatternStrings": ""
            },
            "Type:": "AWS::WAFRegional::RegexPatternSet"
        },
        "aws-wafregional-rule": {
            "Metadata": {},
            "Properties": {
                "MetricName": "",
                "Name": "",
                "Predicates": ""
            },
            "Type:": "AWS::WAFRegional::Rule"
        },
        "aws-wafregional-sizeconstraintset": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "SizeConstraints": ""
            },
            "Type:": "AWS::WAFRegional::SizeConstraintSet"
        },
        "aws-wafregional-sqlinjectionmatchset": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "SqlInjectionMatchTuples": ""
            },
            "Type:": "AWS::WAFRegional::SqlInjectionMatchSet"
        },
        "aws-wafregional-webacl": {
            "Metadata": {},
            "Properties": {
                "DefaultAction": "",
                "MetricName": "",
                "Name": "",
                "Rules": ""
            },
            "Type:": "AWS::WAFRegional::WebACL"
        },
        "aws-wafregional-webaclassociation": {
            "Metadata": {},
            "Properties": {
                "ResourceArn": "",
                "WebACLId": ""
            },
            "Type:": "AWS::WAFRegional::WebACLAssociation"
        },
        "aws-wafregional-xssmatchset": {
            "Metadata": {},
            "Properties": {
                "Name": "",
                "XssMatchTuples": ""
            },
            "Type:": "AWS::WAFRegional::XssMatchSet"
        },
        "aws-wafv2-ipset": {
            "Metadata": {},
            "Properties": {
                "Addresses": "",
                "Description": "",
                "IPAddressVersion": "",
                "Name": "",
                "Scope": "",
                "Tags": ""
            },
            "Type:": "AWS::WAFv2::IPSet"
        },
        "aws-wafv2-regexpatternset": {
            "Metadata": {},
            "Properties": {
                "Description": "",
                "Name": "",
                "RegularExpressionList": "",
                "Scope": "",
                "Tags": ""
            },
            "Type:": "AWS::WAFv2::RegexPatternSet"
        },
        "aws-wafv2-rulegroup": {
            "Metadata": {},
            "Properties": {
                "Capacity": "",
                "CustomResponseBodies": "",
                "Description": "",
                "Name": "",
                "Rules": "",
                "Scope": "",
                "Tags": "",
                "VisibilityConfig": ""
            },
            "Type:": "AWS::WAFv2::RuleGroup"
        },
        "aws-wafv2-webacl": {
            "Metadata": {},
            "Properties": {
                "CustomResponseBodies": "",
                "DefaultAction": "",
                "Description": "",
                "Name": "",
                "Rules": "",
                "Scope": "",
                "Tags": "",
                "VisibilityConfig": ""
            },
            "Type:": "AWS::WAFv2::WebACL"
        },
        "aws-wafv2-webaclassociation": {
            "Metadata": {},
            "Properties": {
                "ResourceArn": "",
                "WebACLArn": ""
            },
            "Type:": "AWS::WAFv2::WebACLAssociation"
        },
        "aws-workspaces-connectionalias": {
            "Metadata": {},
            "Properties": {
                "ConnectionString": "",
                "Tags": ""
            },
            "Type:": "AWS::WorkSpaces::ConnectionAlias"
        },
        "aws-workspaces-workspace": {
            "Metadata": {},
            "Properties": {
                "BundleId": "",
                "DirectoryId": "",
                "RootVolumeEncryptionEnabled": "",
                "Tags": "",
                "UserName": "",
                "UserVolumeEncryptionEnabled": "",
                "VolumeEncryptionKey": "",
                "WorkspaceProperties": ""
            },
            "Type:": "AWS::WorkSpaces::Workspace"
        },
        "aws-xray-group": {
            "Metadata": {},
            "Properties": {
                "FilterExpression": "",
                "GroupName": "",
                "InsightsConfiguration": "",
                "Tags": ""
            },
            "Type:": "AWS::XRay::Group"
        },
        "aws-xray-samplingrule": {
            "Metadata": {},
            "Properties": {
                "RuleName": "",
                "SamplingRule": "",
                "SamplingRuleRecord": "",
                "SamplingRuleUpdate": "",
                "Tags": ""
            },
            "Type:": "AWS::XRay::SamplingRule"
        }
    },
    "Rules": {},
    "Transform": {}
}