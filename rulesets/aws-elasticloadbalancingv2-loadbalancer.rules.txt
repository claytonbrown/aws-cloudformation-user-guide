# #AWS::ElasticLoadBalancingV2::LoadBalancer IpAddressType  == dualstack |OR| AWS::ElasticLoadBalancingV2::LoadBalancer IpAddressType  == ipv4 << Enforce allowed values [dualstack | ipv4]
# #AWS::ElasticLoadBalancingV2::LoadBalancer Scheme  == internal |OR| AWS::ElasticLoadBalancingV2::LoadBalancer Scheme  == internet-facing << Enforce allowed values [internal | internet-facing]
# #AWS::ElasticLoadBalancingV2::LoadBalancer Type  == application |OR| AWS::ElasticLoadBalancingV2::LoadBalancer Type  == gateway |OR| AWS::ElasticLoadBalancingV2::LoadBalancer Type  == network << Enforce allowed values [application | gateway | network]
# AWS::ElasticLoadBalancingV2::LoadBalancer IpAddressType  == /dualstack/ <<  dualstack is an expected value for AWS::ElasticLoadBalancingV2::LoadBalancer IpAddressType
# AWS::ElasticLoadBalancingV2::LoadBalancer IpAddressType  == /ipv4/ <<  ipv4 is an expected value for AWS::ElasticLoadBalancingV2::LoadBalancer IpAddressType
# AWS::ElasticLoadBalancingV2::LoadBalancer IpAddressType IN [dualstack,ipv4] << Enforcing Allowed Values only
# AWS::ElasticLoadBalancingV2::LoadBalancer LoadBalancerAttributes.Key  == /\S/ <<  AWS::ElasticLoadBalancingV2::LoadBalancer is an expected but optional String property for LoadBalancerAttributes
# AWS::ElasticLoadBalancingV2::LoadBalancer LoadBalancerAttributes.Value  == /\S/ <<  AWS::ElasticLoadBalancingV2::LoadBalancer is an expected but optional String property for LoadBalancerAttributes
# AWS::ElasticLoadBalancingV2::LoadBalancer Scheme  == /internal/ <<  internal is an expected value for AWS::ElasticLoadBalancingV2::LoadBalancer Scheme
# AWS::ElasticLoadBalancingV2::LoadBalancer Scheme  == /internet-facing/ <<  internet-facing is an expected value for AWS::ElasticLoadBalancingV2::LoadBalancer Scheme
# AWS::ElasticLoadBalancingV2::LoadBalancer Scheme IN [internal,internet-facing] << Enforcing Allowed Values only
# AWS::ElasticLoadBalancingV2::LoadBalancer SubnetMappings.AllocationId  == /\S/ <<  AWS::ElasticLoadBalancingV2::LoadBalancer is an expected but optional String property for SubnetMappings
# AWS::ElasticLoadBalancingV2::LoadBalancer SubnetMappings.IPv6Address  == /\S/ <<  AWS::ElasticLoadBalancingV2::LoadBalancer is an expected but optional String property for SubnetMappings
# AWS::ElasticLoadBalancingV2::LoadBalancer SubnetMappings.PrivateIPv4Address  == /\S/ <<  AWS::ElasticLoadBalancingV2::LoadBalancer is an expected but optional String property for SubnetMappings
# AWS::ElasticLoadBalancingV2::LoadBalancer SubnetMappings.SubnetId  == /\S/ <<  AWS::ElasticLoadBalancingV2::LoadBalancer is an expected but optional String property for SubnetMappings
# AWS::ElasticLoadBalancingV2::LoadBalancer Type  == /application/ <<  application is an expected value for AWS::ElasticLoadBalancingV2::LoadBalancer Type
# AWS::ElasticLoadBalancingV2::LoadBalancer Type  == /gateway/ <<  gateway is an expected value for AWS::ElasticLoadBalancingV2::LoadBalancer Type
# AWS::ElasticLoadBalancingV2::LoadBalancer Type  == /network/ <<  network is an expected value for AWS::ElasticLoadBalancingV2::LoadBalancer Type
# AWS::ElasticLoadBalancingV2::LoadBalancer Type IN [application,gateway,network] << Enforcing Allowed Values only