# #AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == appstream:fleet:DesiredCapacity |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == cassandra:table:ReadCapacityUnits |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == cassandra:table:WriteCapacityUnits |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == comprehend:document-classifier-endpoint:DesiredInferenceUnits |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == comprehend:entity-recognizer-endpoint:DesiredInferenceUnits |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == custom-resource:ResourceType:Property |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == dynamodb:index:ReadCapacityUnits |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == dynamodb:index:WriteCapacityUnits |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == dynamodb:table:ReadCapacityUnits |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == dynamodb:table:WriteCapacityUnits |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == ec2:spot-fleet-request:TargetCapacity |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == ecs:service:DesiredCount |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == elasticmapreduce:instancegroup:InstanceCount |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == kafka:broker-storage:VolumeSize |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == lambda:function:ProvisionedConcurrency |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == rds:cluster:ReadReplicaCount |OR| AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == sagemaker:variant:DesiredInstanceCount << Enforce allowed values [appstream:fleet:DesiredCapacity | cassandra:table:ReadCapacityUnits | cassandra:table:WriteCapacityUnits | comprehend:document-classifier-endpoint:DesiredInferenceUnits | comprehend:entity-recognizer-endpoint:DesiredInferenceUnits | custom-resource:ResourceType:Property | dynamodb:index:ReadCapacityUnits | dynamodb:index:WriteCapacityUnits | dynamodb:table:ReadCapacityUnits | dynamodb:table:WriteCapacityUnits | ec2:spot-fleet-request:TargetCapacity | ecs:service:DesiredCount | elasticmapreduce:instancegroup:InstanceCount | kafka:broker-storage:VolumeSize | lambda:function:ProvisionedConcurrency | rds:cluster:ReadReplicaCount | sagemaker:variant:DesiredInstanceCount]
# #AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == appstream |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == cassandra |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == comprehend |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == custom-resource |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == dynamodb |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == ec2 |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == ecs |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == elasticmapreduce |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == kafka |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == lambda |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == rds |OR| AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == sagemaker << Enforce allowed values [appstream | cassandra | comprehend | custom-resource | dynamodb | ec2 | ecs | elasticmapreduce | kafka | lambda | rds | sagemaker]
# AWS::ApplicationAutoScaling::ScalingPolicy PolicyName  == /.*/ <<  PolicyName is a required property for AWS::ApplicationAutoScaling::ScalingPolicy
# AWS::ApplicationAutoScaling::ScalingPolicy PolicyName  == /\S{1,256}/ <<  PolicyName is a required property for AWS::ApplicationAutoScaling::ScalingPolicy
# AWS::ApplicationAutoScaling::ScalingPolicy PolicyName  == /\p{Print}+/ <<  PolicyName is a required pattern for AWS::ApplicationAutoScaling::ScalingPolicy
# AWS::ApplicationAutoScaling::ScalingPolicy ResourceId  == /[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*/ <<  ResourceId is a required pattern for AWS::ApplicationAutoScaling::ScalingPolicy
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /appstream:fleet:DesiredCapacity/ <<  appstream:fleet:DesiredCapacity is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /cassandra:table:ReadCapacityUnits/ <<  cassandra:table:ReadCapacityUnits is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /cassandra:table:WriteCapacityUnits/ <<  cassandra:table:WriteCapacityUnits is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /comprehend:document-classifier-endpoint:DesiredInferenceUnits/ <<  comprehend:document-classifier-endpoint:DesiredInferenceUnits is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /comprehend:entity-recognizer-endpoint:DesiredInferenceUnits/ <<  comprehend:entity-recognizer-endpoint:DesiredInferenceUnits is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /custom-resource:ResourceType:Property/ <<  custom-resource:ResourceType:Property is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /dynamodb:index:ReadCapacityUnits/ <<  dynamodb:index:ReadCapacityUnits is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /dynamodb:index:WriteCapacityUnits/ <<  dynamodb:index:WriteCapacityUnits is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /dynamodb:table:ReadCapacityUnits/ <<  dynamodb:table:ReadCapacityUnits is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /dynamodb:table:WriteCapacityUnits/ <<  dynamodb:table:WriteCapacityUnits is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /ec2:spot-fleet-request:TargetCapacity/ <<  ec2:spot-fleet-request:TargetCapacity is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /ecs:service:DesiredCount/ <<  ecs:service:DesiredCount is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /elasticmapreduce:instancegroup:InstanceCount/ <<  elasticmapreduce:instancegroup:InstanceCount is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /kafka:broker-storage:VolumeSize/ <<  kafka:broker-storage:VolumeSize is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /lambda:function:ProvisionedConcurrency/ <<  lambda:function:ProvisionedConcurrency is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /rds:cluster:ReadReplicaCount/ <<  rds:cluster:ReadReplicaCount is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension  == /sagemaker:variant:DesiredInstanceCount/ <<  sagemaker:variant:DesiredInstanceCount is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension
# AWS::ApplicationAutoScaling::ScalingPolicy ScalableDimension IN [appstream:fleet:DesiredCapacity,cassandra:table:ReadCapacityUnits,cassandra:table:WriteCapacityUnits,comprehend:document-classifier-endpoint:DesiredInferenceUnits,comprehend:entity-recognizer-endpoint:DesiredInferenceUnits,custom-resource:ResourceType:Property,dynamodb:index:ReadCapacityUnits,dynamodb:index:WriteCapacityUnits,dynamodb:table:ReadCapacityUnits,dynamodb:table:WriteCapacityUnits,ec2:spot-fleet-request:TargetCapacity,ecs:service:DesiredCount,elasticmapreduce:instancegroup:InstanceCount,kafka:broker-storage:VolumeSize,lambda:function:ProvisionedConcurrency,rds:cluster:ReadReplicaCount,sagemaker:variant:DesiredInstanceCount] << Enforcing Allowed Values only
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /appstream/ <<  appstream is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /cassandra/ <<  cassandra is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /comprehend/ <<  comprehend is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /custom-resource/ <<  custom-resource is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /dynamodb/ <<  dynamodb is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /ec2/ <<  ec2 is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /ecs/ <<  ecs is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /elasticmapreduce/ <<  elasticmapreduce is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /kafka/ <<  kafka is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /lambda/ <<  lambda is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /rds/ <<  rds is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace  == /sagemaker/ <<  sagemaker is an expected value for AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace
# AWS::ApplicationAutoScaling::ScalingPolicy ServiceNamespace IN [appstream,cassandra,comprehend,custom-resource,dynamodb,ec2,ecs,elasticmapreduce,kafka,lambda,rds,sagemaker] << Enforcing Allowed Values only
# AWS::ApplicationAutoScaling::ScalingPolicy StepScalingPolicyConfiguration.AdjustmentType  == /\S/ <<  AWS::ApplicationAutoScaling::ScalingPolicy is an expected but optional String property for StepScalingPolicyConfiguration
# AWS::ApplicationAutoScaling::ScalingPolicy StepScalingPolicyConfiguration.MetricAggregationType  == /\S/ <<  AWS::ApplicationAutoScaling::ScalingPolicy is an expected but optional String property for StepScalingPolicyConfiguration
# AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration.applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.TargetValue  == /.*/ <<  applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.TargetValue is a required property for AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration
# StepScalingPolicyConfiguration.AdjustmentType == ChangeInCapacity << Enforce Expected Value for applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.AdjustmentType
# StepScalingPolicyConfiguration.AdjustmentType == ExactCapacity << Enforce Expected Value for applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.AdjustmentType
# StepScalingPolicyConfiguration.AdjustmentType == PercentChangeInCapacity << Enforce Expected Value for applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.AdjustmentType
# StepScalingPolicyConfiguration.AdjustmentType IN [ChangeInCapacity,ExactCapacity,PercentChangeInCapacity] << Enforce Allowed Values
# StepScalingPolicyConfiguration.MetricAggregationType == Average << Enforce Expected Value for applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MetricAggregationType
# StepScalingPolicyConfiguration.MetricAggregationType == Maximum << Enforce Expected Value for applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MetricAggregationType
# StepScalingPolicyConfiguration.MetricAggregationType == Minimum << Enforce Expected Value for applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MetricAggregationType
# StepScalingPolicyConfiguration.MetricAggregationType IN [Average,Maximum,Minimum] << Enforce Allowed Values
# TargetTrackingScalingPolicyConfiguration.DisableScaleIn == False << Enforce Expected Value for applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.DisableScaleIn
# TargetTrackingScalingPolicyConfiguration.DisableScaleIn == True << Enforce Expected Value for applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.DisableScaleIn
# TargetTrackingScalingPolicyConfiguration.DisableScaleIn IN [True,False] << Enforce Allowed Values